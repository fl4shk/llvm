!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/249c3c0/
A	StackMapParser.h	/^    AccessorT A;$/;"	kind:m	class:llvm::StackMapV2Parser::AccessorIterator	typeref:typename:AccessorT	access:private
AccessMode	Archive.h	/^    char AccessMode[8];$/;"	kind:m	struct:llvm::object::ArchiveMemberHeader::ArMemHdrType	typeref:typename:char[8]	access:public
AccessorIterator	StackMapParser.h	/^    AccessorIterator(AccessorT A) : A(A) {}$/;"	kind:f	class:llvm::StackMapV2Parser::AccessorIterator	access:public	signature:(AccessorT A)
AccessorIterator	StackMapParser.h	/^  class AccessorIterator {$/;"	kind:c	class:llvm::StackMapV2Parser	access:public
Addend	MachO.h	/^  int64_t  Addend;$/;"	kind:m	class:llvm::object::MachOBindEntry	typeref:typename:int64_t	access:private
Addr	ELFTypes.h	/^  typedef packed<uint> Addr;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:packed<uint>	access:public
Address	MachO.h	/^    uint64_t Address;$/;"	kind:m	struct:llvm::object::ExportEntry::NodeState	typeref:typename:uint64_t	access:public
Address	SymbolSize.h	/^  uint64_t Address;$/;"	kind:m	struct:llvm::object::SymEntry	typeref:typename:uint64_t	access:public
AddressOfCallBacks	COFF.h	/^  IntTy AddressOfCallBacks;$/;"	kind:m	struct:llvm::object::coff_tls_directory	typeref:typename:IntTy	access:public
AddressOfEntryPoint	COFF.h	/^  support::ulittle32_t AddressOfEntryPoint;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
AddressOfEntryPoint	COFF.h	/^  support::ulittle32_t AddressOfEntryPoint;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle32_t	access:public
AddressOfIndex	COFF.h	/^  IntTy AddressOfIndex;$/;"	kind:m	struct:llvm::object::coff_tls_directory	typeref:typename:IntTy	access:public
AddressOfNewExeHeader	COFF.h	/^  support::ulittle32_t AddressOfNewExeHeader;$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle32_t	access:public
AddressOfRawData	COFF.h	/^  support::ulittle32_t AddressOfRawData;$/;"	kind:m	struct:llvm::object::debug_directory	typeref:typename:support::ulittle32_t	access:public
AddressOfRelocationTable	COFF.h	/^  support::ulittle16_t AddressOfRelocationTable;$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle16_t	access:public
AddressTableEntries	COFF.h	/^  support::ulittle32_t AddressTableEntries;$/;"	kind:m	struct:llvm::object::export_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
AdvanceAmount	MachO.h	/^  uint64_t AdvanceAmount;$/;"	kind:m	class:llvm::object::MachOBindEntry	typeref:typename:uint64_t	access:private
AdvanceAmount	MachO.h	/^  uint64_t AdvanceAmount;$/;"	kind:m	class:llvm::object::MachORebaseEntry	typeref:typename:uint64_t	access:private
ArMemHdr	Archive.h	/^  ArMemHdrType const *ArMemHdr;$/;"	kind:m	class:llvm::object::ArchiveMemberHeader	typeref:typename:ArMemHdrType const *	access:private
ArMemHdrType	Archive.h	/^  struct ArMemHdrType {$/;"	kind:s	class:llvm::object::ArchiveMemberHeader	access:private
Archive	Archive.h	/^    friend Archive;$/;"	kind:m	class:llvm::object::Archive::Child	access:private
Archive	Archive.h	/^  Archive(MemoryBufferRef Source, Error &Err);$/;"	kind:p	class:llvm::object::Archive	access:public	signature:(MemoryBufferRef Source,Error & Err)
Archive	Archive.h	/^class Archive : public Binary {$/;"	kind:c	namespace:llvm::object	inherits:Binary
ArchiveMemberHeader	Archive.h	/^    friend ArchiveMemberHeader;$/;"	kind:m	class:llvm::object::Archive::Child	access:private
ArchiveMemberHeader	Archive.h	/^  ArchiveMemberHeader(Archive const *Parent, const char *RawHeaderPtr,$/;"	kind:p	class:llvm::object::ArchiveMemberHeader	access:public	signature:(Archive const * Parent,const char * RawHeaderPtr,uint64_t Size,Error * Err)
ArchiveMemberHeader	Archive.h	/^class ArchiveMemberHeader {$/;"	kind:c	namespace:llvm::object
AsmSymbol	IRObjectFile.h	/^  typedef std::pair<std::string, uint32_t> AsmSymbol;$/;"	kind:t	class:llvm::object::IRObjectFile	typeref:typename:std::pair<std::string,uint32_t>	access:private
AsmSymbols	IRObjectFile.h	/^  SpecificBumpPtrAllocator<AsmSymbol> AsmSymbols;$/;"	kind:m	class:llvm::object::IRObjectFile	typeref:typename:SpecificBumpPtrAllocator<AsmSymbol>	access:private
Attributes	COFF.h	/^  support::ulittle16_t Attributes;$/;"	kind:m	struct:llvm::object::FpoData	typeref:typename:support::ulittle16_t	access:public
Attributes	COFF.h	/^  support::ulittle32_t Attributes;$/;"	kind:m	struct:llvm::object::delay_import_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
AuxType	COFF.h	/^  uint8_t              AuxType;$/;"	kind:m	struct:llvm::object::coff_aux_clr_token	typeref:typename:uint8_t	access:public
BaseOfCode	COFF.h	/^  support::ulittle32_t BaseOfCode;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
BaseOfCode	COFF.h	/^  support::ulittle32_t BaseOfCode;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle32_t	access:public
BaseOfData	COFF.h	/^  support::ulittle32_t BaseOfData;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
BaseRelocEnd	COFF.h	/^  const coff_base_reloc_block_header *BaseRelocEnd;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:const coff_base_reloc_block_header *	access:private
BaseRelocHeader	COFF.h	/^  const coff_base_reloc_block_header *BaseRelocHeader;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:const coff_base_reloc_block_header *	access:private
BaseRelocRef	COFF.h	/^  BaseRelocRef() : OwningObject(nullptr) {}$/;"	kind:f	class:llvm::object::BaseRelocRef	access:public	signature:()
BaseRelocRef	COFF.h	/^  BaseRelocRef(const coff_base_reloc_block_header *Header,$/;"	kind:f	class:llvm::object::BaseRelocRef	access:public	signature:(const coff_base_reloc_block_header * Header,const COFFObjectFile * Owner)
BaseRelocRef	COFF.h	/^class BaseRelocRef {$/;"	kind:c	namespace:llvm::object
BasicSymbolRef	SymbolicFile.h	/^  BasicSymbolRef() : OwningObject(nullptr) { }$/;"	kind:f	class:llvm::object::BasicSymbolRef	access:public	signature:()
BasicSymbolRef	SymbolicFile.h	/^  BasicSymbolRef(DataRefImpl SymbolP, const SymbolicFile *Owner);$/;"	kind:p	class:llvm::object::BasicSymbolRef	access:public	signature:(DataRefImpl SymbolP,const SymbolicFile * Owner)
BasicSymbolRef	SymbolicFile.h	/^class BasicSymbolRef {$/;"	kind:c	namespace:llvm::object
BasicSymbolRef	SymbolicFile.h	/^inline BasicSymbolRef::BasicSymbolRef(DataRefImpl SymbolP,$/;"	kind:f	class:llvm::object::BasicSymbolRef	signature:(DataRefImpl SymbolP,const SymbolicFile * Owner)
BeginAddress	COFF.h	/^  support::ulittle32_t BeginAddress;$/;"	kind:m	struct:llvm::object::coff_runtime_function_x64	typeref:typename:support::ulittle32_t	access:public
Bin	Binary.h	/^  std::unique_ptr<T> Bin;$/;"	kind:m	class:llvm::object::OwningBinary	typeref:typename:std::unique_ptr<T>	access:private
Binary	Binary.h	/^  Binary() = delete;$/;"	kind:p	class:llvm::object::Binary	access:private	signature:()
Binary	Binary.h	/^  Binary(const Binary &other) = delete;$/;"	kind:p	class:llvm::object::Binary	access:private	signature:(const Binary & other)
Binary	Binary.h	/^  Binary(unsigned int Type, MemoryBufferRef Source);$/;"	kind:p	class:llvm::object::Binary	access:protected	signature:(unsigned int Type,MemoryBufferRef Source)
Binary	Binary.h	/^class Binary {$/;"	kind:c	namespace:llvm::object
BinaryError	Error.h	/^  BinaryError() {$/;"	kind:f	class:llvm::object::BinaryError	access:public	signature:()
BinaryError	Error.h	/^class BinaryError : public ErrorInfo<BinaryError, ECError> {$/;"	kind:c	namespace:llvm::object	inherits:ErrorInfo<BinaryError,ECError>
BindType	MachO.h	/^  uint8_t  BindType;$/;"	kind:m	class:llvm::object::MachOBindEntry	typeref:typename:uint8_t	access:private
BlockSize	COFF.h	/^  support::ulittle32_t BlockSize;$/;"	kind:m	struct:llvm::object::coff_base_reloc_block_header	typeref:typename:support::ulittle32_t	access:public
BoundDelayImportTable	COFF.h	/^  support::ulittle32_t BoundDelayImportTable;$/;"	kind:m	struct:llvm::object::delay_import_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
Buf	ArchiveWriter.h	/^  std::unique_ptr<MemoryBuffer> Buf;$/;"	kind:m	struct:llvm::NewArchiveMember	typeref:typename:std::unique_ptr<MemoryBuffer>	access:public
Buf	Binary.h	/^  std::unique_ptr<MemoryBuffer> Buf;$/;"	kind:m	class:llvm::object::OwningBinary	typeref:typename:std::unique_ptr<MemoryBuffer>	access:private
Buf	ELF.h	/^  StringRef Buf;$/;"	kind:m	class:llvm::object::ELFFile	typeref:typename:StringRef	access:private
C	Archive.h	/^    Child C;$/;"	kind:m	class:llvm::object::Archive::child_iterator	typeref:typename:Child	access:private
C	MachO.h	/^    MachO::load_command C; \/\/ The command itself.$/;"	kind:m	struct:llvm::object::MachOObjectFile::LoadCommandInfo	typeref:typename:MachO::load_command	access:public
COFFBigObjHeader	COFF.h	/^  const coff_bigobj_file_header *COFFBigObjHeader;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:const coff_bigobj_file_header *	access:private
COFFHeader	COFF.h	/^  const coff_file_header *COFFHeader;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:const coff_file_header *	access:private
COFFImportFile	COFFImportFile.h	/^  COFFImportFile(MemoryBufferRef Source)$/;"	kind:f	class:llvm::object::COFFImportFile	access:public	signature:(MemoryBufferRef Source)
COFFImportFile	COFFImportFile.h	/^class COFFImportFile : public SymbolicFile {$/;"	kind:c	namespace:llvm::object	inherits:SymbolicFile
COFFObjectFile	COFF.h	/^  COFFObjectFile(MemoryBufferRef Object, std::error_code &EC);$/;"	kind:p	class:llvm::object::COFFObjectFile	access:public	signature:(MemoryBufferRef Object,std::error_code & EC)
COFFObjectFile	COFF.h	/^class COFFObjectFile : public ObjectFile {$/;"	kind:c	namespace:llvm::object	inherits:ObjectFile
COFFSymbolRef	COFF.h	/^  COFFSymbolRef() : CS16(nullptr), CS32(nullptr) {}$/;"	kind:f	class:llvm::object::COFFSymbolRef	access:public	signature:()
COFFSymbolRef	COFF.h	/^  COFFSymbolRef(const coff_symbol16 *CS) : CS16(CS), CS32(nullptr) {}$/;"	kind:f	class:llvm::object::COFFSymbolRef	access:public	signature:(const coff_symbol16 * CS)
COFFSymbolRef	COFF.h	/^  COFFSymbolRef(const coff_symbol32 *CS) : CS16(nullptr), CS32(CS) {}$/;"	kind:f	class:llvm::object::COFFSymbolRef	access:public	signature:(const coff_symbol32 * CS)
COFFSymbolRef	COFF.h	/^class COFFSymbolRef {$/;"	kind:c	namespace:llvm::object
CS16	COFF.h	/^  const coff_symbol16 *CS16;$/;"	kind:m	class:llvm::object::COFFSymbolRef	typeref:typename:const coff_symbol16 *	access:private
CS32	COFF.h	/^  const coff_symbol32 *CS32;$/;"	kind:m	class:llvm::object::COFFSymbolRef	typeref:typename:const coff_symbol32 *	access:private
CSDVersion	COFF.h	/^  support::ulittle16_t CSDVersion;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle16_t	access:public
CSDVersion	COFF.h	/^  support::ulittle16_t CSDVersion;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle16_t	access:public
Characteristics	COFF.h	/^  support::ulittle16_t Characteristics;$/;"	kind:m	struct:llvm::object::coff_file_header	typeref:typename:support::ulittle16_t	access:public
Characteristics	COFF.h	/^  support::ulittle32_t Characteristics;$/;"	kind:m	struct:llvm::object::coff_aux_weak_external	typeref:typename:support::ulittle32_t	access:public
Characteristics	COFF.h	/^  support::ulittle32_t Characteristics;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle32_t	access:public
Characteristics	COFF.h	/^  support::ulittle32_t Characteristics;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle32_t	access:public
Characteristics	COFF.h	/^  support::ulittle32_t Characteristics;$/;"	kind:m	struct:llvm::object::coff_section	typeref:typename:support::ulittle32_t	access:public
Characteristics	COFF.h	/^  support::ulittle32_t Characteristics;$/;"	kind:m	struct:llvm::object::coff_tls_directory	typeref:typename:support::ulittle32_t	access:public
Characteristics	COFF.h	/^  support::ulittle32_t Characteristics;$/;"	kind:m	struct:llvm::object::debug_directory	typeref:typename:support::ulittle32_t	access:public
Chdr	ELFTypes.h	/^  typedef Elf_Chdr_Impl<ELFType<E, Is64>> Chdr;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:Elf_Chdr_Impl<ELFType<E,Is64>>	access:public
CheckSum	COFF.h	/^  support::ulittle32_t CheckSum;$/;"	kind:m	struct:llvm::object::coff_aux_section_definition	typeref:typename:support::ulittle32_t	access:public
CheckSum	COFF.h	/^  support::ulittle32_t CheckSum;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
CheckSum	COFF.h	/^  support::ulittle32_t CheckSum;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle32_t	access:public
Checksum	COFF.h	/^  support::ulittle16_t Checksum;$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle16_t	access:public
Child	Archive.h	/^    Child(const Archive *Parent, StringRef Data, uint16_t StartOfFile);$/;"	kind:p	class:llvm::object::Archive::Child	access:public	signature:(const Archive * Parent,StringRef Data,uint16_t StartOfFile)
Child	Archive.h	/^    Child(const Archive *Parent, const char *Start, Error *Err);$/;"	kind:p	class:llvm::object::Archive::Child	access:public	signature:(const Archive * Parent,const char * Start,Error * Err)
Child	Archive.h	/^  class Child {$/;"	kind:c	class:llvm::object::Archive	access:public
ChildCount	MachO.h	/^    unsigned ChildCount;$/;"	kind:m	struct:llvm::object::ExportEntry::NodeState	typeref:typename:unsigned	access:public
CollectAsmUndefinedRefs	IRObjectFile.h	/^  static void CollectAsmUndefinedRefs($/;"	kind:p	class:llvm::object::IRObjectFile	typeref:typename:void	access:public	signature:(const Triple & TheTriple,StringRef InlineAsm,function_ref<void (StringRef,BasicSymbolRef::Flags)> AsmUndefinedRefs)
Constant	StackMapParser.h	/^    Register = 1, Direct = 2, Indirect = 3, Constant = 4, ConstantIndex = 5$/;"	kind:e	enum:llvm::StackMapV2Parser::LocationKind	access:public
ConstantAccessor	StackMapParser.h	/^    ConstantAccessor(const uint8_t *P) : P(P) {}$/;"	kind:f	class:llvm::StackMapV2Parser::ConstantAccessor	access:private	signature:(const uint8_t * P)
ConstantAccessor	StackMapParser.h	/^  class ConstantAccessor {$/;"	kind:c	class:llvm::StackMapV2Parser	access:public
ConstantAccessorSize	StackMapParser.h	/^    const static int ConstantAccessorSize = sizeof(uint64_t);$/;"	kind:m	class:llvm::StackMapV2Parser::ConstantAccessor	typeref:typename:const int	access:private
ConstantIndex	StackMapParser.h	/^    Register = 1, Direct = 2, Indirect = 3, Constant = 4, ConstantIndex = 5$/;"	kind:e	enum:llvm::StackMapV2Parser::LocationKind	access:public
ConstantSize	StackMapParser.h	/^  static const unsigned ConstantSize = sizeof(uint64_t);$/;"	kind:m	class:llvm::StackMapV2Parser	typeref:typename:const unsigned	access:private
ConstantsListOffset	StackMapParser.h	/^  unsigned ConstantsListOffset;$/;"	kind:m	class:llvm::StackMapV2Parser	typeref:typename:unsigned	access:private
CriticalSectionDefaultTimeout	COFF.h	/^  support::ulittle32_t CriticalSectionDefaultTimeout;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle32_t	access:public
CriticalSectionDefaultTimeout	COFF.h	/^  support::ulittle32_t CriticalSectionDefaultTimeout;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle32_t	access:public
CumulativeString	MachO.h	/^  SmallString<256> CumulativeString;$/;"	kind:m	class:llvm::object::ExportEntry	typeref:typename:SmallString<256>	access:private
Current	MachO.h	/^    const uint8_t *Current;$/;"	kind:m	struct:llvm::object::ExportEntry::NodeState	typeref:typename:const uint8_t *	access:public
Current	SymbolicFile.h	/^  content_type Current;$/;"	kind:m	class:llvm::object::content_iterator	typeref:typename:content_type	access:private
DLLCharacteristics	COFF.h	/^  support::ulittle16_t DLLCharacteristics;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle16_t	access:public
DLLCharacteristics	COFF.h	/^  support::ulittle16_t DLLCharacteristics;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle16_t	access:public
Data	Archive.h	/^    StringRef Data;$/;"	kind:m	class:llvm::object::Archive::Child	typeref:typename:StringRef	access:private
Data	Binary.h	/^  MemoryBufferRef Data;$/;"	kind:m	class:llvm::object::Binary	typeref:typename:MemoryBufferRef	access:protected
Data	COFF.h	/^  IntTy Data;$/;"	kind:m	struct:llvm::object::import_lookup_table_entry	typeref:typename:IntTy	access:public
Data	COFF.h	/^  support::ulittle16_t Data;$/;"	kind:m	struct:llvm::object::coff_base_reloc_block_entry	typeref:typename:support::ulittle16_t	access:public
DataDirectory	COFF.h	/^  const data_directory *DataDirectory;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:const data_directory *	access:private
DataInCodeLoadCmd	MachO.h	/^  const char *DataInCodeLoadCmd;$/;"	kind:m	class:llvm::object::MachOObjectFile	typeref:typename:const char *	access:private
DataRefImpl	SymbolicFile.h	/^  DataRefImpl() { std::memset(this, 0, sizeof(DataRefImpl)); }$/;"	kind:f	union:llvm::object::DataRefImpl	access:public	signature:()
DataRefImpl	SymbolicFile.h	/^union DataRefImpl {$/;"	kind:u	namespace:llvm::object
DeCommitFreeBlockThreshold	COFF.h	/^  support::ulittle32_t DeCommitFreeBlockThreshold;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle32_t	access:public
DeCommitFreeBlockThreshold	COFF.h	/^  support::ulittle32_t DeCommitFreeBlockThreshold;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle32_t	access:public
DeCommitTotalFreeThreshold	COFF.h	/^  support::ulittle32_t DeCommitTotalFreeThreshold;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle32_t	access:public
DeCommitTotalFreeThreshold	COFF.h	/^  support::ulittle32_t DeCommitTotalFreeThreshold;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle32_t	access:public
DebugDirectoryBegin	COFF.h	/^  const debug_directory *DebugDirectoryBegin;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:const debug_directory *	access:private
DebugDirectoryEnd	COFF.h	/^  const debug_directory *DebugDirectoryEnd;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:const debug_directory *	access:private
DelayImportAddressTable	COFF.h	/^  support::ulittle32_t DelayImportAddressTable;$/;"	kind:m	struct:llvm::object::delay_import_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
DelayImportDirectory	COFF.h	/^  const delay_import_directory_table_entry *DelayImportDirectory;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:const delay_import_directory_table_entry *	access:private
DelayImportDirectoryEntryRef	COFF.h	/^  DelayImportDirectoryEntryRef() : OwningObject(nullptr) {}$/;"	kind:f	class:llvm::object::DelayImportDirectoryEntryRef	access:public	signature:()
DelayImportDirectoryEntryRef	COFF.h	/^  DelayImportDirectoryEntryRef(const delay_import_directory_table_entry *T,$/;"	kind:f	class:llvm::object::DelayImportDirectoryEntryRef	access:public	signature:(const delay_import_directory_table_entry * T,uint32_t I,const COFFObjectFile * Owner)
DelayImportDirectoryEntryRef	COFF.h	/^class DelayImportDirectoryEntryRef {$/;"	kind:c	namespace:llvm::object
DelayImportNameTable	COFF.h	/^  support::ulittle32_t DelayImportNameTable;$/;"	kind:m	struct:llvm::object::delay_import_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
DicePimpl	MachO.h	/^  DataRefImpl DicePimpl;$/;"	kind:m	class:llvm::object::DiceRef	typeref:typename:DataRefImpl	access:private
DiceRef	MachO.h	/^  DiceRef() : OwningObject(nullptr) { }$/;"	kind:f	class:llvm::object::DiceRef	access:public	signature:()
DiceRef	MachO.h	/^  DiceRef(DataRefImpl DiceP, const ObjectFile *Owner);$/;"	kind:p	class:llvm::object::DiceRef	access:public	signature:(DataRefImpl DiceP,const ObjectFile * Owner)
DiceRef	MachO.h	/^class DiceRef {$/;"	kind:c	namespace:llvm::object
DiceRef	MachO.h	/^inline DiceRef::DiceRef(DataRefImpl DiceP, const ObjectFile *Owner)$/;"	kind:f	class:llvm::object::DiceRef	signature:(DataRefImpl DiceP,const ObjectFile * Owner)
Direct	StackMapParser.h	/^    Register = 1, Direct = 2, Indirect = 3, Constant = 4, ConstantIndex = 5$/;"	kind:e	enum:llvm::StackMapV2Parser::LocationKind	access:public
Done	MachO.h	/^  bool     Done;$/;"	kind:m	class:llvm::object::MachOBindEntry	typeref:typename:bool	access:private
Done	MachO.h	/^  bool     Done;$/;"	kind:m	class:llvm::object::MachORebaseEntry	typeref:typename:bool	access:private
Done	MachO.h	/^  bool Done;$/;"	kind:m	class:llvm::object::ExportEntry	typeref:typename:bool	access:private
DotDynSymSec	ELFObjectFile.h	/^  const Elf_Shdr *DotDynSymSec = nullptr; \/\/ Dynamic symbol table section.$/;"	kind:m	class:llvm::object::ELFObjectFile	typeref:typename:const Elf_Shdr *	access:protected
DotSymtabSec	ELFObjectFile.h	/^  const Elf_Shdr *DotSymtabSec = nullptr; \/\/ Symbol table section.$/;"	kind:m	class:llvm::object::ELFObjectFile	typeref:typename:const Elf_Shdr *	access:protected
DwarfRegNumOffset	StackMapParser.h	/^    static const int DwarfRegNumOffset = 0;$/;"	kind:m	class:llvm::StackMapV2Parser::LiveOutAccessor	typeref:typename:const int	access:private
DwarfRegNumOffset	StackMapParser.h	/^    static const int DwarfRegNumOffset = KindOffset + sizeof(uint16_t);$/;"	kind:m	class:llvm::StackMapV2Parser::LocationAccessor	typeref:typename:const int	access:private
DyldInfoLoadCmd	MachO.h	/^  const char *DyldInfoLoadCmd;$/;"	kind:m	class:llvm::object::MachOObjectFile	typeref:typename:const char *	access:private
Dyn	ELFTypes.h	/^  typedef Elf_Dyn_Impl<ELFType<E, Is64>> Dyn;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:Elf_Dyn_Impl<ELFType<E,Is64>>	access:public
DynRange	ELFTypes.h	/^  typedef ArrayRef<Dyn> DynRange;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:ArrayRef<Dyn>	access:public
DysymtabLoadCmd	MachO.h	/^  const char *DysymtabLoadCmd;$/;"	kind:m	class:llvm::object::MachOObjectFile	typeref:typename:const char *	access:private
E	Archive.h	/^    Error *E;$/;"	kind:m	class:llvm::object::Archive::child_iterator	typeref:typename:Error *	access:private
EF	ELFObjectFile.h	/^  ELFFile<ELFT> EF;$/;"	kind:m	class:llvm::object::ELFObjectFile	typeref:typename:ELFFile<ELFT>	access:protected
ELF32BE	ELFTypes.h	/^typedef ELFType<support::big, false> ELF32BE;$/;"	kind:t	namespace:llvm::object	typeref:typename:ELFType<support::big,false>
ELF32BEFile	ELF.h	/^typedef ELFFile<ELFType<support::big, false>> ELF32BEFile;$/;"	kind:t	namespace:llvm::object	typeref:typename:ELFFile<ELFType<support::big,false>>
ELF32BEObjectFile	ELFObjectFile.h	/^typedef ELFObjectFile<ELFType<support::big, false>> ELF32BEObjectFile;$/;"	kind:t	namespace:llvm::object	typeref:typename:ELFObjectFile<ELFType<support::big,false>>
ELF32LE	ELFTypes.h	/^typedef ELFType<support::little, false> ELF32LE;$/;"	kind:t	namespace:llvm::object	typeref:typename:ELFType<support::little,false>
ELF32LEFile	ELF.h	/^typedef ELFFile<ELFType<support::little, false>> ELF32LEFile;$/;"	kind:t	namespace:llvm::object	typeref:typename:ELFFile<ELFType<support::little,false>>
ELF32LEObjectFile	ELFObjectFile.h	/^typedef ELFObjectFile<ELFType<support::little, false>> ELF32LEObjectFile;$/;"	kind:t	namespace:llvm::object	typeref:typename:ELFObjectFile<ELFType<support::little,false>>
ELF64BE	ELFTypes.h	/^typedef ELFType<support::big, true> ELF64BE;$/;"	kind:t	namespace:llvm::object	typeref:typename:ELFType<support::big,true>
ELF64BEFile	ELF.h	/^typedef ELFFile<ELFType<support::big, true>> ELF64BEFile;$/;"	kind:t	namespace:llvm::object	typeref:typename:ELFFile<ELFType<support::big,true>>
ELF64BEObjectFile	ELFObjectFile.h	/^typedef ELFObjectFile<ELFType<support::big, true>> ELF64BEObjectFile;$/;"	kind:t	namespace:llvm::object	typeref:typename:ELFObjectFile<ELFType<support::big,true>>
ELF64LE	ELFTypes.h	/^typedef ELFType<support::little, true> ELF64LE;$/;"	kind:t	namespace:llvm::object	typeref:typename:ELFType<support::little,true>
ELF64LEFile	ELF.h	/^typedef ELFFile<ELFType<support::little, true>> ELF64LEFile;$/;"	kind:t	namespace:llvm::object	typeref:typename:ELFFile<ELFType<support::little,true>>
ELF64LEObjectFile	ELFObjectFile.h	/^typedef ELFObjectFile<ELFType<support::little, true>> ELF64LEObjectFile;$/;"	kind:t	namespace:llvm::object	typeref:typename:ELFObjectFile<ELFType<support::little,true>>
ELFDataTypeTypedefHelper	ELFTypes.h	/^struct ELFDataTypeTypedefHelper<ELFType<TargetEndianness, false>>$/;"	kind:s	namespace:llvm::object	inherits:ELFDataTypeTypedefHelperCommon<TargetEndianness>
ELFDataTypeTypedefHelper	ELFTypes.h	/^struct ELFDataTypeTypedefHelper<ELFType<TargetEndianness, true>>$/;"	kind:s	namespace:llvm::object	inherits:ELFDataTypeTypedefHelperCommon<TargetEndianness>
ELFDataTypeTypedefHelperCommon	ELFTypes.h	/^template <endianness target_endianness> struct ELFDataTypeTypedefHelperCommon {$/;"	kind:s	namespace:llvm::object
ELFFile	ELF.h	/^  ELFFile(StringRef Object);$/;"	kind:p	class:llvm::object::ELFFile	access:public	signature:(StringRef Object)
ELFFile	ELF.h	/^ELFFile<ELFT>::ELFFile(StringRef Object) : Buf(Object) {$/;"	kind:f	class:llvm::object::ELFFile	signature:(StringRef Object)
ELFFile	ELF.h	/^class ELFFile {$/;"	kind:c	namespace:llvm::object
ELFObjectFile	ELFObjectFile.h	/^  ELFObjectFile(MemoryBufferRef Object, std::error_code &EC);$/;"	kind:p	class:llvm::object::ELFObjectFile	access:public	signature:(MemoryBufferRef Object,std::error_code & EC)
ELFObjectFile	ELFObjectFile.h	/^ELFObjectFile<ELFT>::ELFObjectFile(MemoryBufferRef Object, std::error_code &EC)$/;"	kind:f	class:llvm::object::ELFObjectFile	signature:(MemoryBufferRef Object,std::error_code & EC)
ELFObjectFile	ELFObjectFile.h	/^template <class ELFT> class ELFObjectFile : public ELFObjectFileBase {$/;"	kind:c	namespace:llvm::object	inherits:ELFObjectFileBase
ELFObjectFileBase	ELFObjectFile.h	/^  ELFObjectFileBase(unsigned int Type, MemoryBufferRef Source);$/;"	kind:p	class:llvm::object::ELFObjectFileBase	access:protected	signature:(unsigned int Type,MemoryBufferRef Source)
ELFObjectFileBase	ELFObjectFile.h	/^class ELFObjectFileBase : public ObjectFile {$/;"	kind:c	namespace:llvm::object	inherits:ObjectFile
ELFRelocationRef	ELFObjectFile.h	/^  ELFRelocationRef(const RelocationRef &B) : RelocationRef(B) {$/;"	kind:f	class:llvm::object::ELFRelocationRef	access:public	signature:(const RelocationRef & B)
ELFRelocationRef	ELFObjectFile.h	/^class ELFRelocationRef : public RelocationRef {$/;"	kind:c	namespace:llvm::object	inherits:RelocationRef
ELFSectionRef	ELFObjectFile.h	/^  ELFSectionRef(const SectionRef &B) : SectionRef(B) {$/;"	kind:f	class:llvm::object::ELFSectionRef	access:public	signature:(const SectionRef & B)
ELFSectionRef	ELFObjectFile.h	/^class ELFSectionRef : public SectionRef {$/;"	kind:c	namespace:llvm::object	inherits:SectionRef
ELFSymbolRef	ELFObjectFile.h	/^  ELFSymbolRef(const SymbolRef &B) : SymbolRef(B) {$/;"	kind:f	class:llvm::object::ELFSymbolRef	access:public	signature:(const SymbolRef & B)
ELFSymbolRef	ELFObjectFile.h	/^class ELFSymbolRef : public SymbolRef {$/;"	kind:c	namespace:llvm::object	inherits:SymbolRef
ELFType	ELFTypes.h	/^template <endianness E, bool Is64> struct ELFType {$/;"	kind:s	namespace:llvm::object
EditList	COFF.h	/^  support::ulittle32_t EditList;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle32_t	access:public
EditList	COFF.h	/^  support::ulittle32_t EditList;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle32_t	access:public
Ehdr	ELFTypes.h	/^  typedef Elf_Ehdr_Impl<ELFType<E, Is64>> Ehdr;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:Elf_Ehdr_Impl<ELFType<E,Is64>>	access:public
Elf_Addr	ELFTypes.h	/^      value_type, TargetEndianness, 2> Elf_Addr;$/;"	kind:t	struct:llvm::object::ELFDataTypeTypedefHelper	typeref:typename:support::detail::packed_endian_specific_integral<value_type,TargetEndianness,2>	access:public
Elf_Chdr_Impl	ELFTypes.h	/^struct Elf_Chdr_Impl<ELFType<TargetEndianness, false>> {$/;"	kind:s	namespace:llvm::object
Elf_Chdr_Impl	ELFTypes.h	/^struct Elf_Chdr_Impl<ELFType<TargetEndianness, true>> {$/;"	kind:s	namespace:llvm::object
Elf_Dyn	ELF.h	/^  typedef typename ELFT::Dyn Elf_Dyn;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::Dyn	access:public
Elf_Dyn	ELFObjectFile.h	/^  typedef typename ELFFile<ELFT>::Elf_Dyn Elf_Dyn;$/;"	kind:t	class:llvm::object::ELFObjectFile	typeref:typename:ELFFile<ELFT>::Elf_Dyn	access:public
Elf_Dyn_Base	ELFTypes.h	/^struct Elf_Dyn_Base<ELFType<TargetEndianness, false>> {$/;"	kind:s	namespace:llvm::object
Elf_Dyn_Base	ELFTypes.h	/^struct Elf_Dyn_Base<ELFType<TargetEndianness, true>> {$/;"	kind:s	namespace:llvm::object
Elf_Dyn_Impl	ELFTypes.h	/^struct Elf_Dyn_Impl : Elf_Dyn_Base<ELFT> {$/;"	kind:s	namespace:llvm::object	inherits:Elf_Dyn_Base<ELFT>
Elf_Dyn_Range	ELF.h	/^  typedef typename ELFT::DynRange Elf_Dyn_Range;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::DynRange	access:public
Elf_Ehdr	ELF.h	/^  typedef typename ELFT::Ehdr Elf_Ehdr;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::Ehdr	access:public
Elf_Ehdr	ELFObjectFile.h	/^  typedef typename ELFFile<ELFT>::Elf_Ehdr Elf_Ehdr;$/;"	kind:t	class:llvm::object::ELFObjectFile	typeref:typename:ELFFile<ELFT>::Elf_Ehdr	access:public
Elf_Ehdr_Impl	ELFTypes.h	/^struct Elf_Ehdr_Impl {$/;"	kind:s	namespace:llvm::object
Elf_GnuHash	ELF.h	/^  typedef typename ELFT::GnuHash Elf_GnuHash;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::GnuHash	access:public
Elf_GnuHash_Impl	ELFTypes.h	/^struct Elf_GnuHash_Impl {$/;"	kind:s	namespace:llvm::object
Elf_Half	ELFTypes.h	/^      uint16_t, target_endianness, 2> Elf_Half;$/;"	kind:t	struct:llvm::object::ELFDataTypeTypedefHelperCommon	typeref:typename:support::detail::packed_endian_specific_integral<uint16_t,target_endianness,2>	access:public
Elf_Hash	ELF.h	/^  typedef typename ELFT::Hash Elf_Hash;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::Hash	access:public
Elf_Hash_Impl	ELFTypes.h	/^struct Elf_Hash_Impl {$/;"	kind:s	namespace:llvm::object
Elf_Mips_ABIFlags	ELFTypes.h	/^template <class ELFT> struct Elf_Mips_ABIFlags {$/;"	kind:s	namespace:llvm::object
Elf_Mips_Options	ELFTypes.h	/^template <class ELFT> struct Elf_Mips_Options {$/;"	kind:s	namespace:llvm::object
Elf_Mips_RegInfo	ELFTypes.h	/^struct Elf_Mips_RegInfo<ELFType<TargetEndianness, false>> {$/;"	kind:s	namespace:llvm::object
Elf_Mips_RegInfo	ELFTypes.h	/^struct Elf_Mips_RegInfo<ELFType<TargetEndianness, true>> {$/;"	kind:s	namespace:llvm::object
Elf_Off	ELFTypes.h	/^      value_type, TargetEndianness, 2> Elf_Off;$/;"	kind:t	struct:llvm::object::ELFDataTypeTypedefHelper	typeref:typename:support::detail::packed_endian_specific_integral<value_type,TargetEndianness,2>	access:public
Elf_Phdr	ELF.h	/^  typedef typename ELFT::Phdr Elf_Phdr;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::Phdr	access:public
Elf_Phdr_Impl	ELFTypes.h	/^struct Elf_Phdr_Impl<ELFType<TargetEndianness, false>> {$/;"	kind:s	namespace:llvm::object
Elf_Phdr_Impl	ELFTypes.h	/^struct Elf_Phdr_Impl<ELFType<TargetEndianness, true>> {$/;"	kind:s	namespace:llvm::object
Elf_Phdr_Range	ELF.h	/^  typedef typename ELFT::PhdrRange Elf_Phdr_Range;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::PhdrRange	access:public
Elf_Rel	ELF.h	/^  typedef typename ELFT::Rel Elf_Rel;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::Rel	access:public
Elf_Rel	ELFObjectFile.h	/^  typedef typename ELFFile<ELFT>::Elf_Rel Elf_Rel;$/;"	kind:t	class:llvm::object::ELFObjectFile	typeref:typename:ELFFile<ELFT>::Elf_Rel	access:public
Elf_Rel_Impl	ELFTypes.h	/^struct Elf_Rel_Impl<ELFType<TargetEndianness, false>, false> {$/;"	kind:s	namespace:llvm::object
Elf_Rel_Impl	ELFTypes.h	/^struct Elf_Rel_Impl<ELFType<TargetEndianness, false>, true>$/;"	kind:s	namespace:llvm::object	inherits:Elf_Rel_Impl<ELFType<TargetEndianness,false>,false>
Elf_Rel_Impl	ELFTypes.h	/^struct Elf_Rel_Impl<ELFType<TargetEndianness, true>, false> {$/;"	kind:s	namespace:llvm::object
Elf_Rel_Impl	ELFTypes.h	/^struct Elf_Rel_Impl<ELFType<TargetEndianness, true>, true>$/;"	kind:s	namespace:llvm::object	inherits:Elf_Rel_Impl<ELFType<TargetEndianness,true>,false>
Elf_Rel_Range	ELF.h	/^  typedef typename ELFT::RelRange Elf_Rel_Range;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::RelRange	access:public
Elf_Rela	ELF.h	/^  typedef typename ELFT::Rela Elf_Rela;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::Rela	access:public
Elf_Rela	ELFObjectFile.h	/^  typedef typename ELFFile<ELFT>::Elf_Rela Elf_Rela;$/;"	kind:t	class:llvm::object::ELFObjectFile	typeref:typename:ELFFile<ELFT>::Elf_Rela	access:public
Elf_Rela_Range	ELF.h	/^  typedef typename ELFT::RelaRange Elf_Rela_Range;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::RelaRange	access:public
Elf_Shdr	ELF.h	/^  typedef typename ELFT::Shdr Elf_Shdr;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::Shdr	access:public
Elf_Shdr	ELFObjectFile.h	/^  typedef typename ELFFile<ELFT>::Elf_Shdr Elf_Shdr;$/;"	kind:t	class:llvm::object::ELFObjectFile	typeref:typename:ELFFile<ELFT>::Elf_Shdr	access:public
Elf_Shdr_Base	ELFTypes.h	/^struct Elf_Shdr_Base<ELFType<TargetEndianness, false>> {$/;"	kind:s	namespace:llvm::object
Elf_Shdr_Base	ELFTypes.h	/^struct Elf_Shdr_Base<ELFType<TargetEndianness, true>> {$/;"	kind:s	namespace:llvm::object
Elf_Shdr_Impl	ELFTypes.h	/^struct Elf_Shdr_Impl : Elf_Shdr_Base<ELFT> {$/;"	kind:s	namespace:llvm::object	inherits:Elf_Shdr_Base<ELFT>
Elf_Shdr_Range	ELF.h	/^  typedef typename ELFT::ShdrRange Elf_Shdr_Range;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::ShdrRange	access:public
Elf_Sword	ELFTypes.h	/^      int32_t, target_endianness, 2> Elf_Sword;$/;"	kind:t	struct:llvm::object::ELFDataTypeTypedefHelperCommon	typeref:typename:support::detail::packed_endian_specific_integral<int32_t,target_endianness,2>	access:public
Elf_Sxword	ELFTypes.h	/^      int64_t, target_endianness, 2> Elf_Sxword;$/;"	kind:t	struct:llvm::object::ELFDataTypeTypedefHelperCommon	typeref:typename:support::detail::packed_endian_specific_integral<int64_t,target_endianness,2>	access:public
Elf_Sym	ELF.h	/^  typedef typename ELFT::Sym Elf_Sym;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::Sym	access:public
Elf_Sym	ELFObjectFile.h	/^  typedef typename ELFFile<ELFT>::Elf_Sym Elf_Sym;$/;"	kind:t	class:llvm::object::ELFObjectFile	typeref:typename:ELFFile<ELFT>::Elf_Sym	access:public
Elf_Sym_Base	ELFTypes.h	/^struct Elf_Sym_Base<ELFType<TargetEndianness, false>> {$/;"	kind:s	namespace:llvm::object
Elf_Sym_Base	ELFTypes.h	/^struct Elf_Sym_Base<ELFType<TargetEndianness, true>> {$/;"	kind:s	namespace:llvm::object
Elf_Sym_Impl	ELFTypes.h	/^struct Elf_Sym_Impl : Elf_Sym_Base<ELFT> {$/;"	kind:s	namespace:llvm::object	inherits:Elf_Sym_Base<ELFT>
Elf_Sym_Range	ELF.h	/^  typedef typename ELFT::SymRange Elf_Sym_Range;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::SymRange	access:public
Elf_Verdaux	ELF.h	/^  typedef typename ELFT::Verdaux Elf_Verdaux;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::Verdaux	access:public
Elf_Verdaux	ELFTypes.h	/^  typedef Elf_Verdaux_Impl<ELFT> Elf_Verdaux;$/;"	kind:t	struct:llvm::object::Elf_Verdef_Impl	typeref:typename:Elf_Verdaux_Impl<ELFT>	access:public
Elf_Verdaux_Impl	ELFTypes.h	/^struct Elf_Verdaux_Impl {$/;"	kind:s	namespace:llvm::object
Elf_Verdef	ELF.h	/^  typedef typename ELFT::Verdef Elf_Verdef;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::Verdef	access:public
Elf_Verdef_Impl	ELFTypes.h	/^struct Elf_Verdef_Impl {$/;"	kind:s	namespace:llvm::object
Elf_Vernaux	ELF.h	/^  typedef typename ELFT::Vernaux Elf_Vernaux;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::Vernaux	access:public
Elf_Vernaux_Impl	ELFTypes.h	/^struct Elf_Vernaux_Impl {$/;"	kind:s	namespace:llvm::object
Elf_Verneed	ELF.h	/^  typedef typename ELFT::Verneed Elf_Verneed;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::Verneed	access:public
Elf_Verneed_Impl	ELFTypes.h	/^struct Elf_Verneed_Impl {$/;"	kind:s	namespace:llvm::object
Elf_Versym	ELF.h	/^  typedef typename ELFT::Versym Elf_Versym;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::Versym	access:public
Elf_Versym_Impl	ELFTypes.h	/^struct Elf_Versym_Impl {$/;"	kind:s	namespace:llvm::object
Elf_Word	ELFTypes.h	/^      uint32_t, target_endianness, 2> Elf_Word;$/;"	kind:t	struct:llvm::object::ELFDataTypeTypedefHelperCommon	typeref:typename:support::detail::packed_endian_specific_integral<uint32_t,target_endianness,2>	access:public
Elf_Xword	ELFTypes.h	/^      uint64_t, target_endianness, 2> Elf_Xword;$/;"	kind:t	struct:llvm::object::ELFDataTypeTypedefHelperCommon	typeref:typename:support::detail::packed_endian_specific_integral<uint64_t,target_endianness,2>	access:public
EndAddress	COFF.h	/^  support::ulittle32_t EndAddress;$/;"	kind:m	struct:llvm::object::coff_runtime_function_x64	typeref:typename:support::ulittle32_t	access:public
EndAddressOfRawData	COFF.h	/^  IntTy EndAddressOfRawData;$/;"	kind:m	struct:llvm::object::coff_tls_directory	typeref:typename:IntTy	access:public
Entry32	COFF.h	/^  const import_lookup_table_entry32 *Entry32;$/;"	kind:m	class:llvm::object::ImportedSymbolRef	typeref:typename:const import_lookup_table_entry32 *	access:private
Entry64	COFF.h	/^  const import_lookup_table_entry64 *Entry64;$/;"	kind:m	class:llvm::object::ImportedSymbolRef	typeref:typename:const import_lookup_table_entry64 *	access:private
ExportAddressTableRVA	COFF.h	/^  support::ulittle32_t ExportAddressTableRVA;$/;"	kind:m	struct:llvm::object::export_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
ExportDirectory	COFF.h	/^  const export_directory_table_entry *ExportDirectory;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:const export_directory_table_entry *	access:private
ExportDirectoryEntryRef	COFF.h	/^  ExportDirectoryEntryRef() : OwningObject(nullptr) {}$/;"	kind:f	class:llvm::object::ExportDirectoryEntryRef	access:public	signature:()
ExportDirectoryEntryRef	COFF.h	/^  ExportDirectoryEntryRef(const export_directory_table_entry *Table, uint32_t I,$/;"	kind:f	class:llvm::object::ExportDirectoryEntryRef	access:public	signature:(const export_directory_table_entry * Table,uint32_t I,const COFFObjectFile * Owner)
ExportDirectoryEntryRef	COFF.h	/^class ExportDirectoryEntryRef {$/;"	kind:c	namespace:llvm::object
ExportEntry	MachO.h	/^  ExportEntry(ArrayRef<uint8_t> Trie);$/;"	kind:p	class:llvm::object::ExportEntry	access:public	signature:(ArrayRef<uint8_t> Trie)
ExportEntry	MachO.h	/^class ExportEntry {$/;"	kind:c	namespace:llvm::object
ExportFlags	COFF.h	/^  support::ulittle32_t ExportFlags;$/;"	kind:m	struct:llvm::object::export_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
ExportRVA	COFF.h	/^  support::ulittle32_t ExportRVA;$/;"	kind:m	union:llvm::object::export_address_table_entry	typeref:typename:support::ulittle32_t	access:public
ExportTable	COFF.h	/^  const export_directory_table_entry *ExportTable;$/;"	kind:m	class:llvm::object::ExportDirectoryEntryRef	typeref:typename:const export_directory_table_entry *	access:private
FileAlignment	COFF.h	/^  support::ulittle32_t FileAlignment;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
FileAlignment	COFF.h	/^  support::ulittle32_t FileAlignment;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle32_t	access:public
FileSizeInPages	COFF.h	/^  support::ulittle16_t FileSizeInPages;$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle16_t	access:public
FirstRegularData	Archive.h	/^  StringRef FirstRegularData;$/;"	kind:m	class:llvm::object::Archive	typeref:typename:StringRef	access:private
FirstRegularStartOfFile	Archive.h	/^  uint16_t FirstRegularStartOfFile = -1;$/;"	kind:m	class:llvm::object::Archive	typeref:typename:uint16_t	access:private
Flags	MachO.h	/^    uint64_t Flags;$/;"	kind:m	struct:llvm::object::ExportEntry::NodeState	typeref:typename:uint64_t	access:public
Flags	MachO.h	/^  uint32_t Flags;$/;"	kind:m	class:llvm::object::MachOBindEntry	typeref:typename:uint32_t	access:private
Flags	SymbolicFile.h	/^  enum Flags : unsigned {$/;"	kind:g	class:llvm::object::BasicSymbolRef	typeref:typename:unsigned	access:public
Format	Archive.h	/^  unsigned Format : 3;$/;"	kind:m	class:llvm::object::Archive	typeref:typename:unsigned:3	access:private
ForwarderChain	COFF.h	/^  support::ulittle32_t ForwarderChain;$/;"	kind:m	struct:llvm::object::coff_import_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
ForwarderRVA	COFF.h	/^  support::ulittle32_t ForwarderRVA;$/;"	kind:m	union:llvm::object::export_address_table_entry	typeref:typename:support::ulittle32_t	access:public
FpoData	COFF.h	/^struct FpoData {$/;"	kind:s	namespace:llvm::object
FunctionAccessor	StackMapParser.h	/^    FunctionAccessor(const uint8_t *P) : P(P) {}$/;"	kind:f	class:llvm::StackMapV2Parser::FunctionAccessor	access:private	signature:(const uint8_t * P)
FunctionAccessor	StackMapParser.h	/^  class FunctionAccessor {$/;"	kind:c	class:llvm::StackMapV2Parser	access:public
FunctionAccessorSize	StackMapParser.h	/^    const static int FunctionAccessorSize = 3 * sizeof(uint64_t);$/;"	kind:m	class:llvm::StackMapV2Parser::FunctionAccessor	typeref:typename:const int	access:private
FunctionListOffset	StackMapParser.h	/^  static const unsigned FunctionListOffset = NumRecordsOffset + sizeof(uint32_t);$/;"	kind:m	class:llvm::StackMapV2Parser	typeref:typename:const unsigned	access:private
FunctionSize	StackMapParser.h	/^  static const unsigned FunctionSize = 3 * sizeof(uint64_t);$/;"	kind:m	class:llvm::StackMapV2Parser	typeref:typename:const unsigned	access:private
GID	Archive.h	/^    char GID[6];$/;"	kind:m	struct:llvm::object::ArchiveMemberHeader::ArMemHdrType	typeref:typename:char[6]	access:public
GID	ArchiveWriter.h	/^  unsigned UID = 0, GID = 0, Perms = 0644;$/;"	kind:m	struct:llvm::NewArchiveMember	typeref:typename:unsigned	access:public
GenericBinaryError	Error.h	/^  GenericBinaryError(Twine Msg);$/;"	kind:p	class:llvm::object::GenericBinaryError	access:public	signature:(Twine Msg)
GenericBinaryError	Error.h	/^  GenericBinaryError(Twine Msg, object_error ECOverride);$/;"	kind:p	class:llvm::object::GenericBinaryError	access:public	signature:(Twine Msg,object_error ECOverride)
GenericBinaryError	Error.h	/^class GenericBinaryError : public ErrorInfo<GenericBinaryError, BinaryError> {$/;"	kind:c	namespace:llvm::object	inherits:ErrorInfo<GenericBinaryError,BinaryError>
GlobalFlagsClear	COFF.h	/^  support::ulittle32_t GlobalFlagsClear;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle32_t	access:public
GlobalFlagsClear	COFF.h	/^  support::ulittle32_t GlobalFlagsClear;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle32_t	access:public
GlobalFlagsSet	COFF.h	/^  support::ulittle32_t GlobalFlagsSet;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle32_t	access:public
GlobalFlagsSet	COFF.h	/^  support::ulittle32_t GlobalFlagsSet;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle32_t	access:public
GnuHash	ELFTypes.h	/^  typedef Elf_GnuHash_Impl<ELFType<E, Is64>> GnuHash;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:Elf_GnuHash_Impl<ELFType<E,Is64>>	access:public
Half	ELFTypes.h	/^  typedef packed<uint16_t> Half;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:packed<uint16_t>	access:public
HasError	RelocVisitor.h	/^  bool HasError;$/;"	kind:m	class:llvm::object::RelocVisitor	typeref:typename:bool	access:private
HasPageZeroSegment	MachO.h	/^  bool HasPageZeroSegment;$/;"	kind:m	class:llvm::object::MachOObjectFile	typeref:typename:bool	access:private
Hash	ELFTypes.h	/^  typedef Elf_Hash_Impl<ELFType<E, Is64>> Hash;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:Elf_Hash_Impl<ELFType<E,Is64>>	access:public
Header	Archive.h	/^    ArchiveMemberHeader Header;$/;"	kind:m	class:llvm::object::Archive::Child	typeref:typename:ArchiveMemberHeader	access:private
Header	COFF.h	/^  const coff_base_reloc_block_header *Header;$/;"	kind:m	class:llvm::object::BaseRelocRef	typeref:typename:const coff_base_reloc_block_header *	access:private
Header	MachO.h	/^    MachO::mach_header Header;$/;"	kind:m	union:llvm::object::MachOObjectFile::__anon14822023010a	typeref:typename:MachO::mach_header	access:public
Header	MachOUniversal.h	/^    MachO::fat_arch Header;$/;"	kind:m	class:llvm::object::MachOUniversalBinary::ObjectForArch	typeref:typename:MachO::fat_arch	access:private
Header64	MachO.h	/^    MachO::mach_header_64 Header64;$/;"	kind:m	union:llvm::object::MachOObjectFile::__anon14822023010a	typeref:typename:MachO::mach_header_64	access:public
Header64	MachOUniversal.h	/^    MachO::fat_arch_64 Header64;$/;"	kind:m	class:llvm::object::MachOUniversalBinary::ObjectForArch	typeref:typename:MachO::fat_arch_64	access:private
HeaderOffset	StackMapParser.h	/^  static const unsigned HeaderOffset = 0;$/;"	kind:m	class:llvm::StackMapV2Parser	typeref:typename:const unsigned	access:private
HeaderSizeInParagraphs	COFF.h	/^  support::ulittle16_t HeaderSizeInParagraphs;$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle16_t	access:public
I	SymbolSize.h	/^  symbol_iterator I;$/;"	kind:m	struct:llvm::object::SymEntry	typeref:typename:symbol_iterator	access:public
ID	Error.h	/^  static char ID;$/;"	kind:m	class:llvm::object::BinaryError	typeref:typename:char	access:public
ID	Error.h	/^  static char ID;$/;"	kind:m	class:llvm::object::GenericBinaryError	typeref:typename:char	access:public
ID_Archive	Binary.h	/^    ID_Archive,$/;"	kind:e	enum:llvm::object::Binary::__anonff0261800103	access:public
ID_COFF	Binary.h	/^    ID_COFF,$/;"	kind:e	enum:llvm::object::Binary::__anonff0261800103	access:public
ID_COFFImportFile	Binary.h	/^    ID_COFFImportFile,$/;"	kind:e	enum:llvm::object::Binary::__anonff0261800103	access:public
ID_ELF32B	Binary.h	/^    ID_ELF32B, \/\/ ELF 32-bit, big endian$/;"	kind:e	enum:llvm::object::Binary::__anonff0261800103	access:public
ID_ELF32L	Binary.h	/^    ID_ELF32L, \/\/ ELF 32-bit, little endian$/;"	kind:e	enum:llvm::object::Binary::__anonff0261800103	access:public
ID_ELF64B	Binary.h	/^    ID_ELF64B, \/\/ ELF 64-bit, big endian$/;"	kind:e	enum:llvm::object::Binary::__anonff0261800103	access:public
ID_ELF64L	Binary.h	/^    ID_ELF64L, \/\/ ELF 64-bit, little endian$/;"	kind:e	enum:llvm::object::Binary::__anonff0261800103	access:public
ID_EndObjects	Binary.h	/^    ID_EndObjects$/;"	kind:e	enum:llvm::object::Binary::__anonff0261800103	access:public
ID_IR	Binary.h	/^    ID_IR,                 \/\/ LLVM IR$/;"	kind:e	enum:llvm::object::Binary::__anonff0261800103	access:public
ID_MachO32B	Binary.h	/^    ID_MachO32B, \/\/ MachO 32-bit, big endian$/;"	kind:e	enum:llvm::object::Binary::__anonff0261800103	access:public
ID_MachO32L	Binary.h	/^    ID_MachO32L, \/\/ MachO 32-bit, little endian$/;"	kind:e	enum:llvm::object::Binary::__anonff0261800103	access:public
ID_MachO64B	Binary.h	/^    ID_MachO64B, \/\/ MachO 64-bit, big endian$/;"	kind:e	enum:llvm::object::Binary::__anonff0261800103	access:public
ID_MachO64L	Binary.h	/^    ID_MachO64L, \/\/ MachO 64-bit, little endian$/;"	kind:e	enum:llvm::object::Binary::__anonff0261800103	access:public
ID_MachOUniversalBinary	Binary.h	/^    ID_MachOUniversalBinary,$/;"	kind:e	enum:llvm::object::Binary::__anonff0261800103	access:public
ID_ModuleSummaryIndex	Binary.h	/^    ID_ModuleSummaryIndex, \/\/ Module summary index$/;"	kind:e	enum:llvm::object::Binary::__anonff0261800103	access:public
ID_StartObjects	Binary.h	/^    ID_StartObjects,$/;"	kind:e	enum:llvm::object::Binary::__anonff0261800103	access:public
IRObjectFile	IRObjectFile.h	/^  IRObjectFile(MemoryBufferRef Object, std::unique_ptr<Module> M);$/;"	kind:p	class:llvm::object::IRObjectFile	access:public	signature:(MemoryBufferRef Object,std::unique_ptr<Module> M)
IRObjectFile	IRObjectFile.h	/^class IRObjectFile : public SymbolicFile {$/;"	kind:c	namespace:llvm::object	inherits:SymbolicFile
ImageBase	COFF.h	/^  support::ulittle32_t ImageBase;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
ImageBase	COFF.h	/^  support::ulittle64_t ImageBase;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle64_t	access:public
ImportAddressTableRVA	COFF.h	/^  support::ulittle32_t ImportAddressTableRVA;$/;"	kind:m	struct:llvm::object::coff_import_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
ImportDirectory	COFF.h	/^  const coff_import_directory_table_entry *ImportDirectory;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:const coff_import_directory_table_entry *	access:private
ImportDirectoryEntryRef	COFF.h	/^  ImportDirectoryEntryRef() : OwningObject(nullptr) {}$/;"	kind:f	class:llvm::object::ImportDirectoryEntryRef	access:public	signature:()
ImportDirectoryEntryRef	COFF.h	/^  ImportDirectoryEntryRef(const coff_import_directory_table_entry *Table,$/;"	kind:f	class:llvm::object::ImportDirectoryEntryRef	access:public	signature:(const coff_import_directory_table_entry * Table,uint32_t I,const COFFObjectFile * Owner)
ImportDirectoryEntryRef	COFF.h	/^class ImportDirectoryEntryRef {$/;"	kind:c	namespace:llvm::object
ImportLookupTableRVA	COFF.h	/^  support::ulittle32_t ImportLookupTableRVA;$/;"	kind:m	struct:llvm::object::coff_import_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
ImportName	MachO.h	/^    const char *ImportName;$/;"	kind:m	struct:llvm::object::ExportEntry::NodeState	typeref:typename:const char *	access:public
ImportTable	COFF.h	/^  const coff_import_directory_table_entry *ImportTable;$/;"	kind:m	class:llvm::object::ImportDirectoryEntryRef	typeref:typename:const coff_import_directory_table_entry *	access:private
ImportedSymbolRef	COFF.h	/^  ImportedSymbolRef() : OwningObject(nullptr) {}$/;"	kind:f	class:llvm::object::ImportedSymbolRef	access:public	signature:()
ImportedSymbolRef	COFF.h	/^  ImportedSymbolRef(const import_lookup_table_entry32 *Entry, uint32_t I,$/;"	kind:f	class:llvm::object::ImportedSymbolRef	access:public	signature:(const import_lookup_table_entry32 * Entry,uint32_t I,const COFFObjectFile * Owner)
ImportedSymbolRef	COFF.h	/^  ImportedSymbolRef(const import_lookup_table_entry64 *Entry, uint32_t I,$/;"	kind:f	class:llvm::object::ImportedSymbolRef	access:public	signature:(const import_lookup_table_entry64 * Entry,uint32_t I,const COFFObjectFile * Owner)
ImportedSymbolRef	COFF.h	/^class ImportedSymbolRef {$/;"	kind:c	namespace:llvm::object
Index	COFF.h	/^  uint32_t Index;$/;"	kind:m	class:llvm::object::BaseRelocRef	typeref:typename:uint32_t	access:private
Index	COFF.h	/^  uint32_t Index;$/;"	kind:m	class:llvm::object::DelayImportDirectoryEntryRef	typeref:typename:uint32_t	access:private
Index	COFF.h	/^  uint32_t Index;$/;"	kind:m	class:llvm::object::ExportDirectoryEntryRef	typeref:typename:uint32_t	access:private
Index	COFF.h	/^  uint32_t Index;$/;"	kind:m	class:llvm::object::ImportDirectoryEntryRef	typeref:typename:uint32_t	access:private
Index	COFF.h	/^  uint32_t Index;$/;"	kind:m	class:llvm::object::ImportedSymbolRef	typeref:typename:uint32_t	access:private
Index	MachOUniversal.h	/^    uint32_t Index;$/;"	kind:m	class:llvm::object::MachOUniversalBinary::ObjectForArch	typeref:typename:uint32_t	access:private
Index	ModuleSummaryIndexObjectFile.h	/^  std::unique_ptr<ModuleSummaryIndex> Index;$/;"	kind:m	class:llvm::object::ModuleSummaryIndexObjectFile	typeref:typename:std::unique_ptr<ModuleSummaryIndex>	access:private
Indirect	StackMapParser.h	/^    Register = 1, Direct = 2, Indirect = 3, Constant = 4, ConstantIndex = 5$/;"	kind:e	enum:llvm::StackMapV2Parser::LocationKind	access:public
InitialIP	COFF.h	/^  support::ulittle16_t InitialIP;$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle16_t	access:public
InitialRelativeCS	COFF.h	/^  support::ulittle16_t InitialRelativeCS;$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle16_t	access:public
InitialRelativeSS	COFF.h	/^  support::ulittle16_t InitialRelativeSS;$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle16_t	access:public
InitialSP	COFF.h	/^  support::ulittle16_t InitialSP;$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle16_t	access:public
InstructionOffsetOffset	StackMapParser.h	/^    static const unsigned InstructionOffsetOffset =$/;"	kind:m	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:const unsigned	access:private
Is64Bits	ELFTypes.h	/^  static const bool Is64Bits = Is64;$/;"	kind:m	struct:llvm::object::ELFType	typeref:typename:const bool	access:public
IsExportNode	MachO.h	/^    bool IsExportNode;$/;"	kind:m	struct:llvm::object::ExportEntry::NodeState	typeref:typename:bool	access:public
IsThin	Archive.h	/^  unsigned IsThin : 1;$/;"	kind:m	class:llvm::object::Archive	typeref:typename:unsigned:1	access:private
K_BSD	Archive.h	/^    K_BSD,$/;"	kind:e	enum:llvm::object::Archive::Kind	access:public
K_COFF	Archive.h	/^    K_COFF$/;"	kind:e	enum:llvm::object::Archive::Kind	access:public
K_DARWIN64	Archive.h	/^    K_DARWIN64,$/;"	kind:e	enum:llvm::object::Archive::Kind	access:public
K_GNU	Archive.h	/^    K_GNU,$/;"	kind:e	enum:llvm::object::Archive::Kind	access:public
K_MIPS64	Archive.h	/^    K_MIPS64,$/;"	kind:e	enum:llvm::object::Archive::Kind	access:public
Kind	Archive.h	/^  enum Kind {$/;"	kind:g	class:llvm::object::Archive	access:public
Kind	MachO.h	/^  enum class Kind { Regular, Lazy, Weak };$/;"	kind:g	class:llvm::object::MachOBindEntry	access:public
KindOffset	StackMapParser.h	/^    static const int KindOffset = 0;$/;"	kind:m	class:llvm::StackMapV2Parser::LocationAccessor	typeref:typename:const int	access:private
LLD_ELF_COMMA	ELFTypes.h	/^#define LLD_ELF_COMMA /;"	kind:d
LLVM_CODEGEN_STACKMAPPARSER_H	StackMapParser.h	/^#define LLVM_CODEGEN_STACKMAPPARSER_H$/;"	kind:d
LLVM_ELF_IMPORT_TYPES	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES(TargetEndianness, false)$/;"	kind:p	struct:llvm::object::Elf_Chdr_Impl	access:public	signature:(TargetEndianness,false)
LLVM_ELF_IMPORT_TYPES	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES(TargetEndianness, false)$/;"	kind:p	struct:llvm::object::Elf_Dyn_Base	access:public	signature:(TargetEndianness,false)
LLVM_ELF_IMPORT_TYPES	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES(TargetEndianness, false)$/;"	kind:p	struct:llvm::object::Elf_Mips_RegInfo	access:public	signature:(TargetEndianness,false)
LLVM_ELF_IMPORT_TYPES	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES(TargetEndianness, false)$/;"	kind:p	struct:llvm::object::Elf_Phdr_Impl	access:public	signature:(TargetEndianness,false)
LLVM_ELF_IMPORT_TYPES	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES(TargetEndianness, false)$/;"	kind:p	struct:llvm::object::Elf_Rel_Impl	access:public	signature:(TargetEndianness,false) const
LLVM_ELF_IMPORT_TYPES	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES(TargetEndianness, false)$/;"	kind:p	struct:llvm::object::Elf_Shdr_Base	access:public	signature:(TargetEndianness,false)
LLVM_ELF_IMPORT_TYPES	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES(TargetEndianness, false)$/;"	kind:p	struct:llvm::object::Elf_Sym_Base	access:public	signature:(TargetEndianness,false)
LLVM_ELF_IMPORT_TYPES	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES(TargetEndianness, true)$/;"	kind:p	struct:llvm::object::Elf_Chdr_Impl	access:public	signature:(TargetEndianness,true)
LLVM_ELF_IMPORT_TYPES	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES(TargetEndianness, true)$/;"	kind:p	struct:llvm::object::Elf_Dyn_Base	access:public	signature:(TargetEndianness,true)
LLVM_ELF_IMPORT_TYPES	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES(TargetEndianness, true)$/;"	kind:p	struct:llvm::object::Elf_Mips_RegInfo	access:public	signature:(TargetEndianness,true)
LLVM_ELF_IMPORT_TYPES	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES(TargetEndianness, true)$/;"	kind:p	struct:llvm::object::Elf_Phdr_Impl	access:public	signature:(TargetEndianness,true)
LLVM_ELF_IMPORT_TYPES	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES(TargetEndianness, true)$/;"	kind:p	struct:llvm::object::Elf_Rel_Impl	access:public	signature:(TargetEndianness,true) const
LLVM_ELF_IMPORT_TYPES	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES(TargetEndianness, true)$/;"	kind:p	struct:llvm::object::Elf_Shdr_Base	access:public	signature:(TargetEndianness,true)
LLVM_ELF_IMPORT_TYPES	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES(TargetEndianness, true)$/;"	kind:p	struct:llvm::object::Elf_Sym_Base	access:public	signature:(TargetEndianness,true)
LLVM_ELF_IMPORT_TYPES	ELFTypes.h	/^#define LLVM_ELF_IMPORT_TYPES(/;"	kind:d	signature:(E,W)
LLVM_ELF_IMPORT_TYPES_ELFT	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES_ELFT(ELFT)$/;"	kind:p	struct:llvm::object::Elf_Ehdr_Impl	access:public	signature:(ELFT)
LLVM_ELF_IMPORT_TYPES_ELFT	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES_ELFT(ELFT)$/;"	kind:p	struct:llvm::object::Elf_GnuHash_Impl	access:public	signature:(ELFT)
LLVM_ELF_IMPORT_TYPES_ELFT	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES_ELFT(ELFT)$/;"	kind:p	struct:llvm::object::Elf_Hash_Impl	access:public	signature:(ELFT)
LLVM_ELF_IMPORT_TYPES_ELFT	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES_ELFT(ELFT)$/;"	kind:p	struct:llvm::object::Elf_Mips_ABIFlags	access:public	signature:(ELFT)
LLVM_ELF_IMPORT_TYPES_ELFT	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES_ELFT(ELFT)$/;"	kind:p	struct:llvm::object::Elf_Mips_Options	access:public	signature:(ELFT)
LLVM_ELF_IMPORT_TYPES_ELFT	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES_ELFT(ELFT)$/;"	kind:p	struct:llvm::object::Elf_Verdaux_Impl	access:public	signature:(ELFT)
LLVM_ELF_IMPORT_TYPES_ELFT	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES_ELFT(ELFT)$/;"	kind:p	struct:llvm::object::Elf_Vernaux_Impl	access:public	signature:(ELFT)
LLVM_ELF_IMPORT_TYPES_ELFT	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES_ELFT(ELFT)$/;"	kind:p	struct:llvm::object::Elf_Verneed_Impl	access:public	signature:(ELFT)
LLVM_ELF_IMPORT_TYPES_ELFT	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES_ELFT(ELFT)$/;"	kind:p	struct:llvm::object::Elf_Versym_Impl	access:public	signature:(ELFT)
LLVM_ELF_IMPORT_TYPES_ELFT	ELFTypes.h	/^#define LLVM_ELF_IMPORT_TYPES_ELFT(/;"	kind:d	signature:(ELFT)
LLVM_OBJECT_ARCHIVEWRITER_H	ArchiveWriter.h	/^#define LLVM_OBJECT_ARCHIVEWRITER_H$/;"	kind:d
LLVM_OBJECT_ARCHIVE_H	Archive.h	/^#define LLVM_OBJECT_ARCHIVE_H$/;"	kind:d
LLVM_OBJECT_BINARY_H	Binary.h	/^#define LLVM_OBJECT_BINARY_H$/;"	kind:d
LLVM_OBJECT_COFF_H	COFF.h	/^#define LLVM_OBJECT_COFF_H$/;"	kind:d
LLVM_OBJECT_COFF_IMPORT_FILE_H	COFFImportFile.h	/^#define LLVM_OBJECT_COFF_IMPORT_FILE_H$/;"	kind:d
LLVM_OBJECT_ELFOBJECTFILE_H	ELFObjectFile.h	/^#define LLVM_OBJECT_ELFOBJECTFILE_H$/;"	kind:d
LLVM_OBJECT_ELFTYPES_H	ELFTypes.h	/^#define LLVM_OBJECT_ELFTYPES_H$/;"	kind:d
LLVM_OBJECT_ELF_H	ELF.h	/^#define LLVM_OBJECT_ELF_H$/;"	kind:d
LLVM_OBJECT_ERROR_H	Error.h	/^#define LLVM_OBJECT_ERROR_H$/;"	kind:d
LLVM_OBJECT_IROBJECTFILE_H	IRObjectFile.h	/^#define LLVM_OBJECT_IROBJECTFILE_H$/;"	kind:d
LLVM_OBJECT_MACHOUNIVERSAL_H	MachOUniversal.h	/^#define LLVM_OBJECT_MACHOUNIVERSAL_H$/;"	kind:d
LLVM_OBJECT_MACHO_H	MachO.h	/^#define LLVM_OBJECT_MACHO_H$/;"	kind:d
LLVM_OBJECT_MODULESUMMARYINDEXOBJECTFILE_H	ModuleSummaryIndexObjectFile.h	/^#define LLVM_OBJECT_MODULESUMMARYINDEXOBJECTFILE_H$/;"	kind:d
LLVM_OBJECT_OBJECTFILE_H	ObjectFile.h	/^#define LLVM_OBJECT_OBJECTFILE_H$/;"	kind:d
LLVM_OBJECT_RELOCVISITOR_H	RelocVisitor.h	/^#define LLVM_OBJECT_RELOCVISITOR_H$/;"	kind:d
LLVM_OBJECT_SYMBOLICFILE_H	SymbolicFile.h	/^#define LLVM_OBJECT_SYMBOLICFILE_H$/;"	kind:d
LLVM_OBJECT_SYMBOLSIZE_H	SymbolSize.h	/^#define LLVM_OBJECT_SYMBOLSIZE_H$/;"	kind:d
LastModified	Archive.h	/^    char LastModified[12];$/;"	kind:m	struct:llvm::object::ArchiveMemberHeader::ArMemHdrType	typeref:typename:char[12]	access:public
Lazy	MachO.h	/^  enum class Kind { Regular, Lazy, Weak };$/;"	kind:e	enum:llvm::object::MachOBindEntry::Kind	access:public
Length	COFF.h	/^  support::ulittle32_t Length;$/;"	kind:m	struct:llvm::object::coff_aux_section_definition	typeref:typename:support::ulittle32_t	access:public
Libraries	MachO.h	/^  LibraryList Libraries;$/;"	kind:m	class:llvm::object::MachOObjectFile	typeref:typename:LibraryList	access:private
LibrariesShortNames	MachO.h	/^  mutable LibraryShortName LibrariesShortNames;$/;"	kind:m	class:llvm::object::MachOObjectFile	typeref:typename:LibraryShortName	access:private
LibraryList	MachO.h	/^  typedef SmallVector<const char*, 1> LibraryList;$/;"	kind:t	class:llvm::object::MachOObjectFile	typeref:typename:SmallVector<const char *,1>	access:private
LibraryShortName	MachO.h	/^  typedef SmallVector<StringRef, 1> LibraryShortName;$/;"	kind:t	class:llvm::object::MachOObjectFile	typeref:typename:SmallVector<StringRef,1>	access:private
Linenumber	COFF.h	/^  support::ulittle16_t Linenumber;$/;"	kind:m	struct:llvm::object::coff_aux_bf_and_ef_symbol	typeref:typename:support::ulittle16_t	access:public
LinkOptHintsLoadCmd	MachO.h	/^  const char *LinkOptHintsLoadCmd;$/;"	kind:m	class:llvm::object::MachOObjectFile	typeref:typename:const char *	access:private
LiveOutAccessor	StackMapParser.h	/^    LiveOutAccessor(const uint8_t *P) : P(P) {}$/;"	kind:f	class:llvm::StackMapV2Parser::LiveOutAccessor	access:private	signature:(const uint8_t * P)
LiveOutAccessor	StackMapParser.h	/^  class LiveOutAccessor {$/;"	kind:c	class:llvm::StackMapV2Parser	access:public
LiveOutAccessorSize	StackMapParser.h	/^    static const int LiveOutAccessorSize = sizeof(uint32_t);$/;"	kind:m	class:llvm::StackMapV2Parser::LiveOutAccessor	typeref:typename:const int	access:private
LiveOutSize	StackMapParser.h	/^    static const unsigned LiveOutSize = sizeof(uint32_t);$/;"	kind:m	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:const unsigned	access:private
LoadCommandInfo	MachO.h	/^  struct LoadCommandInfo {$/;"	kind:s	class:llvm::object::MachOObjectFile	access:public
LoadCommandList	MachO.h	/^  typedef SmallVector<LoadCommandInfo, 4> LoadCommandList;$/;"	kind:t	class:llvm::object::MachOObjectFile	typeref:typename:SmallVector<LoadCommandInfo,4>	access:public
LoadCommands	MachO.h	/^  LoadCommandList LoadCommands;$/;"	kind:m	class:llvm::object::MachOObjectFile	typeref:typename:LoadCommandList	access:private
LoaderFlags	COFF.h	/^  support::ulittle32_t LoaderFlags;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
LoaderFlags	COFF.h	/^  support::ulittle32_t LoaderFlags;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle32_t	access:public
LocationAccessor	StackMapParser.h	/^    LocationAccessor(const uint8_t *P) : P(P) {}$/;"	kind:f	class:llvm::StackMapV2Parser::LocationAccessor	access:private	signature:(const uint8_t * P)
LocationAccessor	StackMapParser.h	/^  class LocationAccessor {$/;"	kind:c	class:llvm::StackMapV2Parser	access:public
LocationAccessorSize	StackMapParser.h	/^    static const int LocationAccessorSize = sizeof(uint64_t);$/;"	kind:m	class:llvm::StackMapV2Parser::LocationAccessor	typeref:typename:const int	access:private
LocationKind	StackMapParser.h	/^  enum class LocationKind : uint8_t {$/;"	kind:g	class:llvm::StackMapV2Parser	typeref:typename:uint8_t	access:public
LocationListOffset	StackMapParser.h	/^    static const unsigned LocationListOffset =$/;"	kind:m	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:const unsigned	access:private
LocationSize	StackMapParser.h	/^    static const unsigned LocationSize = sizeof(uint64_t);$/;"	kind:m	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:const unsigned	access:private
LockPrefixTable	COFF.h	/^  support::ulittle32_t LockPrefixTable;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle32_t	access:public
LockPrefixTable	COFF.h	/^  support::ulittle32_t LockPrefixTable;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle32_t	access:public
M	IRObjectFile.h	/^  std::unique_ptr<Module> M;$/;"	kind:m	class:llvm::object::IRObjectFile	typeref:typename:std::unique_ptr<Module>	access:private
MBZ	COFF.h	/^  char                 MBZ[12];$/;"	kind:m	struct:llvm::object::coff_aux_clr_token	typeref:typename:char[12]	access:public
MachOBindEntry	MachO.h	/^  MachOBindEntry(ArrayRef<uint8_t> Opcodes, bool is64Bit, MachOBindEntry::Kind);$/;"	kind:p	class:llvm::object::MachOBindEntry	access:public	signature:(ArrayRef<uint8_t> Opcodes,bool is64Bit,MachOBindEntry::Kind)
MachOBindEntry	MachO.h	/^class MachOBindEntry {$/;"	kind:c	namespace:llvm::object
MachOObjectFile	MachO.h	/^  MachOObjectFile(MemoryBufferRef Object, bool IsLittleEndian, bool Is64Bits,$/;"	kind:p	class:llvm::object::MachOObjectFile	access:private	signature:(MemoryBufferRef Object,bool IsLittleEndian,bool Is64Bits,Error & Err,uint32_t UniversalCputype=0,uint32_t UniversalIndex=0)
MachOObjectFile	MachO.h	/^class MachOObjectFile : public ObjectFile {$/;"	kind:c	namespace:llvm::object	inherits:ObjectFile
MachORebaseEntry	MachO.h	/^  MachORebaseEntry(ArrayRef<uint8_t> opcodes, bool is64Bit);$/;"	kind:p	class:llvm::object::MachORebaseEntry	access:public	signature:(ArrayRef<uint8_t> opcodes,bool is64Bit)
MachORebaseEntry	MachO.h	/^class MachORebaseEntry {$/;"	kind:c	namespace:llvm::object
MachOUniversalBinary	MachOUniversal.h	/^  MachOUniversalBinary(MemoryBufferRef Souce, Error &Err);$/;"	kind:p	class:llvm::object::MachOUniversalBinary	access:public	signature:(MemoryBufferRef Souce,Error & Err)
MachOUniversalBinary	MachOUniversal.h	/^class MachOUniversalBinary : public Binary {$/;"	kind:c	namespace:llvm::object	inherits:Binary
Machine	COFF.h	/^  support::ulittle16_t Machine;$/;"	kind:m	struct:llvm::object::coff_bigobj_file_header	typeref:typename:support::ulittle16_t	access:public
Machine	COFF.h	/^  support::ulittle16_t Machine;$/;"	kind:m	struct:llvm::object::coff_file_header	typeref:typename:support::ulittle16_t	access:public
Machine	COFF.h	/^  support::ulittle16_t Machine;$/;"	kind:m	struct:llvm::object::coff_import_header	typeref:typename:support::ulittle16_t	access:public
Magic	COFF.h	/^  char                 Magic[2];$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:char[2]	access:public
Magic	COFF.h	/^  support::ulittle16_t Magic;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle16_t	access:public
Magic	COFF.h	/^  support::ulittle16_t Magic;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle16_t	access:public
Magic	MachOUniversal.h	/^  uint32_t Magic;$/;"	kind:m	class:llvm::object::MachOUniversalBinary	typeref:typename:uint32_t	access:private
MajorImageVersion	COFF.h	/^  support::ulittle16_t MajorImageVersion;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle16_t	access:public
MajorImageVersion	COFF.h	/^  support::ulittle16_t MajorImageVersion;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle16_t	access:public
MajorLinkerVersion	COFF.h	/^  uint8_t MajorLinkerVersion;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:uint8_t	access:public
MajorLinkerVersion	COFF.h	/^  uint8_t MajorLinkerVersion;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:uint8_t	access:public
MajorOperatingSystemVersion	COFF.h	/^  support::ulittle16_t MajorOperatingSystemVersion;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle16_t	access:public
MajorOperatingSystemVersion	COFF.h	/^  support::ulittle16_t MajorOperatingSystemVersion;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle16_t	access:public
MajorSubsystemVersion	COFF.h	/^  support::ulittle16_t MajorSubsystemVersion;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle16_t	access:public
MajorSubsystemVersion	COFF.h	/^  support::ulittle16_t MajorSubsystemVersion;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle16_t	access:public
MajorVersion	COFF.h	/^  support::ulittle16_t MajorVersion;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle16_t	access:public
MajorVersion	COFF.h	/^  support::ulittle16_t MajorVersion;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle16_t	access:public
MajorVersion	COFF.h	/^  support::ulittle16_t MajorVersion;$/;"	kind:m	struct:llvm::object::debug_directory	typeref:typename:support::ulittle16_t	access:public
MajorVersion	COFF.h	/^  support::ulittle16_t MajorVersion;$/;"	kind:m	struct:llvm::object::export_directory_table_entry	typeref:typename:support::ulittle16_t	access:public
Malformed	MachO.h	/^  bool     Malformed;$/;"	kind:m	class:llvm::object::MachOBindEntry	typeref:typename:bool	access:private
Malformed	MachO.h	/^  bool     Malformed;$/;"	kind:m	class:llvm::object::MachORebaseEntry	typeref:typename:bool	access:private
Malformed	MachO.h	/^  bool Malformed;$/;"	kind:m	class:llvm::object::ExportEntry	typeref:typename:bool	access:private
Mang	IRObjectFile.h	/^  std::unique_ptr<Mangler> Mang;$/;"	kind:m	class:llvm::object::IRObjectFile	typeref:typename:std::unique_ptr<Mangler>	access:private
MaximumAllocationSize	COFF.h	/^  support::ulittle32_t MaximumAllocationSize;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle32_t	access:public
MaximumAllocationSize	COFF.h	/^  support::ulittle32_t MaximumAllocationSize;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle32_t	access:public
MaximumExtraParagraphs	COFF.h	/^  support::ulittle16_t MaximumExtraParagraphs;$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle16_t	access:public
MinimumExtraParagraphs	COFF.h	/^  support::ulittle16_t MinimumExtraParagraphs;$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle16_t	access:public
MinorImageVersion	COFF.h	/^  support::ulittle16_t MinorImageVersion;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle16_t	access:public
MinorImageVersion	COFF.h	/^  support::ulittle16_t MinorImageVersion;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle16_t	access:public
MinorLinkerVersion	COFF.h	/^  uint8_t MinorLinkerVersion;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:uint8_t	access:public
MinorLinkerVersion	COFF.h	/^  uint8_t MinorLinkerVersion;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:uint8_t	access:public
MinorOperatingSystemVersion	COFF.h	/^  support::ulittle16_t MinorOperatingSystemVersion;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle16_t	access:public
MinorOperatingSystemVersion	COFF.h	/^  support::ulittle16_t MinorOperatingSystemVersion;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle16_t	access:public
MinorSubsystemVersion	COFF.h	/^  support::ulittle16_t MinorSubsystemVersion;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle16_t	access:public
MinorSubsystemVersion	COFF.h	/^  support::ulittle16_t MinorSubsystemVersion;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle16_t	access:public
MinorVersion	COFF.h	/^  support::ulittle16_t MinorVersion;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle16_t	access:public
MinorVersion	COFF.h	/^  support::ulittle16_t MinorVersion;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle16_t	access:public
MinorVersion	COFF.h	/^  support::ulittle16_t MinorVersion;$/;"	kind:m	struct:llvm::object::debug_directory	typeref:typename:support::ulittle16_t	access:public
MinorVersion	COFF.h	/^  support::ulittle16_t MinorVersion;$/;"	kind:m	struct:llvm::object::export_directory_table_entry	typeref:typename:support::ulittle16_t	access:public
ModTime	ArchiveWriter.h	/^  sys::TimePoint<std::chrono::seconds> ModTime;$/;"	kind:m	struct:llvm::NewArchiveMember	typeref:typename:sys::TimePoint<std::chrono::seconds>	access:public
ModuleHandle	COFF.h	/^  support::ulittle32_t ModuleHandle;$/;"	kind:m	struct:llvm::object::delay_import_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
ModuleSummaryIndexObjectFile	ModuleSummaryIndexObjectFile.h	/^  ModuleSummaryIndexObjectFile(MemoryBufferRef Object,$/;"	kind:p	class:llvm::object::ModuleSummaryIndexObjectFile	access:public	signature:(MemoryBufferRef Object,std::unique_ptr<ModuleSummaryIndex> I)
ModuleSummaryIndexObjectFile	ModuleSummaryIndexObjectFile.h	/^class ModuleSummaryIndexObjectFile : public SymbolicFile {$/;"	kind:c	namespace:llvm::object	inherits:SymbolicFile
Msg	Error.h	/^  std::string Msg;$/;"	kind:m	class:llvm::object::GenericBinaryError	typeref:typename:std::string	access:private
Name	Archive.h	/^    char Name[16];$/;"	kind:m	struct:llvm::object::ArchiveMemberHeader::ArMemHdrType	typeref:typename:char[16]	access:public
Name	COFF.h	/^  char Name[COFF::NameSize];$/;"	kind:m	struct:llvm::object::coff_section	typeref:typename:char[]	access:public
Name	COFF.h	/^  support::ulittle32_t Name;$/;"	kind:m	struct:llvm::object::delay_import_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
Name	COFF.h	/^  } Name;$/;"	kind:m	struct:llvm::object::coff_symbol	typeref:union:llvm::object::coff_symbol::__anona9e5c959010a	access:public
Name	COFF.h	/^  } Name;$/;"	kind:m	struct:llvm::object::coff_symbol_generic	typeref:union:llvm::object::coff_symbol_generic::__anona9e5c959020a	access:public
NamePointerRVA	COFF.h	/^  support::ulittle32_t NamePointerRVA;$/;"	kind:m	struct:llvm::object::export_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
NameRVA	COFF.h	/^  support::ulittle32_t NameRVA;$/;"	kind:m	struct:llvm::object::coff_import_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
NameRVA	COFF.h	/^  support::ulittle32_t NameRVA;$/;"	kind:m	struct:llvm::object::export_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
NewArchiveMember	ArchiveWriter.h	/^  NewArchiveMember() = default;$/;"	kind:p	struct:llvm::NewArchiveMember	access:public	signature:()
NewArchiveMember	ArchiveWriter.h	/^  NewArchiveMember(MemoryBufferRef BufRef);$/;"	kind:p	struct:llvm::NewArchiveMember	access:public	signature:(MemoryBufferRef BufRef)
NewArchiveMember	ArchiveWriter.h	/^struct NewArchiveMember {$/;"	kind:s	namespace:llvm
NextChildIndex	MachO.h	/^    unsigned NextChildIndex;$/;"	kind:m	struct:llvm::object::ExportEntry::NodeState	typeref:typename:unsigned	access:public
NodeState	MachO.h	/^    NodeState(const uint8_t *Ptr);$/;"	kind:p	struct:llvm::object::ExportEntry::NodeState	access:public	signature:(const uint8_t * Ptr)
NodeState	MachO.h	/^  struct NodeState {$/;"	kind:s	class:llvm::object::ExportEntry	access:private
NumConstantsOffset	StackMapParser.h	/^  static const unsigned NumConstantsOffset = NumFunctionsOffset + sizeof(uint32_t);$/;"	kind:m	class:llvm::StackMapV2Parser	typeref:typename:const unsigned	access:private
NumFunctionsOffset	StackMapParser.h	/^  static const unsigned NumFunctionsOffset = HeaderOffset + sizeof(uint32_t);$/;"	kind:m	class:llvm::StackMapV2Parser	typeref:typename:const unsigned	access:private
NumLocals	COFF.h	/^  support::ulittle32_t NumLocals; \/\/ cdwLocals: # bytes in locals\/4$/;"	kind:m	struct:llvm::object::FpoData	typeref:typename:support::ulittle32_t	access:public
NumLocationsOffset	StackMapParser.h	/^    static const unsigned NumLocationsOffset =$/;"	kind:m	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:const unsigned	access:private
NumParams	COFF.h	/^  support::ulittle16_t NumParams; \/\/ cdwParams: # bytes in params\/4$/;"	kind:m	struct:llvm::object::FpoData	typeref:typename:support::ulittle16_t	access:public
NumRecordsOffset	StackMapParser.h	/^  static const unsigned NumRecordsOffset = NumConstantsOffset + sizeof(uint32_t);$/;"	kind:m	class:llvm::StackMapV2Parser	typeref:typename:const unsigned	access:private
Number	SymbolSize.h	/^  unsigned Number;$/;"	kind:m	struct:llvm::object::SymEntry	typeref:typename:unsigned	access:public
NumberHighPart	COFF.h	/^  support::ulittle16_t NumberHighPart;$/;"	kind:m	struct:llvm::object::coff_aux_section_definition	typeref:typename:support::ulittle16_t	access:public
NumberLowPart	COFF.h	/^  support::ulittle16_t NumberLowPart;$/;"	kind:m	struct:llvm::object::coff_aux_section_definition	typeref:typename:support::ulittle16_t	access:public
NumberOfAuxSymbols	COFF.h	/^  uint8_t NumberOfAuxSymbols;$/;"	kind:m	struct:llvm::object::coff_symbol	typeref:typename:uint8_t	access:public
NumberOfDelayImportDirectory	COFF.h	/^  uint32_t NumberOfDelayImportDirectory;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:uint32_t	access:private
NumberOfLinenumbers	COFF.h	/^  support::ulittle16_t NumberOfLinenumbers;$/;"	kind:m	struct:llvm::object::coff_aux_section_definition	typeref:typename:support::ulittle16_t	access:public
NumberOfLinenumbers	COFF.h	/^  support::ulittle16_t NumberOfLinenumbers;$/;"	kind:m	struct:llvm::object::coff_section	typeref:typename:support::ulittle16_t	access:public
NumberOfNamePointers	COFF.h	/^  support::ulittle32_t NumberOfNamePointers;$/;"	kind:m	struct:llvm::object::export_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
NumberOfObjects	MachOUniversal.h	/^  uint32_t NumberOfObjects;$/;"	kind:m	class:llvm::object::MachOUniversalBinary	typeref:typename:uint32_t	access:private
NumberOfRelocationItems	COFF.h	/^  support::ulittle16_t NumberOfRelocationItems;$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle16_t	access:public
NumberOfRelocations	COFF.h	/^  support::ulittle16_t NumberOfRelocations;$/;"	kind:m	struct:llvm::object::coff_aux_section_definition	typeref:typename:support::ulittle16_t	access:public
NumberOfRelocations	COFF.h	/^  support::ulittle16_t NumberOfRelocations;$/;"	kind:m	struct:llvm::object::coff_section	typeref:typename:support::ulittle16_t	access:public
NumberOfRvaAndSize	COFF.h	/^  support::ulittle32_t NumberOfRvaAndSize;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
NumberOfRvaAndSize	COFF.h	/^  support::ulittle32_t NumberOfRvaAndSize;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle32_t	access:public
NumberOfSections	COFF.h	/^  support::ulittle16_t NumberOfSections;$/;"	kind:m	struct:llvm::object::coff_file_header	typeref:typename:support::ulittle16_t	access:public
NumberOfSections	COFF.h	/^  support::ulittle32_t NumberOfSections;$/;"	kind:m	struct:llvm::object::coff_bigobj_file_header	typeref:typename:support::ulittle32_t	access:public
NumberOfSymbols	COFF.h	/^  support::ulittle32_t NumberOfSymbols;$/;"	kind:m	struct:llvm::object::coff_bigobj_file_header	typeref:typename:support::ulittle32_t	access:public
NumberOfSymbols	COFF.h	/^  support::ulittle32_t NumberOfSymbols;$/;"	kind:m	struct:llvm::object::coff_file_header	typeref:typename:support::ulittle32_t	access:public
OEMid	COFF.h	/^  support::ulittle16_t OEMid;$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle16_t	access:public
OEMinfo	COFF.h	/^  support::ulittle16_t OEMinfo;$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle16_t	access:public
Obj	MachOUniversal.h	/^    ObjectForArch Obj;$/;"	kind:m	class:llvm::object::MachOUniversalBinary::object_iterator	typeref:typename:ObjectForArch	access:private
ObjToVisit	RelocVisitor.h	/^  const ObjectFile &ObjToVisit;$/;"	kind:m	class:llvm::object::RelocVisitor	typeref:typename:const ObjectFile &	access:private
ObjectFile	ObjectFile.h	/^  ObjectFile() = delete;$/;"	kind:p	class:llvm::object::ObjectFile	access:private	signature:()
ObjectFile	ObjectFile.h	/^  ObjectFile(const ObjectFile &other) = delete;$/;"	kind:p	class:llvm::object::ObjectFile	access:private	signature:(const ObjectFile & other)
ObjectFile	ObjectFile.h	/^  ObjectFile(unsigned int Type, MemoryBufferRef Source);$/;"	kind:p	class:llvm::object::ObjectFile	access:protected	signature:(unsigned int Type,MemoryBufferRef Source)
ObjectFile	ObjectFile.h	/^class ObjectFile : public SymbolicFile {$/;"	kind:c	namespace:llvm::object	inherits:SymbolicFile
ObjectForArch	MachOUniversal.h	/^    ObjectForArch(const MachOUniversalBinary *Parent, uint32_t Index);$/;"	kind:p	class:llvm::object::MachOUniversalBinary::ObjectForArch	access:public	signature:(const MachOUniversalBinary * Parent,uint32_t Index)
ObjectForArch	MachOUniversal.h	/^  class ObjectForArch {$/;"	kind:c	class:llvm::object::MachOUniversalBinary	access:public
Off	ELFTypes.h	/^  typedef packed<uint> Off;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:packed<uint>	access:public
Offset	COFF.h	/^    StringTableOffset Offset;$/;"	kind:m	union:llvm::object::coff_symbol::__anona9e5c959010a	typeref:typename:StringTableOffset	access:public
Offset	COFF.h	/^    StringTableOffset Offset;$/;"	kind:m	union:llvm::object::coff_symbol_generic::__anona9e5c959020a	typeref:typename:StringTableOffset	access:public
Offset	COFF.h	/^  support::ulittle32_t Offset; \/\/ ulOffStart: Offset 1st byte of function code$/;"	kind:m	struct:llvm::object::FpoData	typeref:typename:support::ulittle32_t	access:public
Offset	COFF.h	/^  support::ulittle32_t Offset;$/;"	kind:m	struct:llvm::object::StringTableOffset	typeref:typename:support::ulittle32_t	access:public
Opcodes	MachO.h	/^  ArrayRef<uint8_t> Opcodes;$/;"	kind:m	class:llvm::object::MachOBindEntry	typeref:typename:ArrayRef<uint8_t>	access:private
Opcodes	MachO.h	/^  ArrayRef<uint8_t> Opcodes;$/;"	kind:m	class:llvm::object::MachORebaseEntry	typeref:typename:ArrayRef<uint8_t>	access:private
Ordinal	MachO.h	/^  int      Ordinal;$/;"	kind:m	class:llvm::object::MachOBindEntry	typeref:typename:int	access:private
OrdinalBase	COFF.h	/^  support::ulittle32_t OrdinalBase;$/;"	kind:m	struct:llvm::object::export_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
OrdinalHint	COFF.h	/^  support::ulittle16_t OrdinalHint;$/;"	kind:m	struct:llvm::object::coff_import_header	typeref:typename:support::ulittle16_t	access:public
OrdinalTableRVA	COFF.h	/^  support::ulittle32_t OrdinalTableRVA;$/;"	kind:m	struct:llvm::object::export_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
Other	MachO.h	/^    uint64_t Other;$/;"	kind:m	struct:llvm::object::ExportEntry::NodeState	typeref:typename:uint64_t	access:public
OverlayNumber	COFF.h	/^  support::ulittle16_t OverlayNumber;$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle16_t	access:public
OwningBinary	Binary.h	/^  OwningBinary();$/;"	kind:p	class:llvm::object::OwningBinary	access:public	signature:()
OwningBinary	Binary.h	/^  OwningBinary(OwningBinary<T>&& Other);$/;"	kind:p	class:llvm::object::OwningBinary	access:public	signature:(OwningBinary<T> && Other)
OwningBinary	Binary.h	/^  OwningBinary(std::unique_ptr<T> Bin, std::unique_ptr<MemoryBuffer> Buf);$/;"	kind:p	class:llvm::object::OwningBinary	access:public	signature:(std::unique_ptr<T> Bin,std::unique_ptr<MemoryBuffer> Buf)
OwningBinary	Binary.h	/^OwningBinary<T>::OwningBinary(OwningBinary &&Other)$/;"	kind:f	class:llvm::object::OwningBinary	signature:(OwningBinary && Other)
OwningBinary	Binary.h	/^OwningBinary<T>::OwningBinary(std::unique_ptr<T> Bin,$/;"	kind:f	class:llvm::object::OwningBinary	signature:(std::unique_ptr<T> Bin,std::unique_ptr<MemoryBuffer> Buf)
OwningBinary	Binary.h	/^template <typename T> OwningBinary<T>::OwningBinary() {}$/;"	kind:f	class:llvm::object::OwningBinary	signature:()
OwningBinary	Binary.h	/^template <typename T> class OwningBinary {$/;"	kind:c	namespace:llvm::object
OwningObject	COFF.h	/^  const COFFObjectFile *OwningObject;$/;"	kind:m	class:llvm::object::BaseRelocRef	typeref:typename:const COFFObjectFile *	access:private
OwningObject	COFF.h	/^  const COFFObjectFile *OwningObject;$/;"	kind:m	class:llvm::object::DelayImportDirectoryEntryRef	typeref:typename:const COFFObjectFile *	access:private
OwningObject	COFF.h	/^  const COFFObjectFile *OwningObject;$/;"	kind:m	class:llvm::object::ExportDirectoryEntryRef	typeref:typename:const COFFObjectFile *	access:private
OwningObject	COFF.h	/^  const COFFObjectFile *OwningObject;$/;"	kind:m	class:llvm::object::ImportDirectoryEntryRef	typeref:typename:const COFFObjectFile *	access:private
OwningObject	COFF.h	/^  const COFFObjectFile *OwningObject;$/;"	kind:m	class:llvm::object::ImportedSymbolRef	typeref:typename:const COFFObjectFile *	access:private
OwningObject	MachO.h	/^  const ObjectFile *OwningObject;$/;"	kind:m	class:llvm::object::DiceRef	typeref:typename:const ObjectFile *	access:private
OwningObject	ObjectFile.h	/^  const ObjectFile *OwningObject;$/;"	kind:m	class:llvm::object::RelocationRef	typeref:typename:const ObjectFile *	access:private
OwningObject	ObjectFile.h	/^  const ObjectFile *OwningObject;$/;"	kind:m	class:llvm::object::SectionRef	typeref:typename:const ObjectFile *	access:private
OwningObject	SymbolicFile.h	/^  const SymbolicFile *OwningObject;$/;"	kind:m	class:llvm::object::BasicSymbolRef	typeref:typename:const SymbolicFile *	access:private
P	StackMapParser.h	/^    const uint8_t *P;$/;"	kind:m	class:llvm::StackMapV2Parser::ConstantAccessor	typeref:typename:const uint8_t *	access:private
P	StackMapParser.h	/^    const uint8_t *P;$/;"	kind:m	class:llvm::StackMapV2Parser::FunctionAccessor	typeref:typename:const uint8_t *	access:private
P	StackMapParser.h	/^    const uint8_t *P;$/;"	kind:m	class:llvm::StackMapV2Parser::LiveOutAccessor	typeref:typename:const uint8_t *	access:private
P	StackMapParser.h	/^    const uint8_t *P;$/;"	kind:m	class:llvm::StackMapV2Parser::LocationAccessor	typeref:typename:const uint8_t *	access:private
P	StackMapParser.h	/^    const uint8_t *P;$/;"	kind:m	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:const uint8_t *	access:private
PE32Header	COFF.h	/^  const pe32_header *PE32Header;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:const pe32_header *	access:private
PE32PlusHeader	COFF.h	/^  const pe32plus_header *PE32PlusHeader;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:const pe32plus_header *	access:private
PageRVA	COFF.h	/^  support::ulittle32_t PageRVA;$/;"	kind:m	struct:llvm::object::coff_base_reloc_block_header	typeref:typename:support::ulittle32_t	access:public
Parent	Archive.h	/^    const Archive *Parent;$/;"	kind:m	class:llvm::object::Archive::Child	typeref:typename:const Archive *	access:private
Parent	Archive.h	/^    const Archive *Parent;$/;"	kind:m	class:llvm::object::Archive::Symbol	typeref:typename:const Archive *	access:private
Parent	Archive.h	/^  Archive const *Parent;$/;"	kind:m	class:llvm::object::ArchiveMemberHeader	typeref:typename:Archive const *	access:private
Parent	MachOUniversal.h	/^    const MachOUniversalBinary *Parent;$/;"	kind:m	class:llvm::object::MachOUniversalBinary::ObjectForArch	typeref:typename:const MachOUniversalBinary *	access:private
ParentStringLength	MachO.h	/^    unsigned ParentStringLength;$/;"	kind:m	struct:llvm::object::ExportEntry::NodeState	typeref:typename:unsigned	access:public
PatchpointIDOffset	StackMapParser.h	/^    static const unsigned PatchpointIDOffset = 0;$/;"	kind:m	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:const unsigned	access:private
Perms	ArchiveWriter.h	/^  unsigned UID = 0, GID = 0, Perms = 0644;$/;"	kind:m	struct:llvm::NewArchiveMember	typeref:typename:unsigned	access:public
Phdr	ELFTypes.h	/^  typedef Elf_Phdr_Impl<ELFType<E, Is64>> Phdr;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:Elf_Phdr_Impl<ELFType<E,Is64>>	access:public
PhdrRange	ELFTypes.h	/^  typedef ArrayRef<Phdr> PhdrRange;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:ArrayRef<Phdr>	access:public
PointerSize	MachO.h	/^  uint8_t  PointerSize;$/;"	kind:m	class:llvm::object::MachOBindEntry	typeref:typename:uint8_t	access:private
PointerSize	MachO.h	/^  uint8_t  PointerSize;$/;"	kind:m	class:llvm::object::MachORebaseEntry	typeref:typename:uint8_t	access:private
PointerToLinenumber	COFF.h	/^  support::ulittle32_t PointerToLinenumber;$/;"	kind:m	struct:llvm::object::coff_aux_function_definition	typeref:typename:support::ulittle32_t	access:public
PointerToLinenumbers	COFF.h	/^  support::ulittle32_t PointerToLinenumbers;$/;"	kind:m	struct:llvm::object::coff_section	typeref:typename:support::ulittle32_t	access:public
PointerToNextFunction	COFF.h	/^  support::ulittle32_t PointerToNextFunction;$/;"	kind:m	struct:llvm::object::coff_aux_bf_and_ef_symbol	typeref:typename:support::ulittle32_t	access:public
PointerToNextFunction	COFF.h	/^  support::ulittle32_t PointerToNextFunction;$/;"	kind:m	struct:llvm::object::coff_aux_function_definition	typeref:typename:support::ulittle32_t	access:public
PointerToRawData	COFF.h	/^  support::ulittle32_t PointerToRawData;$/;"	kind:m	struct:llvm::object::coff_section	typeref:typename:support::ulittle32_t	access:public
PointerToRawData	COFF.h	/^  support::ulittle32_t PointerToRawData;$/;"	kind:m	struct:llvm::object::debug_directory	typeref:typename:support::ulittle32_t	access:public
PointerToRelocations	COFF.h	/^  support::ulittle32_t PointerToRelocations;$/;"	kind:m	struct:llvm::object::coff_section	typeref:typename:support::ulittle32_t	access:public
PointerToSymbolTable	COFF.h	/^  support::ulittle32_t PointerToSymbolTable;$/;"	kind:m	struct:llvm::object::coff_bigobj_file_header	typeref:typename:support::ulittle32_t	access:public
PointerToSymbolTable	COFF.h	/^  support::ulittle32_t PointerToSymbolTable;$/;"	kind:m	struct:llvm::object::coff_file_header	typeref:typename:support::ulittle32_t	access:public
ProcessAffinityMask	COFF.h	/^  support::ulittle32_t ProcessAffinityMask;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle32_t	access:public
ProcessAffinityMask	COFF.h	/^  support::ulittle32_t ProcessAffinityMask;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle32_t	access:public
ProcessHeapFlags	COFF.h	/^  support::ulittle32_t ProcessHeapFlags;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle32_t	access:public
ProcessHeapFlags	COFF.h	/^  support::ulittle32_t ProcessHeapFlags;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle32_t	access:public
Ptr	MachO.h	/^    const char *Ptr;      \/\/ Where in memory the load command is.$/;"	kind:m	struct:llvm::object::MachOObjectFile::LoadCommandInfo	typeref:typename:const char *	access:public
Ptr	MachO.h	/^  const uint8_t *Ptr;$/;"	kind:m	class:llvm::object::MachOBindEntry	typeref:typename:const uint8_t *	access:private
Ptr	MachO.h	/^  const uint8_t *Ptr;$/;"	kind:m	class:llvm::object::MachORebaseEntry	typeref:typename:const uint8_t *	access:private
ReadULEB128s	MachO.h	/^  void ReadULEB128s(uint64_t Index, SmallVectorImpl<uint64_t> &Out) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:void	access:public	signature:(uint64_t Index,SmallVectorImpl<uint64_t> & Out) const
RebaseType	MachO.h	/^  uint8_t  RebaseType;$/;"	kind:m	class:llvm::object::MachORebaseEntry	typeref:typename:uint8_t	access:private
RecordAccessor	StackMapParser.h	/^    RecordAccessor(const uint8_t *P) : P(P) {}$/;"	kind:f	class:llvm::StackMapV2Parser::RecordAccessor	access:private	signature:(const uint8_t * P)
RecordAccessor	StackMapParser.h	/^  class RecordAccessor {$/;"	kind:c	class:llvm::StackMapV2Parser	access:public
Register	StackMapParser.h	/^    Register = 1, Direct = 2, Indirect = 3, Constant = 4, ConstantIndex = 5$/;"	kind:e	enum:llvm::StackMapV2Parser::LocationKind	access:public
Regular	MachO.h	/^  enum class Kind { Regular, Lazy, Weak };$/;"	kind:e	enum:llvm::object::MachOBindEntry::Kind	access:public
Rel	ELFTypes.h	/^  typedef Elf_Rel_Impl<ELFType<E, Is64>, false> Rel;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:Elf_Rel_Impl<ELFType<E,Is64>,false>	access:public
RelRange	ELFTypes.h	/^  typedef ArrayRef<Rel> RelRange;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:ArrayRef<Rel>	access:public
Rela	ELFTypes.h	/^  typedef Elf_Rel_Impl<ELFType<E, Is64>, true> Rela;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:Elf_Rel_Impl<ELFType<E,Is64>,true>	access:public
RelaRange	ELFTypes.h	/^  typedef ArrayRef<Rela> RelaRange;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:ArrayRef<Rela>	access:public
RelativeVirtualAddress	COFF.h	/^  support::ulittle32_t RelativeVirtualAddress;$/;"	kind:m	struct:llvm::object::data_directory	typeref:typename:support::ulittle32_t	access:public
RelocToApply	RelocVisitor.h	/^  RelocToApply() : Value(0), Width(0) {}$/;"	kind:f	struct:llvm::object::RelocToApply	access:public	signature:()
RelocToApply	RelocVisitor.h	/^  RelocToApply(int64_t Value, char Width) : Value(Value), Width(Width) {}$/;"	kind:f	struct:llvm::object::RelocToApply	access:public	signature:(int64_t Value,char Width)
RelocToApply	RelocVisitor.h	/^struct RelocToApply {$/;"	kind:s	namespace:llvm::object
RelocVisitor	RelocVisitor.h	/^  explicit RelocVisitor(const ObjectFile &Obj)$/;"	kind:f	class:llvm::object::RelocVisitor	access:public	signature:(const ObjectFile & Obj)
RelocVisitor	RelocVisitor.h	/^class RelocVisitor {$/;"	kind:c	namespace:llvm::object
RelocationPimpl	ObjectFile.h	/^  DataRefImpl RelocationPimpl;$/;"	kind:m	class:llvm::object::RelocationRef	typeref:typename:DataRefImpl	access:private
RelocationRef	ObjectFile.h	/^  RelocationRef() : OwningObject(nullptr) { }$/;"	kind:f	class:llvm::object::RelocationRef	access:public	signature:()
RelocationRef	ObjectFile.h	/^  RelocationRef(DataRefImpl RelocationP, const ObjectFile *Owner);$/;"	kind:p	class:llvm::object::RelocationRef	access:public	signature:(DataRefImpl RelocationP,const ObjectFile * Owner)
RelocationRef	ObjectFile.h	/^class RelocationRef {$/;"	kind:c	namespace:llvm::object
RelocationRef	ObjectFile.h	/^inline RelocationRef::RelocationRef(DataRefImpl RelocationP,$/;"	kind:f	class:llvm::object::RelocationRef	signature:(DataRefImpl RelocationP,const ObjectFile * Owner)
RemainingLoopCount	MachO.h	/^  uint64_t RemainingLoopCount;$/;"	kind:m	class:llvm::object::MachOBindEntry	typeref:typename:uint64_t	access:private
RemainingLoopCount	MachO.h	/^  uint64_t RemainingLoopCount;$/;"	kind:m	class:llvm::object::MachORebaseEntry	typeref:typename:uint64_t	access:private
Reserved	COFF.h	/^  support::ulittle16_t Reserved;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle16_t	access:public
Reserved	COFF.h	/^  support::ulittle16_t Reserved;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle16_t	access:public
Reserved	COFF.h	/^  support::ulittle16_t Reserved[4];$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle16_t[4]	access:public
Reserved	COFF.h	/^  uint8_t              Reserved;$/;"	kind:m	struct:llvm::object::coff_aux_clr_token	typeref:typename:uint8_t	access:public
Reserved2	COFF.h	/^  support::ulittle16_t Reserved2[10];$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle16_t[10]	access:public
SEHandlerCount	COFF.h	/^  support::ulittle32_t SEHandlerCount;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle32_t	access:public
SEHandlerCount	COFF.h	/^  support::ulittle64_t SEHandlerCount;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle64_t	access:public
SEHandlerTable	COFF.h	/^  support::ulittle32_t SEHandlerTable;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle32_t	access:public
SEHandlerTable	COFF.h	/^  support::ulittle64_t SEHandlerTable;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle64_t	access:public
SF_Absolute	SymbolicFile.h	/^    SF_Absolute = 1U << 3,       \/\/ Absolute symbol$/;"	kind:e	enum:llvm::object::BasicSymbolRef::Flags	access:public
SF_Common	SymbolicFile.h	/^    SF_Common = 1U << 4,         \/\/ Symbol has common linkage$/;"	kind:e	enum:llvm::object::BasicSymbolRef::Flags	access:public
SF_Const	SymbolicFile.h	/^    SF_Const = 1U << 10,         \/\/ Symbol value is constant$/;"	kind:e	enum:llvm::object::BasicSymbolRef::Flags	access:public
SF_Exported	SymbolicFile.h	/^    SF_Exported = 1U << 6,       \/\/ Symbol is visible to other DSOs$/;"	kind:e	enum:llvm::object::BasicSymbolRef::Flags	access:public
SF_FormatSpecific	SymbolicFile.h	/^    SF_FormatSpecific = 1U << 7, \/\/ Specific to the object file format$/;"	kind:e	enum:llvm::object::BasicSymbolRef::Flags	access:public
SF_Global	SymbolicFile.h	/^    SF_Global = 1U << 1,         \/\/ Global symbol$/;"	kind:e	enum:llvm::object::BasicSymbolRef::Flags	access:public
SF_Hidden	SymbolicFile.h	/^    SF_Hidden = 1U << 9,         \/\/ Symbol has hidden visibility$/;"	kind:e	enum:llvm::object::BasicSymbolRef::Flags	access:public
SF_Indirect	SymbolicFile.h	/^    SF_Indirect = 1U << 5,       \/\/ Symbol is an alias to another symbol$/;"	kind:e	enum:llvm::object::BasicSymbolRef::Flags	access:public
SF_None	SymbolicFile.h	/^    SF_None = 0,$/;"	kind:e	enum:llvm::object::BasicSymbolRef::Flags	access:public
SF_Thumb	SymbolicFile.h	/^    SF_Thumb = 1U << 8,          \/\/ Thumb symbol in a 32-bit ARM binary$/;"	kind:e	enum:llvm::object::BasicSymbolRef::Flags	access:public
SF_Undefined	SymbolicFile.h	/^    SF_Undefined = 1U << 0,      \/\/ Symbol is defined in another object file$/;"	kind:e	enum:llvm::object::BasicSymbolRef::Flags	access:public
SF_Weak	SymbolicFile.h	/^    SF_Weak = 1U << 2,           \/\/ Weak symbol$/;"	kind:e	enum:llvm::object::BasicSymbolRef::Flags	access:public
ST_Data	ObjectFile.h	/^    ST_Data,$/;"	kind:e	enum:llvm::object::SymbolRef::Type	access:public
ST_Debug	ObjectFile.h	/^    ST_Debug,$/;"	kind:e	enum:llvm::object::SymbolRef::Type	access:public
ST_File	ObjectFile.h	/^    ST_File,$/;"	kind:e	enum:llvm::object::SymbolRef::Type	access:public
ST_Function	ObjectFile.h	/^    ST_Function,$/;"	kind:e	enum:llvm::object::SymbolRef::Type	access:public
ST_Other	ObjectFile.h	/^    ST_Other$/;"	kind:e	enum:llvm::object::SymbolRef::Type	access:public
ST_Unknown	ObjectFile.h	/^    ST_Unknown, \/\/ Type not specified$/;"	kind:e	enum:llvm::object::SymbolRef::Type	access:public
SectionAlignment	COFF.h	/^  support::ulittle32_t SectionAlignment;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
SectionAlignment	COFF.h	/^  support::ulittle32_t SectionAlignment;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle32_t	access:public
SectionID	SymbolSize.h	/^  unsigned SectionID;$/;"	kind:m	struct:llvm::object::SymEntry	typeref:typename:unsigned	access:public
SectionList	MachO.h	/^  typedef SmallVector<const char*, 1> SectionList;$/;"	kind:t	class:llvm::object::MachOObjectFile	typeref:typename:SmallVector<const char *,1>	access:private
SectionNumber	COFF.h	/^  SectionNumberType SectionNumber;$/;"	kind:m	struct:llvm::object::coff_symbol	typeref:typename:SectionNumberType	access:public
SectionPimpl	ObjectFile.h	/^  DataRefImpl SectionPimpl;$/;"	kind:m	class:llvm::object::SectionRef	typeref:typename:DataRefImpl	access:private
SectionRef	ObjectFile.h	/^  SectionRef() : OwningObject(nullptr) { }$/;"	kind:f	class:llvm::object::SectionRef	access:public	signature:()
SectionRef	ObjectFile.h	/^  SectionRef(DataRefImpl SectionP, const ObjectFile *Owner);$/;"	kind:p	class:llvm::object::SectionRef	access:public	signature:(DataRefImpl SectionP,const ObjectFile * Owner)
SectionRef	ObjectFile.h	/^class SectionRef {$/;"	kind:c	namespace:llvm::object
SectionRef	ObjectFile.h	/^inline SectionRef::SectionRef(DataRefImpl SectionP,$/;"	kind:f	class:llvm::object::SectionRef	signature:(DataRefImpl SectionP,const ObjectFile * Owner)
SectionTable	COFF.h	/^  const coff_section *SectionTable;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:const coff_section *	access:private
Sections	MachO.h	/^  SectionList Sections;$/;"	kind:m	class:llvm::object::MachOObjectFile	typeref:typename:SectionList	access:private
SecurityCookie	COFF.h	/^  support::ulittle32_t SecurityCookie;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle32_t	access:public
SecurityCookie	COFF.h	/^  support::ulittle64_t SecurityCookie;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle64_t	access:public
SegmentIndex	MachO.h	/^  uint32_t SegmentIndex;$/;"	kind:m	class:llvm::object::MachOBindEntry	typeref:typename:uint32_t	access:private
SegmentIndex	MachO.h	/^  uint32_t SegmentIndex;$/;"	kind:m	class:llvm::object::MachORebaseEntry	typeref:typename:uint32_t	access:private
SegmentOffset	MachO.h	/^  uint64_t SegmentOffset;$/;"	kind:m	class:llvm::object::MachOBindEntry	typeref:typename:uint64_t	access:private
SegmentOffset	MachO.h	/^  uint64_t SegmentOffset;$/;"	kind:m	class:llvm::object::MachORebaseEntry	typeref:typename:uint64_t	access:private
Selection	COFF.h	/^  uint8_t              Selection;$/;"	kind:m	struct:llvm::object::coff_aux_section_definition	typeref:typename:uint8_t	access:public
Shdr	ELFTypes.h	/^  typedef Elf_Shdr_Impl<ELFType<E, Is64>> Shdr;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:Elf_Shdr_Impl<ELFType<E,Is64>>	access:public
ShdrRange	ELFTypes.h	/^  typedef ArrayRef<Shdr> ShdrRange;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:ArrayRef<Shdr>	access:public
ShndxTable	ELFObjectFile.h	/^  ArrayRef<Elf_Word> ShndxTable;$/;"	kind:m	class:llvm::object::ELFObjectFile	typeref:typename:ArrayRef<Elf_Word>	access:protected
ShortName	COFF.h	/^    char ShortName[COFF::NameSize];$/;"	kind:m	union:llvm::object::coff_symbol::__anona9e5c959010a	typeref:typename:char[]	access:public
ShortName	COFF.h	/^    char ShortName[COFF::NameSize];$/;"	kind:m	union:llvm::object::coff_symbol_generic::__anona9e5c959020a	typeref:typename:char[]	access:public
Sig1	COFF.h	/^  support::ulittle16_t Sig1;$/;"	kind:m	struct:llvm::object::coff_bigobj_file_header	typeref:typename:support::ulittle16_t	access:public
Sig1	COFF.h	/^  support::ulittle16_t Sig1;$/;"	kind:m	struct:llvm::object::coff_import_header	typeref:typename:support::ulittle16_t	access:public
Sig2	COFF.h	/^  support::ulittle16_t Sig2;$/;"	kind:m	struct:llvm::object::coff_bigobj_file_header	typeref:typename:support::ulittle16_t	access:public
Sig2	COFF.h	/^  support::ulittle16_t Sig2;$/;"	kind:m	struct:llvm::object::coff_import_header	typeref:typename:support::ulittle16_t	access:public
Size	Archive.h	/^    char Size[10]; \/\/\/< Size of data, not including header or padding.$/;"	kind:m	struct:llvm::object::ArchiveMemberHeader::ArMemHdrType	typeref:typename:char[10]	access:public
Size	COFF.h	/^  support::ulittle32_t Size;   \/\/ cbProcSize: # bytes in function$/;"	kind:m	struct:llvm::object::FpoData	typeref:typename:support::ulittle32_t	access:public
Size	COFF.h	/^  support::ulittle32_t Size;$/;"	kind:m	struct:llvm::object::data_directory	typeref:typename:support::ulittle32_t	access:public
SizeOfCode	COFF.h	/^  support::ulittle32_t SizeOfCode;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
SizeOfCode	COFF.h	/^  support::ulittle32_t SizeOfCode;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle32_t	access:public
SizeOfData	COFF.h	/^  support::ulittle32_t SizeOfData;$/;"	kind:m	struct:llvm::object::coff_import_header	typeref:typename:support::ulittle32_t	access:public
SizeOfData	COFF.h	/^  support::ulittle32_t SizeOfData;$/;"	kind:m	struct:llvm::object::debug_directory	typeref:typename:support::ulittle32_t	access:public
SizeOfHeaders	COFF.h	/^  support::ulittle32_t SizeOfHeaders;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
SizeOfHeaders	COFF.h	/^  support::ulittle32_t SizeOfHeaders;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle32_t	access:public
SizeOfHeapCommit	COFF.h	/^  support::ulittle32_t SizeOfHeapCommit;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
SizeOfHeapCommit	COFF.h	/^  support::ulittle64_t SizeOfHeapCommit;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle64_t	access:public
SizeOfHeapReserve	COFF.h	/^  support::ulittle32_t SizeOfHeapReserve;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
SizeOfHeapReserve	COFF.h	/^  support::ulittle64_t SizeOfHeapReserve;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle64_t	access:public
SizeOfImage	COFF.h	/^  support::ulittle32_t SizeOfImage;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
SizeOfImage	COFF.h	/^  support::ulittle32_t SizeOfImage;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle32_t	access:public
SizeOfInitializedData	COFF.h	/^  support::ulittle32_t SizeOfInitializedData;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
SizeOfInitializedData	COFF.h	/^  support::ulittle32_t SizeOfInitializedData;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle32_t	access:public
SizeOfOptionalHeader	COFF.h	/^  support::ulittle16_t SizeOfOptionalHeader;$/;"	kind:m	struct:llvm::object::coff_file_header	typeref:typename:support::ulittle16_t	access:public
SizeOfRawData	COFF.h	/^  support::ulittle32_t SizeOfRawData;$/;"	kind:m	struct:llvm::object::coff_section	typeref:typename:support::ulittle32_t	access:public
SizeOfStackCommit	COFF.h	/^  support::ulittle32_t SizeOfStackCommit;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
SizeOfStackCommit	COFF.h	/^  support::ulittle64_t SizeOfStackCommit;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle64_t	access:public
SizeOfStackReserve	COFF.h	/^  support::ulittle32_t SizeOfStackReserve;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
SizeOfStackReserve	COFF.h	/^  support::ulittle64_t SizeOfStackReserve;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle64_t	access:public
SizeOfUninitializedData	COFF.h	/^  support::ulittle32_t SizeOfUninitializedData;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
SizeOfUninitializedData	COFF.h	/^  support::ulittle32_t SizeOfUninitializedData;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle32_t	access:public
SizeOfZeroFill	COFF.h	/^  support::ulittle32_t SizeOfZeroFill;$/;"	kind:m	struct:llvm::object::coff_tls_directory	typeref:typename:support::ulittle32_t	access:public
SizeOffset	StackMapParser.h	/^    static const int SizeOffset =$/;"	kind:m	class:llvm::StackMapV2Parser::LiveOutAccessor	typeref:typename:const int	access:private
SmallConstantOffset	StackMapParser.h	/^    static const int SmallConstantOffset = DwarfRegNumOffset + sizeof(uint16_t);$/;"	kind:m	class:llvm::StackMapV2Parser::LocationAccessor	typeref:typename:const int	access:private
Stack	MachO.h	/^  SmallVector<NodeState, 16> Stack;$/;"	kind:m	class:llvm::object::ExportEntry	typeref:typename:SmallVector<NodeState,16>	access:private
StackMapRecordOffsets	StackMapParser.h	/^  std::vector<unsigned> StackMapRecordOffsets;$/;"	kind:m	class:llvm::StackMapV2Parser	typeref:typename:std::vector<unsigned>	access:private
StackMapSection	StackMapParser.h	/^  ArrayRef<uint8_t> StackMapSection;$/;"	kind:m	class:llvm::StackMapV2Parser	typeref:typename:ArrayRef<uint8_t>	access:private
StackMapV2Parser	StackMapParser.h	/^  StackMapV2Parser(ArrayRef<uint8_t> StackMapSection)$/;"	kind:f	class:llvm::StackMapV2Parser	access:public	signature:(ArrayRef<uint8_t> StackMapSection)
StackMapV2Parser	StackMapParser.h	/^class StackMapV2Parser {$/;"	kind:c	namespace:llvm
Start	MachO.h	/^    const uint8_t *Start;$/;"	kind:m	struct:llvm::object::ExportEntry::NodeState	typeref:typename:const uint8_t *	access:public
StartAddressOfRawData	COFF.h	/^  IntTy StartAddressOfRawData;$/;"	kind:m	struct:llvm::object::coff_tls_directory	typeref:typename:IntTy	access:public
StartOfFile	Archive.h	/^    uint16_t StartOfFile;$/;"	kind:m	class:llvm::object::Archive::Child	typeref:typename:uint16_t	access:private
StorageClass	COFF.h	/^  uint8_t StorageClass;$/;"	kind:m	struct:llvm::object::coff_symbol	typeref:typename:uint8_t	access:public
StringIndex	Archive.h	/^    uint32_t StringIndex; \/\/ Extra index to the string.$/;"	kind:m	class:llvm::object::Archive::Symbol	typeref:typename:uint32_t	access:private
StringTable	Archive.h	/^  StringRef StringTable;$/;"	kind:m	class:llvm::object::Archive	typeref:typename:StringRef	access:private
StringTable	COFF.h	/^  const char *StringTable;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:const char *	access:private
StringTableOffset	COFF.h	/^struct StringTableOffset {$/;"	kind:s	namespace:llvm::object
StringTableSize	COFF.h	/^  uint32_t StringTableSize;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:uint32_t	access:private
Subsystem	COFF.h	/^  support::ulittle16_t Subsystem;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle16_t	access:public
Subsystem	COFF.h	/^  support::ulittle16_t Subsystem;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle16_t	access:public
Sword	ELFTypes.h	/^  typedef packed<int32_t> Sword;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:packed<int32_t>	access:public
Sxword	ELFTypes.h	/^  typedef packed<int64_t> Sxword;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:packed<int64_t>	access:public
Sym	ELFTypes.h	/^  typedef Elf_Sym_Impl<ELFType<E, Is64>> Sym;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:Elf_Sym_Impl<ELFType<E,Is64>>	access:public
Sym	IRObjectFile.h	/^  typedef PointerUnion<GlobalValue *, AsmSymbol *> Sym;$/;"	kind:t	class:llvm::object::IRObjectFile	typeref:typename:PointerUnion<GlobalValue *,AsmSymbol * >	access:private
SymEntry	SymbolSize.h	/^struct SymEntry {$/;"	kind:s	namespace:llvm::object
SymRange	ELFTypes.h	/^  typedef ArrayRef<Sym> SymRange;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:ArrayRef<Sym>	access:public
SymTab	IRObjectFile.h	/^  std::vector<Sym> SymTab;$/;"	kind:m	class:llvm::object::IRObjectFile	typeref:typename:std::vector<Sym>	access:private
Symbol	Archive.h	/^    Symbol(const Archive *p, uint32_t symi, uint32_t stri)$/;"	kind:f	class:llvm::object::Archive::Symbol	access:public	signature:(const Archive * p,uint32_t symi,uint32_t stri)
Symbol	Archive.h	/^  class Symbol {$/;"	kind:c	class:llvm::object::Archive	access:public
SymbolIndex	Archive.h	/^    uint32_t SymbolIndex;$/;"	kind:m	class:llvm::object::Archive::Symbol	typeref:typename:uint32_t	access:private
SymbolName	MachO.h	/^  StringRef SymbolName;$/;"	kind:m	class:llvm::object::MachOBindEntry	typeref:typename:StringRef	access:private
SymbolPimpl	SymbolicFile.h	/^  DataRefImpl SymbolPimpl;$/;"	kind:m	class:llvm::object::BasicSymbolRef	typeref:typename:DataRefImpl	access:private
SymbolRef	ObjectFile.h	/^  SymbolRef() : BasicSymbolRef() {}$/;"	kind:f	class:llvm::object::SymbolRef	access:public	signature:()
SymbolRef	ObjectFile.h	/^  SymbolRef(DataRefImpl SymbolP, const ObjectFile *Owner);$/;"	kind:p	class:llvm::object::SymbolRef	access:public	signature:(DataRefImpl SymbolP,const ObjectFile * Owner)
SymbolRef	ObjectFile.h	/^  SymbolRef(const BasicSymbolRef &B) : BasicSymbolRef(B) {$/;"	kind:f	class:llvm::object::SymbolRef	access:public	signature:(const BasicSymbolRef & B)
SymbolRef	ObjectFile.h	/^class SymbolRef : public BasicSymbolRef {$/;"	kind:c	namespace:llvm::object	inherits:BasicSymbolRef
SymbolRef	ObjectFile.h	/^inline SymbolRef::SymbolRef(DataRefImpl SymbolP, const ObjectFile *Owner)$/;"	kind:f	class:llvm::object::SymbolRef	signature:(DataRefImpl SymbolP,const ObjectFile * Owner)
SymbolTable	Archive.h	/^  StringRef SymbolTable;$/;"	kind:m	class:llvm::object::Archive	typeref:typename:StringRef	access:private
SymbolTable16	COFF.h	/^  const coff_symbol16 *SymbolTable16;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:const coff_symbol16 *	access:private
SymbolTable32	COFF.h	/^  const coff_symbol32 *SymbolTable32;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:const coff_symbol32 *	access:private
SymbolTableIndex	COFF.h	/^  support::ulittle32_t SymbolTableIndex;$/;"	kind:m	struct:llvm::object::coff_aux_clr_token	typeref:typename:support::ulittle32_t	access:public
SymbolTableIndex	COFF.h	/^  support::ulittle32_t SymbolTableIndex;$/;"	kind:m	struct:llvm::object::coff_relocation	typeref:typename:support::ulittle32_t	access:public
SymbolicFile	SymbolicFile.h	/^  SymbolicFile(unsigned int Type, MemoryBufferRef Source);$/;"	kind:p	class:llvm::object::SymbolicFile	access:public	signature:(unsigned int Type,MemoryBufferRef Source)
SymbolicFile	SymbolicFile.h	/^class SymbolicFile : public Binary {$/;"	kind:c	namespace:llvm::object	inherits:Binary
SymtabLoadCmd	MachO.h	/^  const char *SymtabLoadCmd;$/;"	kind:m	class:llvm::object::MachOObjectFile	typeref:typename:const char *	access:private
Table	COFF.h	/^  const delay_import_directory_table_entry *Table;$/;"	kind:m	class:llvm::object::DelayImportDirectoryEntryRef	typeref:typename:const delay_import_directory_table_entry *	access:private
TableKind	MachO.h	/^  Kind     TableKind;$/;"	kind:m	class:llvm::object::MachOBindEntry	typeref:typename:Kind	access:private
TagIndex	COFF.h	/^  support::ulittle32_t TagIndex;$/;"	kind:m	struct:llvm::object::coff_aux_function_definition	typeref:typename:support::ulittle32_t	access:public
TagIndex	COFF.h	/^  support::ulittle32_t TagIndex;$/;"	kind:m	struct:llvm::object::coff_aux_weak_external	typeref:typename:support::ulittle32_t	access:public
TargetEndianness	ELFTypes.h	/^  static const endianness TargetEndianness = E;$/;"	kind:m	struct:llvm::object::ELFType	typeref:typename:const endianness	access:public
Terminator	Archive.h	/^    char Terminator[2];$/;"	kind:m	struct:llvm::object::ArchiveMemberHeader::ArMemHdrType	typeref:typename:char[2]	access:public
ThinBuffers	Archive.h	/^  mutable std::vector<std::unique_ptr<MemoryBuffer>> ThinBuffers;$/;"	kind:m	class:llvm::object::Archive	typeref:typename:std::vector<std::unique_ptr<MemoryBuffer>>	access:private
TimeDateStamp	COFF.h	/^  support::ulittle32_t TimeDateStamp;$/;"	kind:m	struct:llvm::object::coff_bigobj_file_header	typeref:typename:support::ulittle32_t	access:public
TimeDateStamp	COFF.h	/^  support::ulittle32_t TimeDateStamp;$/;"	kind:m	struct:llvm::object::coff_file_header	typeref:typename:support::ulittle32_t	access:public
TimeDateStamp	COFF.h	/^  support::ulittle32_t TimeDateStamp;$/;"	kind:m	struct:llvm::object::coff_import_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
TimeDateStamp	COFF.h	/^  support::ulittle32_t TimeDateStamp;$/;"	kind:m	struct:llvm::object::coff_import_header	typeref:typename:support::ulittle32_t	access:public
TimeDateStamp	COFF.h	/^  support::ulittle32_t TimeDateStamp;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle32_t	access:public
TimeDateStamp	COFF.h	/^  support::ulittle32_t TimeDateStamp;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle32_t	access:public
TimeDateStamp	COFF.h	/^  support::ulittle32_t TimeDateStamp;$/;"	kind:m	struct:llvm::object::debug_directory	typeref:typename:support::ulittle32_t	access:public
TimeDateStamp	COFF.h	/^  support::ulittle32_t TimeDateStamp;$/;"	kind:m	struct:llvm::object::export_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
TimeStamp	COFF.h	/^  support::ulittle32_t TimeStamp;$/;"	kind:m	struct:llvm::object::delay_import_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
TotalSize	COFF.h	/^  support::ulittle32_t TotalSize;$/;"	kind:m	struct:llvm::object::coff_aux_function_definition	typeref:typename:support::ulittle32_t	access:public
Trie	MachO.h	/^  ArrayRef<uint8_t> Trie;$/;"	kind:m	class:llvm::object::ExportEntry	typeref:typename:ArrayRef<uint8_t>	access:private
Type	COFF.h	/^  support::ulittle16_t Type;$/;"	kind:m	struct:llvm::object::coff_relocation	typeref:typename:support::ulittle16_t	access:public
Type	COFF.h	/^  support::ulittle16_t Type;$/;"	kind:m	struct:llvm::object::coff_symbol	typeref:typename:support::ulittle16_t	access:public
Type	COFF.h	/^  support::ulittle32_t Type;$/;"	kind:m	struct:llvm::object::debug_directory	typeref:typename:support::ulittle32_t	access:public
Type	ObjectFile.h	/^  enum Type {$/;"	kind:g	class:llvm::object::SymbolRef	access:public
TypeID	Binary.h	/^  unsigned int TypeID;$/;"	kind:m	class:llvm::object::Binary	typeref:typename:unsigned int	access:private
TypeInfo	COFF.h	/^  support::ulittle16_t TypeInfo;$/;"	kind:m	struct:llvm::object::coff_import_header	typeref:typename:support::ulittle16_t	access:public
UID	Archive.h	/^    char UID[6];$/;"	kind:m	struct:llvm::object::ArchiveMemberHeader::ArMemHdrType	typeref:typename:char[6]	access:public
UID	ArchiveWriter.h	/^  unsigned UID = 0, GID = 0, Perms = 0644;$/;"	kind:m	struct:llvm::NewArchiveMember	typeref:typename:unsigned	access:public
UUID	COFF.h	/^  uint8_t              UUID[16];$/;"	kind:m	struct:llvm::object::coff_bigobj_file_header	typeref:typename:uint8_t[16]	access:public
UnloadDelayImportTable	COFF.h	/^  support::ulittle32_t UnloadDelayImportTable;$/;"	kind:m	struct:llvm::object::delay_import_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
Unused	COFF.h	/^  uint8_t              Unused;$/;"	kind:m	struct:llvm::object::coff_aux_section_definition	typeref:typename:uint8_t	access:public
Unused1	COFF.h	/^  char Unused1[10];$/;"	kind:m	struct:llvm::object::coff_aux_weak_external	typeref:typename:char[10]	access:public
Unused1	COFF.h	/^  char Unused1[2];$/;"	kind:m	struct:llvm::object::coff_aux_function_definition	typeref:typename:char[2]	access:public
Unused1	COFF.h	/^  char Unused1[4];$/;"	kind:m	struct:llvm::object::coff_aux_bf_and_ef_symbol	typeref:typename:char[4]	access:public
Unused2	COFF.h	/^  char Unused2[6];$/;"	kind:m	struct:llvm::object::coff_aux_bf_and_ef_symbol	typeref:typename:char[6]	access:public
Unused3	COFF.h	/^  char Unused3[2];$/;"	kind:m	struct:llvm::object::coff_aux_bf_and_ef_symbol	typeref:typename:char[2]	access:public
UnwindInformation	COFF.h	/^  support::ulittle32_t UnwindInformation;$/;"	kind:m	struct:llvm::object::coff_runtime_function_x64	typeref:typename:support::ulittle32_t	access:public
UsedBytesInTheLastPage	COFF.h	/^  support::ulittle16_t UsedBytesInTheLastPage;$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle16_t	access:public
UuidLoadCmd	MachO.h	/^  const char *UuidLoadCmd;$/;"	kind:m	class:llvm::object::MachOObjectFile	typeref:typename:const char *	access:private
Value	COFF.h	/^  support::ulittle32_t Value;$/;"	kind:m	struct:llvm::object::coff_symbol	typeref:typename:support::ulittle32_t	access:public
Value	COFF.h	/^  support::ulittle32_t Value;$/;"	kind:m	struct:llvm::object::coff_symbol_generic	typeref:typename:support::ulittle32_t	access:public
Value	RelocVisitor.h	/^  int64_t Value;$/;"	kind:m	struct:llvm::object::RelocToApply	typeref:typename:int64_t	access:public
Verdaux	ELFTypes.h	/^  typedef Elf_Verdaux_Impl<ELFType<E, Is64>> Verdaux;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:Elf_Verdaux_Impl<ELFType<E,Is64>>	access:public
Verdef	ELFTypes.h	/^  typedef Elf_Verdef_Impl<ELFType<E, Is64>> Verdef;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:Elf_Verdef_Impl<ELFType<E,Is64>>	access:public
VerifyStrTab	ELF.h	/^  void VerifyStrTab(const Elf_Shdr *sh) const;$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:void	access:public	signature:(const Elf_Shdr * sh) const
Vernaux	ELFTypes.h	/^  typedef Elf_Vernaux_Impl<ELFType<E, Is64>> Vernaux;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:Elf_Vernaux_Impl<ELFType<E,Is64>>	access:public
Verneed	ELFTypes.h	/^  typedef Elf_Verneed_Impl<ELFType<E, Is64>> Verneed;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:Elf_Verneed_Impl<ELFType<E,Is64>>	access:public
Version	COFF.h	/^  support::ulittle16_t Version;$/;"	kind:m	struct:llvm::object::coff_bigobj_file_header	typeref:typename:support::ulittle16_t	access:public
Version	COFF.h	/^  support::ulittle16_t Version;$/;"	kind:m	struct:llvm::object::coff_import_header	typeref:typename:support::ulittle16_t	access:public
Versym	ELFTypes.h	/^  typedef Elf_Versym_Impl<ELFType<E, Is64>> Versym;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:Elf_Versym_Impl<ELFType<E,Is64>>	access:public
VirtualAddress	COFF.h	/^  support::ulittle32_t VirtualAddress;$/;"	kind:m	struct:llvm::object::coff_relocation	typeref:typename:support::ulittle32_t	access:public
VirtualAddress	COFF.h	/^  support::ulittle32_t VirtualAddress;$/;"	kind:m	struct:llvm::object::coff_section	typeref:typename:support::ulittle32_t	access:public
VirtualMemoryThreshold	COFF.h	/^  support::ulittle32_t VirtualMemoryThreshold;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle32_t	access:public
VirtualMemoryThreshold	COFF.h	/^  support::ulittle32_t VirtualMemoryThreshold;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle32_t	access:public
VirtualSize	COFF.h	/^  support::ulittle32_t VirtualSize;$/;"	kind:m	struct:llvm::object::coff_section	typeref:typename:support::ulittle32_t	access:public
Weak	MachO.h	/^  enum class Kind { Regular, Lazy, Weak };$/;"	kind:e	enum:llvm::object::MachOBindEntry::Kind	access:public
Width	RelocVisitor.h	/^  char Width;$/;"	kind:m	struct:llvm::object::RelocToApply	typeref:typename:char	access:public
Win32VersionValue	COFF.h	/^  support::ulittle32_t Win32VersionValue;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
Win32VersionValue	COFF.h	/^  support::ulittle32_t Win32VersionValue;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle32_t	access:public
Word	ELFTypes.h	/^  typedef packed<uint32_t> Word;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:packed<uint32_t>	access:public
Xword	ELFTypes.h	/^  typedef packed<uint64_t> Xword;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:packed<uint64_t>	access:public
Zeroes	COFF.h	/^  support::ulittle32_t Zeroes;$/;"	kind:m	struct:llvm::object::StringTableOffset	typeref:typename:support::ulittle32_t	access:public
__anon14822023010a	MachO.h	/^  union {$/;"	kind:u	class:llvm::object::MachOObjectFile	access:private
__anona9e5c959010a	COFF.h	/^  union {$/;"	kind:u	struct:llvm::object::coff_symbol	access:public
__anona9e5c959020a	COFF.h	/^  union {$/;"	kind:u	struct:llvm::object::coff_symbol_generic	access:public
__anondff8eca7010a	ELFTypes.h	/^  union {$/;"	kind:u	struct:llvm::object::Elf_Dyn_Base	access:public
__anondff8eca7020a	ELFTypes.h	/^  union {$/;"	kind:u	struct:llvm::object::Elf_Dyn_Base	access:public
__anone70cca9d0108	SymbolicFile.h	/^  struct {$/;"	kind:s	union:llvm::object::DataRefImpl	access:public
__anonff0261800103	Binary.h	/^  enum {$/;"	kind:g	class:llvm::object::Binary	access:protected
a	SymbolicFile.h	/^    uint32_t a, b;$/;"	kind:m	struct:llvm::object::DataRefImpl::__anone70cca9d0108	typeref:typename:uint32_t	access:public
addend	MachO.h	/^  int64_t addend() const;$/;"	kind:p	class:llvm::object::MachOBindEntry	typeref:typename:int64_t	access:public	signature:() const
address	MachO.h	/^  uint64_t address() const;$/;"	kind:p	class:llvm::object::ExportEntry	typeref:typename:uint64_t	access:public	signature:() const
anchor	Archive.h	/^  virtual void anchor();$/;"	kind:p	class:llvm::object::Archive	typeref:typename:void	access:private	signature:()
anchor	MachOUniversal.h	/^  virtual void anchor();$/;"	kind:p	class:llvm::object::MachOUniversalBinary	typeref:typename:void	access:private	signature:()
anchor	ObjectFile.h	/^  virtual void anchor();$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:void	access:private	signature:()
arch_not_found	Error.h	/^  arch_not_found = 1,$/;"	kind:e	enum:llvm::object::object_error	access:public
ases	ELFTypes.h	/^  Elf_Word ases;     \/\/ ASEs flags$/;"	kind:m	struct:llvm::object::Elf_Mips_ABIFlags	typeref:typename:Elf_Word	access:public
b	SymbolicFile.h	/^    uint32_t a, b;$/;"	kind:m	struct:llvm::object::DataRefImpl::__anone70cca9d0108	typeref:typename:uint32_t	access:public
base	ELF.h	/^  const uint8_t *base() const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:const uint8_t *	access:public	signature:() const
base	ObjectFile.h	/^  const uint8_t *base() const {$/;"	kind:f	class:llvm::object::ObjectFile	typeref:typename:const uint8_t *	access:protected	signature:() const
base_reloc_begin	COFF.h	/^  base_reloc_iterator base_reloc_begin() const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:base_reloc_iterator	access:public	signature:() const
base_reloc_end	COFF.h	/^  base_reloc_iterator base_reloc_end() const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:base_reloc_iterator	access:public	signature:() const
base_reloc_iterator	COFF.h	/^typedef content_iterator<BaseRelocRef> base_reloc_iterator;$/;"	kind:t	namespace:llvm::object	typeref:typename:content_iterator<BaseRelocRef>
base_relocs	COFF.h	/^  iterator_range<base_reloc_iterator> base_relocs() const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:iterator_range<base_reloc_iterator>	access:public	signature:() const
basic_symbol_iterator	SymbolicFile.h	/^typedef content_iterator<BasicSymbolRef> basic_symbol_iterator;$/;"	kind:t	namespace:llvm::object	typeref:typename:content_iterator<BasicSymbolRef>
basic_symbol_iterator_range	SymbolicFile.h	/^  typedef iterator_range<basic_symbol_iterator> basic_symbol_iterator_range;$/;"	kind:t	class:llvm::object::SymbolicFile	typeref:typename:iterator_range<basic_symbol_iterator>	access:public
begin_dices	MachO.h	/^  dice_iterator begin_dices() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:dice_iterator	access:public	signature:() const
begin_load_commands	MachO.h	/^  load_command_iterator begin_load_commands() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:load_command_iterator	access:public	signature:() const
begin_objects	MachOUniversal.h	/^  object_iterator begin_objects() const {$/;"	kind:f	class:llvm::object::MachOUniversalBinary	typeref:typename:object_iterator	access:public	signature:() const
bindTable	MachO.h	/^  iterator_range<bind_iterator> bindTable() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:iterator_range<bind_iterator>	access:public	signature:() const
bindTable	MachO.h	/^  static iterator_range<bind_iterator> bindTable(ArrayRef<uint8_t> Opcodes,$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:iterator_range<bind_iterator>	access:public	signature:(ArrayRef<uint8_t> Opcodes,bool is64,MachOBindEntry::Kind)
bind_iterator	MachO.h	/^typedef content_iterator<MachOBindEntry> bind_iterator;$/;"	kind:t	namespace:llvm::object	typeref:typename:content_iterator<MachOBindEntry>
bitcode_section_not_found	Error.h	/^  bitcode_section_not_found,$/;"	kind:e	enum:llvm::object::object_error	access:public
buckets	ELFTypes.h	/^  ArrayRef<Elf_Word> buckets() const {$/;"	kind:f	struct:llvm::object::Elf_GnuHash_Impl	typeref:typename:ArrayRef<Elf_Word>	access:public	signature:() const
buckets	ELFTypes.h	/^  ArrayRef<Elf_Word> buckets() const {$/;"	kind:f	struct:llvm::object::Elf_Hash_Impl	typeref:typename:ArrayRef<Elf_Word>	access:public	signature:() const
ch_addralign	ELFTypes.h	/^  Elf_Word ch_addralign;$/;"	kind:m	struct:llvm::object::Elf_Chdr_Impl	typeref:typename:Elf_Word	access:public
ch_addralign	ELFTypes.h	/^  Elf_Xword ch_addralign;$/;"	kind:m	struct:llvm::object::Elf_Chdr_Impl	typeref:typename:Elf_Xword	access:public
ch_reserved	ELFTypes.h	/^  Elf_Word ch_reserved;$/;"	kind:m	struct:llvm::object::Elf_Chdr_Impl	typeref:typename:Elf_Word	access:public
ch_size	ELFTypes.h	/^  Elf_Word ch_size;$/;"	kind:m	struct:llvm::object::Elf_Chdr_Impl	typeref:typename:Elf_Word	access:public
ch_size	ELFTypes.h	/^  Elf_Xword ch_size;$/;"	kind:m	struct:llvm::object::Elf_Chdr_Impl	typeref:typename:Elf_Xword	access:public
chains	ELFTypes.h	/^  ArrayRef<Elf_Word> chains() const {$/;"	kind:f	struct:llvm::object::Elf_Hash_Impl	typeref:typename:ArrayRef<Elf_Word>	access:public	signature:() const
checkMagic	ELFTypes.h	/^  bool checkMagic() const {$/;"	kind:f	struct:llvm::object::Elf_Ehdr_Impl	typeref:typename:bool	access:public	signature:() const
checkSymbolTable	MachO.h	/^  Error checkSymbolTable() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:Error	access:public	signature:() const
child_begin	Archive.h	/^  child_iterator child_begin(Error &Err, bool SkipInternal = true) const;$/;"	kind:p	class:llvm::object::Archive	typeref:typename:child_iterator	access:public	signature:(Error & Err,bool SkipInternal=true) const
child_end	Archive.h	/^  child_iterator child_end() const;$/;"	kind:p	class:llvm::object::Archive	typeref:typename:child_iterator	access:public	signature:() const
child_iterator	Archive.h	/^    child_iterator() : C(Child(nullptr, nullptr, nullptr)), E(nullptr) {}$/;"	kind:f	class:llvm::object::Archive::child_iterator	access:public	signature:()
child_iterator	Archive.h	/^    child_iterator(const Child &C, Error *E) : C(C), E(E) {}$/;"	kind:f	class:llvm::object::Archive::child_iterator	access:public	signature:(const Child & C,Error * E)
child_iterator	Archive.h	/^  class child_iterator {$/;"	kind:c	class:llvm::object::Archive	access:public
children	Archive.h	/^  iterator_range<child_iterator> children(Error &Err,$/;"	kind:f	class:llvm::object::Archive	typeref:typename:iterator_range<child_iterator>	access:public	signature:(Error & Err,bool SkipInternal=true) const
classof	Archive.h	/^  static inline bool classof(Binary const *v) {$/;"	kind:f	class:llvm::object::Archive	typeref:typename:bool	access:public	signature:(Binary const * v)
classof	COFF.h	/^  static inline bool classof(const Binary *v) { return v->isCOFF(); }$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:bool	access:public	signature:(const Binary * v)
classof	COFFImportFile.h	/^  static inline bool classof(Binary const *V) { return V->isCOFFImportFile(); }$/;"	kind:f	class:llvm::object::COFFImportFile	typeref:typename:bool	access:public	signature:(Binary const * V)
classof	ELFObjectFile.h	/^  static inline bool classof(const Binary *v) { return v->isELF(); }$/;"	kind:f	class:llvm::object::ELFObjectFileBase	typeref:typename:bool	access:public	signature:(const Binary * v)
classof	ELFObjectFile.h	/^  static inline bool classof(const Binary *v) {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:bool	access:public	signature:(const Binary * v)
classof	IRObjectFile.h	/^  static inline bool classof(const Binary *v) {$/;"	kind:f	class:llvm::object::IRObjectFile	typeref:typename:bool	access:public	signature:(const Binary * v)
classof	MachO.h	/^  static bool classof(const Binary *v) {$/;"	kind:f	class:llvm::object::MachOObjectFile	typeref:typename:bool	access:public	signature:(const Binary * v)
classof	MachOUniversal.h	/^  static inline bool classof(Binary const *V) {$/;"	kind:f	class:llvm::object::MachOUniversalBinary	typeref:typename:bool	access:public	signature:(Binary const * V)
classof	ModuleSummaryIndexObjectFile.h	/^  static inline bool classof(const Binary *v) {$/;"	kind:f	class:llvm::object::ModuleSummaryIndexObjectFile	typeref:typename:bool	access:public	signature:(const Binary * v)
classof	ObjectFile.h	/^  static inline bool classof(const Binary *v) {$/;"	kind:f	class:llvm::object::ObjectFile	typeref:typename:bool	access:public	signature:(const Binary * v)
classof	SymbolicFile.h	/^  static inline bool classof(const Binary *v) {$/;"	kind:f	class:llvm::object::SymbolicFile	typeref:typename:bool	access:public	signature:(const Binary * v)
clear	MachOUniversal.h	/^    void clear() {$/;"	kind:f	class:llvm::object::MachOUniversalBinary::ObjectForArch	typeref:typename:void	access:public	signature:()
coff_aux_bf_and_ef_symbol	COFF.h	/^struct coff_aux_bf_and_ef_symbol {$/;"	kind:s	namespace:llvm::object
coff_aux_clr_token	COFF.h	/^struct coff_aux_clr_token {$/;"	kind:s	namespace:llvm::object
coff_aux_function_definition	COFF.h	/^struct coff_aux_function_definition {$/;"	kind:s	namespace:llvm::object
coff_aux_section_definition	COFF.h	/^struct coff_aux_section_definition {$/;"	kind:s	namespace:llvm::object
coff_aux_weak_external	COFF.h	/^struct coff_aux_weak_external {$/;"	kind:s	namespace:llvm::object
coff_base_reloc_block_entry	COFF.h	/^struct coff_base_reloc_block_entry {$/;"	kind:s	namespace:llvm::object
coff_base_reloc_block_header	COFF.h	/^struct coff_base_reloc_block_header {$/;"	kind:s	namespace:llvm::object
coff_bigobj_file_header	COFF.h	/^struct coff_bigobj_file_header {$/;"	kind:s	namespace:llvm::object
coff_file_header	COFF.h	/^struct coff_file_header {$/;"	kind:s	namespace:llvm::object
coff_import_directory_table_entry	COFF.h	/^struct coff_import_directory_table_entry {$/;"	kind:s	namespace:llvm::object
coff_import_header	COFF.h	/^struct coff_import_header {$/;"	kind:s	namespace:llvm::object
coff_load_configuration32	COFF.h	/^struct coff_load_configuration32 {$/;"	kind:s	namespace:llvm::object
coff_load_configuration64	COFF.h	/^struct coff_load_configuration64 {$/;"	kind:s	namespace:llvm::object
coff_relocation	COFF.h	/^struct coff_relocation {$/;"	kind:s	namespace:llvm::object
coff_runtime_function_x64	COFF.h	/^struct coff_runtime_function_x64 {$/;"	kind:s	namespace:llvm::object
coff_section	COFF.h	/^struct coff_section {$/;"	kind:s	namespace:llvm::object
coff_symbol	COFF.h	/^struct coff_symbol {$/;"	kind:s	namespace:llvm::object
coff_symbol16	COFF.h	/^typedef coff_symbol<support::ulittle16_t> coff_symbol16;$/;"	kind:t	namespace:llvm::object	typeref:typename:coff_symbol<support::ulittle16_t>
coff_symbol32	COFF.h	/^typedef coff_symbol<support::ulittle32_t> coff_symbol32;$/;"	kind:t	namespace:llvm::object	typeref:typename:coff_symbol<support::ulittle32_t>
coff_symbol_generic	COFF.h	/^struct coff_symbol_generic {$/;"	kind:s	namespace:llvm::object
coff_tls_directory	COFF.h	/^struct coff_tls_directory {$/;"	kind:s	namespace:llvm::object
coff_tls_directory32	COFF.h	/^typedef coff_tls_directory<support::little32_t> coff_tls_directory32;$/;"	kind:t	namespace:llvm::object	typeref:typename:coff_tls_directory<support::little32_t>
coff_tls_directory64	COFF.h	/^typedef coff_tls_directory<support::little64_t> coff_tls_directory64;$/;"	kind:t	namespace:llvm::object	typeref:typename:coff_tls_directory<support::little64_t>
compareAddr	ELF.h	/^static bool compareAddr(uint64_t VAddr, const Elf_Phdr_Impl<ELFT> *Phdr) {$/;"	kind:f	namespace:llvm::object	typeref:typename:bool	signature:(uint64_t VAddr,const Elf_Phdr_Impl<ELFT> * Phdr)
compareAddress	SymbolSize.h	/^int compareAddress(const SymEntry *A, const SymEntry *B);$/;"	kind:p	namespace:llvm::object	typeref:typename:int	signature:(const SymEntry * A,const SymEntry * B)
computeSymbolSizes	SymbolSize.h	/^computeSymbolSizes(const ObjectFile &O);$/;"	kind:p	namespace:llvm::object	typeref:typename:std::vector<std::pair<SymbolRef,uint64_t>>	signature:(const ObjectFile & O)
constant_iterator	StackMapParser.h	/^  typedef AccessorIterator<ConstantAccessor> constant_iterator;$/;"	kind:t	class:llvm::StackMapV2Parser	typeref:typename:AccessorIterator<ConstantAccessor>	access:public
constants	StackMapParser.h	/^  iterator_range<constant_iterator> constants() const {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:iterator_range<constant_iterator>	access:public	signature:() const
constants_begin	StackMapParser.h	/^  constant_iterator constants_begin() const {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:constant_iterator	access:public	signature:() const
constants_end	StackMapParser.h	/^  constant_iterator constants_end() const {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:constant_iterator	access:public	signature:() const
containsSymbol	ObjectFile.h	/^  bool containsSymbol(SymbolRef S) const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:bool	access:public	signature:(SymbolRef S) const
content_iterator	SymbolicFile.h	/^  content_iterator(content_type symb) : Current(std::move(symb)) {}$/;"	kind:f	class:llvm::object::content_iterator	access:public	signature:(content_type symb)
content_iterator	SymbolicFile.h	/^class content_iterator$/;"	kind:c	namespace:llvm::object	inherits:std::iterator<std::forward_iterator_tag,content_type>
cpr1_size	ELFTypes.h	/^  uint8_t cpr1_size; \/\/ Co-processor 1 registers size$/;"	kind:m	struct:llvm::object::Elf_Mips_ABIFlags	typeref:typename:uint8_t	access:public
cpr2_size	ELFTypes.h	/^  uint8_t cpr2_size; \/\/ Co-processor 2 registers size$/;"	kind:m	struct:llvm::object::Elf_Mips_ABIFlags	typeref:typename:uint8_t	access:public
create	Archive.h	/^  static Expected<std::unique_ptr<Archive>> create(MemoryBufferRef Source);$/;"	kind:p	class:llvm::object::Archive	typeref:typename:Expected<std::unique_ptr<Archive>>	access:public	signature:(MemoryBufferRef Source)
create	IRObjectFile.h	/^  static Expected<std::unique_ptr<IRObjectFile>> create(MemoryBufferRef Object,$/;"	kind:p	class:llvm::object::IRObjectFile	typeref:typename:Expected<std::unique_ptr<IRObjectFile>>	access:public	signature:(MemoryBufferRef Object,LLVMContext & Context)
create	MachO.h	/^  create(MemoryBufferRef Object, bool IsLittleEndian, bool Is64Bits,$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:Expected<std::unique_ptr<MachOObjectFile>>	access:public	signature:(MemoryBufferRef Object,bool IsLittleEndian,bool Is64Bits,uint32_t UniversalCputype=0,uint32_t UniversalIndex=0)
create	MachOUniversal.h	/^  create(MemoryBufferRef Source);$/;"	kind:p	class:llvm::object::MachOUniversalBinary	typeref:typename:Expected<std::unique_ptr<MachOUniversalBinary>>	access:public	signature:(MemoryBufferRef Source)
create	ModuleSummaryIndexObjectFile.h	/^  create(MemoryBufferRef Object);$/;"	kind:p	class:llvm::object::ModuleSummaryIndexObjectFile	typeref:typename:Expected<std::unique_ptr<ModuleSummaryIndexObjectFile>>	access:public	signature:(MemoryBufferRef Object)
createBinary	Binary.h	/^Expected<OwningBinary<Binary>> createBinary(StringRef Path);$/;"	kind:p	namespace:llvm::object	typeref:typename:Expected<OwningBinary<Binary>>	signature:(StringRef Path)
createBinary	Binary.h	/^Expected<std::unique_ptr<Binary>> createBinary(MemoryBufferRef Source,$/;"	kind:p	namespace:llvm::object	typeref:typename:Expected<std::unique_ptr<Binary>>	signature:(MemoryBufferRef Source,LLVMContext * Context=nullptr)
createCOFFObjectFile	ObjectFile.h	/^  createCOFFObjectFile(MemoryBufferRef Object);$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:ErrorOr<std::unique_ptr<COFFObjectFile>>	access:public	signature:(MemoryBufferRef Object)
createELFObjectFile	ObjectFile.h	/^  createELFObjectFile(MemoryBufferRef Object);$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:ErrorOr<std::unique_ptr<ObjectFile>>	access:public	signature:(MemoryBufferRef Object)
createError	ELF.h	/^static inline Error createError(StringRef Err) {$/;"	kind:f	namespace:llvm::object	typeref:typename:Error	signature:(StringRef Err)
createMachOObjectFile	ObjectFile.h	/^  createMachOObjectFile(MemoryBufferRef Object,$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:Expected<std::unique_ptr<MachOObjectFile>>	access:public	signature:(MemoryBufferRef Object,uint32_t UniversalCputype=0,uint32_t UniversalIndex=0)
createObjectFile	ObjectFile.h	/^  createObjectFile(MemoryBufferRef Object) {$/;"	kind:f	class:llvm::object::ObjectFile	typeref:typename:Expected<std::unique_ptr<ObjectFile>>	access:public	signature:(MemoryBufferRef Object)
createObjectFile	ObjectFile.h	/^  createObjectFile(MemoryBufferRef Object, sys::fs::file_magic Type);$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:Expected<std::unique_ptr<ObjectFile>>	access:public	signature:(MemoryBufferRef Object,sys::fs::file_magic Type)
createObjectFile	ObjectFile.h	/^  createObjectFile(StringRef ObjectPath);$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:Expected<OwningBinary<ObjectFile>>	access:public	signature:(StringRef ObjectPath)
createSymbolicFile	SymbolicFile.h	/^  createSymbolicFile(MemoryBufferRef Object) {$/;"	kind:f	class:llvm::object::SymbolicFile	typeref:typename:Expected<std::unique_ptr<SymbolicFile>>	access:public	signature:(MemoryBufferRef Object)
createSymbolicFile	SymbolicFile.h	/^  createSymbolicFile(MemoryBufferRef Object, sys::fs::file_magic Type,$/;"	kind:p	class:llvm::object::SymbolicFile	typeref:typename:Expected<std::unique_ptr<SymbolicFile>>	access:public	signature:(MemoryBufferRef Object,sys::fs::file_magic Type,LLVMContext * Context)
createSymbolicFile	SymbolicFile.h	/^  createSymbolicFile(StringRef ObjectPath);$/;"	kind:p	class:llvm::object::SymbolicFile	typeref:typename:Expected<OwningBinary<SymbolicFile>>	access:public	signature:(StringRef ObjectPath)
d	SymbolicFile.h	/^  } d;$/;"	kind:m	union:llvm::object::DataRefImpl	typeref:struct:llvm::object::DataRefImpl::__anone70cca9d0108	access:public
d_ptr	ELFTypes.h	/^    Elf_Addr d_ptr;$/;"	kind:m	union:llvm::object::Elf_Dyn_Base::__anondff8eca7010a	typeref:typename:Elf_Addr	access:public
d_ptr	ELFTypes.h	/^    Elf_Addr d_ptr;$/;"	kind:m	union:llvm::object::Elf_Dyn_Base::__anondff8eca7020a	typeref:typename:Elf_Addr	access:public
d_un	ELFTypes.h	/^  } d_un;$/;"	kind:m	struct:llvm::object::Elf_Dyn_Base	typeref:union:llvm::object::Elf_Dyn_Base::__anondff8eca7010a	access:public
d_un	ELFTypes.h	/^  } d_un;$/;"	kind:m	struct:llvm::object::Elf_Dyn_Base	typeref:union:llvm::object::Elf_Dyn_Base::__anondff8eca7020a	access:public
d_val	ELFTypes.h	/^    Elf_Word d_val;$/;"	kind:m	union:llvm::object::Elf_Dyn_Base::__anondff8eca7010a	typeref:typename:Elf_Word	access:public
d_val	ELFTypes.h	/^    Elf_Xword d_val;$/;"	kind:m	union:llvm::object::Elf_Dyn_Base::__anondff8eca7020a	typeref:typename:Elf_Xword	access:public
data_directory	COFF.h	/^struct data_directory {$/;"	kind:s	namespace:llvm::object
debug_directories	COFF.h	/^  iterator_range<const debug_directory *> debug_directories() const {$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:iterator_range<const debug_directory * >	access:public	signature:() const
debug_directory	COFF.h	/^struct debug_directory {$/;"	kind:s	namespace:llvm::object
debug_directory_begin	COFF.h	/^  const debug_directory *debug_directory_begin() const {$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:const debug_directory *	access:public	signature:() const
debug_directory_end	COFF.h	/^  const debug_directory *debug_directory_end() const {$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:const debug_directory *	access:public	signature:() const
delay_import_directories	COFF.h	/^      delay_import_directories() const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:iterator_range<delay_import_directory_iterator>	access:public	signature:() const
delay_import_directory_begin	COFF.h	/^  delay_import_directory_iterator delay_import_directory_begin() const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:delay_import_directory_iterator	access:public	signature:() const
delay_import_directory_end	COFF.h	/^  delay_import_directory_iterator delay_import_directory_end() const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:delay_import_directory_iterator	access:public	signature:() const
delay_import_directory_iterator	COFF.h	/^    delay_import_directory_iterator;$/;"	kind:t	namespace:llvm::object	typeref:typename:content_iterator<DelayImportDirectoryEntryRef>
delay_import_directory_table_entry	COFF.h	/^struct delay_import_directory_table_entry {$/;"	kind:s	namespace:llvm::object
dice_iterator	MachO.h	/^typedef content_iterator<DiceRef> dice_iterator;$/;"	kind:t	namespace:llvm::object	typeref:typename:content_iterator<DiceRef>
dos_header	COFF.h	/^struct dos_header {$/;"	kind:s	namespace:llvm::object
dynamic_symbol_begin	ELFObjectFile.h	/^  elf_symbol_iterator dynamic_symbol_begin() const;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:elf_symbol_iterator	access:public	signature:() const
dynamic_symbol_begin	ELFObjectFile.h	/^elf_symbol_iterator ELFObjectFile<ELFT>::dynamic_symbol_begin() const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:elf_symbol_iterator	signature:() const
dynamic_symbol_end	ELFObjectFile.h	/^  elf_symbol_iterator dynamic_symbol_end() const;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:elf_symbol_iterator	access:public	signature:() const
dynamic_symbol_end	ELFObjectFile.h	/^elf_symbol_iterator ELFObjectFile<ELFT>::dynamic_symbol_end() const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:elf_symbol_iterator	signature:() const
e_ehsize	ELFTypes.h	/^  Elf_Half e_ehsize;    \/\/ Size of ELF header, in bytes$/;"	kind:m	struct:llvm::object::Elf_Ehdr_Impl	typeref:typename:Elf_Half	access:public
e_entry	ELFTypes.h	/^  Elf_Addr e_entry;     \/\/ Address to jump to in order to start program$/;"	kind:m	struct:llvm::object::Elf_Ehdr_Impl	typeref:typename:Elf_Addr	access:public
e_flags	ELFTypes.h	/^  Elf_Word e_flags;     \/\/ Processor-specific flags$/;"	kind:m	struct:llvm::object::Elf_Ehdr_Impl	typeref:typename:Elf_Word	access:public
e_machine	ELFTypes.h	/^  Elf_Half e_machine;   \/\/ Required architecture for this file (see EM_*)$/;"	kind:m	struct:llvm::object::Elf_Ehdr_Impl	typeref:typename:Elf_Half	access:public
e_phentsize	ELFTypes.h	/^  Elf_Half e_phentsize; \/\/ Size of an entry in the program header table$/;"	kind:m	struct:llvm::object::Elf_Ehdr_Impl	typeref:typename:Elf_Half	access:public
e_phnum	ELFTypes.h	/^  Elf_Half e_phnum;     \/\/ Number of entries in the program header table$/;"	kind:m	struct:llvm::object::Elf_Ehdr_Impl	typeref:typename:Elf_Half	access:public
e_phoff	ELFTypes.h	/^  Elf_Off e_phoff;      \/\/ Program header table's file offset, in bytes$/;"	kind:m	struct:llvm::object::Elf_Ehdr_Impl	typeref:typename:Elf_Off	access:public
e_shentsize	ELFTypes.h	/^  Elf_Half e_shentsize; \/\/ Size of an entry in the section header table$/;"	kind:m	struct:llvm::object::Elf_Ehdr_Impl	typeref:typename:Elf_Half	access:public
e_shnum	ELFTypes.h	/^  Elf_Half e_shnum;     \/\/ Number of entries in the section header table$/;"	kind:m	struct:llvm::object::Elf_Ehdr_Impl	typeref:typename:Elf_Half	access:public
e_shoff	ELFTypes.h	/^  Elf_Off e_shoff;      \/\/ Section header table's file offset, in bytes$/;"	kind:m	struct:llvm::object::Elf_Ehdr_Impl	typeref:typename:Elf_Off	access:public
e_shstrndx	ELFTypes.h	/^  Elf_Half e_shstrndx;  \/\/ Section header table index of section name$/;"	kind:m	struct:llvm::object::Elf_Ehdr_Impl	typeref:typename:Elf_Half	access:public
e_type	ELFTypes.h	/^  Elf_Half e_type;                       \/\/ Type of file (see ET_*)$/;"	kind:m	struct:llvm::object::Elf_Ehdr_Impl	typeref:typename:Elf_Half	access:public
e_version	ELFTypes.h	/^  Elf_Word e_version;   \/\/ Must be equal to 1$/;"	kind:m	struct:llvm::object::Elf_Ehdr_Impl	typeref:typename:Elf_Word	access:public
elf_relocation_iterator	ELFObjectFile.h	/^  elf_relocation_iterator(const relocation_iterator &B)$/;"	kind:f	class:llvm::object::elf_relocation_iterator	access:public	signature:(const relocation_iterator & B)
elf_relocation_iterator	ELFObjectFile.h	/^class elf_relocation_iterator : public relocation_iterator {$/;"	kind:c	namespace:llvm::object	inherits:relocation_iterator
elf_section_iterator	ELFObjectFile.h	/^  elf_section_iterator(const section_iterator &B) : section_iterator(B) {$/;"	kind:f	class:llvm::object::elf_section_iterator	access:public	signature:(const section_iterator & B)
elf_section_iterator	ELFObjectFile.h	/^class elf_section_iterator : public section_iterator {$/;"	kind:c	namespace:llvm::object	inherits:section_iterator
elf_symbol_iterator	ELFObjectFile.h	/^  elf_symbol_iterator(const basic_symbol_iterator &B)$/;"	kind:f	class:llvm::object::elf_symbol_iterator	access:public	signature:(const basic_symbol_iterator & B)
elf_symbol_iterator	ELFObjectFile.h	/^class elf_symbol_iterator : public symbol_iterator {$/;"	kind:c	namespace:llvm::object	inherits:symbol_iterator
elf_symbol_iterator_range	ELFObjectFile.h	/^  typedef iterator_range<elf_symbol_iterator> elf_symbol_iterator_range;$/;"	kind:t	class:llvm::object::ELFObjectFileBase	typeref:typename:iterator_range<elf_symbol_iterator>	access:public
end_dices	MachO.h	/^  dice_iterator end_dices() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:dice_iterator	access:public	signature:() const
end_load_commands	MachO.h	/^  load_command_iterator end_load_commands() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:load_command_iterator	access:public	signature:() const
end_objects	MachOUniversal.h	/^  object_iterator end_objects() const {$/;"	kind:f	class:llvm::object::MachOUniversalBinary	typeref:typename:object_iterator	access:public	signature:() const
error	RelocVisitor.h	/^  bool error() { return HasError; }$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:bool	access:public	signature:()
export_address_table_entry	COFF.h	/^union export_address_table_entry {$/;"	kind:u	namespace:llvm::object
export_directories	COFF.h	/^  iterator_range<export_directory_iterator> export_directories() const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:iterator_range<export_directory_iterator>	access:public	signature:() const
export_directory_begin	COFF.h	/^  export_directory_iterator export_directory_begin() const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:export_directory_iterator	access:public	signature:() const
export_directory_end	COFF.h	/^  export_directory_iterator export_directory_end() const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:export_directory_iterator	access:public	signature:() const
export_directory_iterator	COFF.h	/^typedef content_iterator<ExportDirectoryEntryRef> export_directory_iterator;$/;"	kind:t	namespace:llvm::object	typeref:typename:content_iterator<ExportDirectoryEntryRef>
export_directory_table_entry	COFF.h	/^struct export_directory_table_entry {$/;"	kind:s	namespace:llvm::object
export_iterator	MachO.h	/^typedef content_iterator<ExportEntry> export_iterator;$/;"	kind:t	namespace:llvm::object	typeref:typename:content_iterator<ExportEntry>
export_name_pointer_table_entry	COFF.h	/^typedef support::ulittle32_t export_name_pointer_table_entry;$/;"	kind:t	namespace:llvm::object	typeref:typename:support::ulittle32_t
export_ordinal_table_entry	COFF.h	/^typedef support::ulittle16_t export_ordinal_table_entry;$/;"	kind:t	namespace:llvm::object	typeref:typename:support::ulittle16_t
exports	MachO.h	/^  iterator_range<export_iterator> exports() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:iterator_range<export_iterator>	access:public	signature:() const
exports	MachO.h	/^  static iterator_range<export_iterator> exports(ArrayRef<uint8_t> Trie);$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:iterator_range<export_iterator>	access:public	signature:(ArrayRef<uint8_t> Trie)
filter	ELFTypes.h	/^  ArrayRef<Elf_Off> filter() const {$/;"	kind:f	struct:llvm::object::Elf_GnuHash_Impl	typeref:typename:ArrayRef<Elf_Off>	access:public	signature:() const
findBitcodeInMemBuffer	IRObjectFile.h	/^  findBitcodeInMemBuffer(MemoryBufferRef Object);$/;"	kind:p	class:llvm::object::IRObjectFile	typeref:typename:ErrorOr<MemoryBufferRef>	access:public	signature:(MemoryBufferRef Object)
findBitcodeInMemBuffer	ModuleSummaryIndexObjectFile.h	/^  findBitcodeInMemBuffer(MemoryBufferRef Object);$/;"	kind:p	class:llvm::object::ModuleSummaryIndexObjectFile	typeref:typename:ErrorOr<MemoryBufferRef>	access:public	signature:(MemoryBufferRef Object)
findBitcodeInObject	IRObjectFile.h	/^  static ErrorOr<MemoryBufferRef> findBitcodeInObject(const ObjectFile &Obj);$/;"	kind:p	class:llvm::object::IRObjectFile	typeref:typename:ErrorOr<MemoryBufferRef>	access:public	signature:(const ObjectFile & Obj)
findBitcodeInObject	ModuleSummaryIndexObjectFile.h	/^  static ErrorOr<MemoryBufferRef> findBitcodeInObject(const ObjectFile &Obj);$/;"	kind:p	class:llvm::object::ModuleSummaryIndexObjectFile	typeref:typename:ErrorOr<MemoryBufferRef>	access:public	signature:(const ObjectFile & Obj)
findSym	Archive.h	/^  Expected<Optional<Child>> findSym(StringRef name) const;$/;"	kind:p	class:llvm::object::Archive	typeref:typename:Expected<Optional<Child>>	access:public	signature:(StringRef name) const
flags	MachO.h	/^  uint32_t flags() const;$/;"	kind:p	class:llvm::object::MachOBindEntry	typeref:typename:uint32_t	access:public	signature:() const
flags	MachO.h	/^  uint64_t flags() const;$/;"	kind:p	class:llvm::object::ExportEntry	typeref:typename:uint64_t	access:public	signature:() const
flags1	ELFTypes.h	/^  Elf_Word flags1;   \/\/ General flags$/;"	kind:m	struct:llvm::object::Elf_Mips_ABIFlags	typeref:typename:Elf_Word	access:public
flags2	ELFTypes.h	/^  Elf_Word flags2;   \/\/ General flags$/;"	kind:m	struct:llvm::object::Elf_Mips_ABIFlags	typeref:typename:Elf_Word	access:public
fp_abi	ELFTypes.h	/^  uint8_t fp_abi;    \/\/ Floating-point ABI flag$/;"	kind:m	struct:llvm::object::Elf_Mips_ABIFlags	typeref:typename:uint8_t	access:public
function_iterator	StackMapParser.h	/^  typedef AccessorIterator<FunctionAccessor> function_iterator;$/;"	kind:t	class:llvm::StackMapV2Parser	typeref:typename:AccessorIterator<FunctionAccessor>	access:public
functions	StackMapParser.h	/^  iterator_range<function_iterator> functions() const {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:iterator_range<function_iterator>	access:public	signature:() const
functions_begin	StackMapParser.h	/^  function_iterator functions_begin() const {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:function_iterator	access:public	signature:() const
functions_end	StackMapParser.h	/^  function_iterator functions_end() const {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:function_iterator	access:public	signature:() const
getAccessMode	Archive.h	/^    Expected<sys::fs::perms> getAccessMode() const {$/;"	kind:f	class:llvm::object::Archive::Child	typeref:typename:Expected<sys::fs::perms>	access:public	signature:() const
getAccessMode	Archive.h	/^  Expected<sys::fs::perms> getAccessMode() const;$/;"	kind:p	class:llvm::object::ArchiveMemberHeader	typeref:typename:Expected<sys::fs::perms>	access:public	signature:() const
getAddend	ELFObjectFile.h	/^  ErrorOr<int64_t> getAddend() const {$/;"	kind:f	class:llvm::object::ELFRelocationRef	typeref:typename:ErrorOr<int64_t>	access:public	signature:() const
getAddress	ObjectFile.h	/^  Expected<uint64_t> getAddress() const;$/;"	kind:p	class:llvm::object::SymbolRef	typeref:typename:Expected<uint64_t>	access:public	signature:() const
getAddress	ObjectFile.h	/^  uint64_t getAddress() const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:uint64_t	access:public	signature:() const
getAddress	ObjectFile.h	/^inline Expected<uint64_t> SymbolRef::getAddress() const {$/;"	kind:f	class:llvm::object::SymbolRef	typeref:typename:Expected<uint64_t>	signature:() const
getAddress	ObjectFile.h	/^inline uint64_t SectionRef::getAddress() const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:uint64_t	signature:() const
getAlign	MachOUniversal.h	/^    uint32_t getAlign() const {$/;"	kind:f	class:llvm::object::MachOUniversalBinary::ObjectForArch	typeref:typename:uint32_t	access:public	signature:() const
getAlignment	COFF.h	/^  uint32_t getAlignment() const {$/;"	kind:f	struct:llvm::object::coff_section	typeref:typename:uint32_t	access:public	signature:() const
getAlignment	COFF.h	/^  uint32_t getAlignment() const {$/;"	kind:f	struct:llvm::object::coff_tls_directory	typeref:typename:uint32_t	access:public	signature:() const
getAlignment	ObjectFile.h	/^  uint32_t getAlignment() const;$/;"	kind:p	class:llvm::object::SymbolRef	typeref:typename:uint32_t	access:public	signature:() const
getAlignment	ObjectFile.h	/^  uint64_t getAlignment() const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:uint64_t	access:public	signature:() const
getAlignment	ObjectFile.h	/^inline uint32_t SymbolRef::getAlignment() const {$/;"	kind:f	class:llvm::object::SymbolRef	typeref:typename:uint32_t	signature:() const
getAlignment	ObjectFile.h	/^inline uint64_t SectionRef::getAlignment() const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:uint64_t	signature:() const
getAnyRelocationAddress	MachO.h	/^  unsigned getAnyRelocationAddress(const MachO::any_relocation_info &RE) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:unsigned	access:public	signature:(const MachO::any_relocation_info & RE) const
getAnyRelocationLength	MachO.h	/^  unsigned getAnyRelocationLength(const MachO::any_relocation_info &RE) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:unsigned	access:public	signature:(const MachO::any_relocation_info & RE) const
getAnyRelocationPCRel	MachO.h	/^  unsigned getAnyRelocationPCRel(const MachO::any_relocation_info &RE) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:unsigned	access:public	signature:(const MachO::any_relocation_info & RE) const
getAnyRelocationSection	MachO.h	/^  SectionRef getAnyRelocationSection(const MachO::any_relocation_info &RE) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:SectionRef	access:public	signature:(const MachO::any_relocation_info & RE) const
getAnyRelocationType	MachO.h	/^  unsigned getAnyRelocationType(const MachO::any_relocation_info &RE) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:unsigned	access:public	signature:(const MachO::any_relocation_info & RE) const
getArch	COFF.h	/^  unsigned getArch() const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:unsigned	access:public	signature:() const
getArch	ELFObjectFile.h	/^  unsigned getArch() const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:unsigned	access:public	signature:() const
getArch	ELFObjectFile.h	/^unsigned ELFObjectFile<ELFT>::getArch() const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:unsigned	signature:() const
getArch	MachO.h	/^  static Triple::ArchType getArch(uint32_t CPUType);$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:Triple::ArchType	access:public	signature:(uint32_t CPUType)
getArch	MachO.h	/^  unsigned getArch() const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:unsigned	access:public	signature:() const
getArch	ObjectFile.h	/^  virtual \/* Triple::ArchType *\/ unsigned getArch() const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:unsigned	access:public	signature:() const
getArchTriple	MachO.h	/^  Triple getArchTriple(const char **McpuDefault = nullptr) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:Triple	access:public	signature:(const char ** McpuDefault=nullptr) const
getArchTriple	MachO.h	/^  static Triple getArchTriple(uint32_t CPUType, uint32_t CPUSubType,$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:Triple	access:public	signature:(uint32_t CPUType,uint32_t CPUSubType,const char ** McpuDefault=nullptr)
getArchTypeName	MachOUniversal.h	/^    std::string getArchTypeName() const {$/;"	kind:f	class:llvm::object::MachOUniversalBinary::ObjectForArch	typeref:typename:std::string	access:public	signature:() const
getAsArchive	MachOUniversal.h	/^    Expected<std::unique_ptr<Archive>> getAsArchive() const;$/;"	kind:p	class:llvm::object::MachOUniversalBinary::ObjectForArch	typeref:typename:Expected<std::unique_ptr<Archive>>	access:public	signature:() const
getAsBinary	Archive.h	/^    getAsBinary(LLVMContext *Context = nullptr) const;$/;"	kind:p	class:llvm::object::Archive::Child	typeref:typename:Expected<std::unique_ptr<Binary>>	access:public	signature:(LLVMContext * Context=nullptr) const
getAsObjectFile	MachOUniversal.h	/^    Expected<std::unique_ptr<MachOObjectFile>> getAsObjectFile() const;$/;"	kind:p	class:llvm::object::MachOUniversalBinary::ObjectForArch	typeref:typename:Expected<std::unique_ptr<MachOObjectFile>>	access:public	signature:() const
getAux	ELFTypes.h	/^  const Elf_Verdaux *getAux() const {$/;"	kind:f	struct:llvm::object::Elf_Verdef_Impl	typeref:typename:const Elf_Verdaux *	access:public	signature:() const
getAuxSymbol	COFF.h	/^  std::error_code getAuxSymbol(uint32_t index, const T *&Res) const {$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:public	signature:(uint32_t index,const T * & Res) const
getBaseType	COFF.h	/^  uint8_t getBaseType() const { return getType() & 0x0F; }$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:uint8_t	access:public	signature:() const
getBinary	Binary.h	/^  T* getBinary();$/;"	kind:p	class:llvm::object::OwningBinary	typeref:typename:T *	access:public	signature:()
getBinary	Binary.h	/^  const T* getBinary() const;$/;"	kind:p	class:llvm::object::OwningBinary	typeref:typename:const T *	access:public	signature:() const
getBinary	Binary.h	/^template <typename T> T* OwningBinary<T>::getBinary() {$/;"	kind:f	class:llvm::object::OwningBinary	typeref:typename:T *	signature:()
getBinary	Binary.h	/^template <typename T> const T* OwningBinary<T>::getBinary() const {$/;"	kind:f	class:llvm::object::OwningBinary	typeref:typename:const T *	signature:() const
getBinding	ELFTypes.h	/^  unsigned char getBinding() const { return st_info >> 4; }$/;"	kind:f	struct:llvm::object::Elf_Sym_Impl	typeref:typename:unsigned char	access:public	signature:() const
getBufSize	ELF.h	/^  size_t getBufSize() const { return Buf.size(); }$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:size_t	access:public	signature:() const
getBuffer	Archive.h	/^    Expected<StringRef> getBuffer() const;$/;"	kind:p	class:llvm::object::Archive::Child	typeref:typename:Expected<StringRef>	access:public	signature:() const
getBytesInAddress	COFF.h	/^  uint8_t getBytesInAddress() const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:uint8_t	access:public	signature:() const
getBytesInAddress	ELFObjectFile.h	/^  uint8_t getBytesInAddress() const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:uint8_t	access:public	signature:() const
getBytesInAddress	ELFObjectFile.h	/^uint8_t ELFObjectFile<ELFT>::getBytesInAddress() const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:uint8_t	signature:() const
getBytesInAddress	MachO.h	/^  uint8_t getBytesInAddress() const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:uint8_t	access:public	signature:() const
getBytesInAddress	ObjectFile.h	/^  virtual uint8_t getBytesInAddress() const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:uint8_t	access:public	signature:() const
getCOFFImportHeader	COFFImportFile.h	/^  const coff_import_header *getCOFFImportHeader() const {$/;"	kind:f	class:llvm::object::COFFImportFile	typeref:typename:const coff_import_header *	access:public	signature:() const
getCOFFRelocation	COFF.h	/^  const coff_relocation *getCOFFRelocation(const RelocationRef &Reloc) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:const coff_relocation *	access:public	signature:(const RelocationRef & Reloc) const
getCOFFSection	COFF.h	/^  const coff_section *getCOFFSection(const SectionRef &Section) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:const coff_section *	access:public	signature:(const SectionRef & Section) const
getCOFFSymbol	COFF.h	/^  COFFSymbolRef getCOFFSymbol(const DataRefImpl &Ref) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:COFFSymbolRef	access:public	signature:(const DataRefImpl & Ref) const
getCOFFSymbol	COFF.h	/^  COFFSymbolRef getCOFFSymbol(const SymbolRef &Symbol) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:COFFSymbolRef	access:public	signature:(const SymbolRef & Symbol) const
getCPUSubType	MachOUniversal.h	/^    uint32_t getCPUSubType() const {$/;"	kind:f	class:llvm::object::MachOUniversalBinary::ObjectForArch	typeref:typename:uint32_t	access:public	signature:() const
getCPUType	MachOUniversal.h	/^    uint32_t getCPUType() const {$/;"	kind:f	class:llvm::object::MachOUniversalBinary::ObjectForArch	typeref:typename:uint32_t	access:public	signature:() const
getCharacteristics	COFF.h	/^  uint16_t getCharacteristics() const {$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:uint16_t	access:public	signature:() const
getChildOffset	Archive.h	/^    uint64_t getChildOffset() const;$/;"	kind:p	class:llvm::object::Archive::Child	typeref:typename:uint64_t	access:public	signature:() const
getCommonSize	ObjectFile.h	/^  uint64_t getCommonSize() const;$/;"	kind:p	class:llvm::object::SymbolRef	typeref:typename:uint64_t	access:public	signature:() const
getCommonSize	ObjectFile.h	/^inline uint64_t SymbolRef::getCommonSize() const {$/;"	kind:f	class:llvm::object::SymbolRef	typeref:typename:uint64_t	signature:() const
getCommonSymbolSize	ObjectFile.h	/^  uint64_t getCommonSymbolSize(DataRefImpl Symb) const {$/;"	kind:f	class:llvm::object::ObjectFile	typeref:typename:uint64_t	access:public	signature:(DataRefImpl Symb) const
getCommonSymbolSizeImpl	COFF.h	/^  uint64_t getCommonSymbolSizeImpl(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Symb) const
getCommonSymbolSizeImpl	ELFObjectFile.h	/^  uint64_t getCommonSymbolSizeImpl(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Symb) const
getCommonSymbolSizeImpl	ELFObjectFile.h	/^uint64_t ELFObjectFile<ELFT>::getCommonSymbolSizeImpl(DataRefImpl Symb) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	signature:(DataRefImpl Symb) const
getCommonSymbolSizeImpl	MachO.h	/^  uint64_t getCommonSymbolSizeImpl(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:uint64_t	access:public	signature:(DataRefImpl Symb) const
getCommonSymbolSizeImpl	ObjectFile.h	/^  virtual uint64_t getCommonSymbolSizeImpl(DataRefImpl Symb) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Symb) const
getComplexType	COFF.h	/^  uint8_t getComplexType() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:uint8_t	access:public	signature:() const
getConstant	StackMapParser.h	/^  ConstantAccessor getConstant(unsigned ConstantIndex) const {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:ConstantAccessor	access:public	signature:(unsigned ConstantIndex) const
getConstantIndex	StackMapParser.h	/^    uint32_t getConstantIndex() const {$/;"	kind:f	class:llvm::StackMapV2Parser::LocationAccessor	typeref:typename:uint32_t	access:public	signature:() const
getConstantOffset	StackMapParser.h	/^  std::size_t getConstantOffset(unsigned ConstantIndex) const {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:std::size_t	access:private	signature:(unsigned ConstantIndex) const
getContents	ObjectFile.h	/^  std::error_code getContents(StringRef &Result) const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:std::error_code	access:public	signature:(StringRef & Result) const
getContents	ObjectFile.h	/^inline std::error_code SectionRef::getContents(StringRef &Result) const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:std::error_code	signature:(StringRef & Result) const
getDOSHeader	COFF.h	/^  const dos_header *getDOSHeader() const {$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:const dos_header *	access:public	signature:() const
getData	Binary.h	/^  StringRef getData() const;$/;"	kind:p	class:llvm::object::Binary	typeref:typename:StringRef	access:public	signature:() const
getDataDirectory	COFF.h	/^  std::error_code getDataDirectory(uint32_t index,$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:public	signature:(uint32_t index,const data_directory * & Res) const
getDataEncoding	ELFTypes.h	/^  unsigned char getDataEncoding() const { return e_ident[ELF::EI_DATA]; }$/;"	kind:f	struct:llvm::object::Elf_Ehdr_Impl	typeref:typename:unsigned char	access:public	signature:() const
getDataInCodeLoadCommand	MachO.h	/^  MachO::linkedit_data_command getDataInCodeLoadCommand() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::linkedit_data_command	access:public	signature:() const
getDataInCodeTableEntry	MachO.h	/^  MachO::data_in_code_entry getDataInCodeTableEntry(uint32_t DataOffset,$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::data_in_code_entry	access:public	signature:(uint32_t DataOffset,unsigned Index) const
getDebugPDBInfo	COFF.h	/^  std::error_code getDebugPDBInfo(const codeview::DebugInfo *&Info,$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:public	signature:(const codeview::DebugInfo * & Info,StringRef & PDBFileName) const
getDebugPDBInfo	COFF.h	/^  std::error_code getDebugPDBInfo(const debug_directory *DebugDir,$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:public	signature:(const debug_directory * DebugDir,const codeview::DebugInfo * & Info,StringRef & PDBFileName) const
getDelayImportTable	COFF.h	/^  std::error_code getDelayImportTable($/;"	kind:p	class:llvm::object::DelayImportDirectoryEntryRef	typeref:typename:std::error_code	access:public	signature:(const delay_import_directory_table_entry * & Result) const
getDice	MachO.h	/^  MachO::data_in_code_entry getDice(DataRefImpl Rel) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::data_in_code_entry	access:public	signature:(DataRefImpl Rel) const
getDllName	COFF.h	/^  std::error_code getDllName(StringRef &Result) const;$/;"	kind:p	class:llvm::object::ExportDirectoryEntryRef	typeref:typename:std::error_code	access:public	signature:(StringRef & Result) const
getDwarfRegNum	StackMapParser.h	/^    uint16_t getDwarfRegNum() const {$/;"	kind:f	class:llvm::StackMapV2Parser::LiveOutAccessor	typeref:typename:uint16_t	access:public	signature:() const
getDwarfRegNum	StackMapParser.h	/^    uint16_t getDwarfRegNum() const {$/;"	kind:f	class:llvm::StackMapV2Parser::LocationAccessor	typeref:typename:uint16_t	access:public	signature:() const
getDyldInfoBindOpcodes	MachO.h	/^  ArrayRef<uint8_t> getDyldInfoBindOpcodes() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:ArrayRef<uint8_t>	access:public	signature:() const
getDyldInfoExportsTrie	MachO.h	/^  ArrayRef<uint8_t> getDyldInfoExportsTrie() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:ArrayRef<uint8_t>	access:public	signature:() const
getDyldInfoLazyBindOpcodes	MachO.h	/^  ArrayRef<uint8_t> getDyldInfoLazyBindOpcodes() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:ArrayRef<uint8_t>	access:public	signature:() const
getDyldInfoLoadCommand	MachO.h	/^  getDyldInfoLoadCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::dyld_info_command	access:public	signature:(const LoadCommandInfo & L) const
getDyldInfoRebaseOpcodes	MachO.h	/^  ArrayRef<uint8_t> getDyldInfoRebaseOpcodes() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:ArrayRef<uint8_t>	access:public	signature:() const
getDyldInfoWeakBindOpcodes	MachO.h	/^  ArrayRef<uint8_t> getDyldInfoWeakBindOpcodes() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:ArrayRef<uint8_t>	access:public	signature:() const
getDylibIDLoadCommand	MachO.h	/^  getDylibIDLoadCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::dylib_command	access:public	signature:(const LoadCommandInfo & L) const
getDylinkerCommand	MachO.h	/^  getDylinkerCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::dylinker_command	access:public	signature:(const LoadCommandInfo & L) const
getDynamicSymbolIterators	ELFObjectFile.h	/^  elf_symbol_iterator_range getDynamicSymbolIterators() const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:elf_symbol_iterator_range	access:public	signature:() const
getDynamicSymbolIterators	ELFObjectFile.h	/^  virtual elf_symbol_iterator_range getDynamicSymbolIterators() const = 0;$/;"	kind:p	class:llvm::object::ELFObjectFileBase	typeref:typename:elf_symbol_iterator_range	access:public	signature:() const
getDynamicSymbolIterators	ELFObjectFile.h	/^ELFObjectFile<ELFT>::getDynamicSymbolIterators() const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:ELFObjectFileBase::elf_symbol_iterator_range	signature:() const
getDysymtabLoadCommand	MachO.h	/^  MachO::dysymtab_command getDysymtabLoadCommand() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::dysymtab_command	access:public	signature:() const
getELFAddend	RelocVisitor.h	/^  int64_t getELFAddend(RelocationRef R) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:int64_t	access:private	signature:(RelocationRef R)
getELFFile	ELFObjectFile.h	/^  const ELFFile<ELFT> *getELFFile() const { return &EF; }$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:const ELFFile<ELFT> *	access:public	signature:() const
getELFRelocationTypeName	ELF.h	/^StringRef getELFRelocationTypeName(uint32_t Machine, uint32_t Type);$/;"	kind:p	namespace:llvm::object	typeref:typename:StringRef	signature:(uint32_t Machine,uint32_t Type)
getELFType	Binary.h	/^  static inline unsigned int getELFType(bool isLE, bool is64Bits) {$/;"	kind:f	class:llvm::object::Binary	typeref:typename:unsigned int	access:protected	signature:(bool isLE,bool is64Bits)
getELFType	ELFObjectFile.h	/^  uint8_t getELFType() const {$/;"	kind:f	class:llvm::object::ELFSymbolRef	typeref:typename:uint8_t	access:public	signature:() const
getEMachine	ELFObjectFile.h	/^  uint16_t getEMachine() const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:uint16_t	access:private	signature:() const
getEMachine	ELFObjectFile.h	/^  virtual uint16_t getEMachine() const = 0;$/;"	kind:p	class:llvm::object::ELFObjectFileBase	typeref:typename:uint16_t	access:protected	signature:() const
getEMachine	ELFObjectFile.h	/^uint16_t ELFObjectFile<ELFT>::getEMachine() const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:uint16_t	signature:() const
getElfArchType	ELF.h	/^getElfArchType(StringRef Object) {$/;"	kind:f	namespace:llvm::object	typeref:typename:std::pair<unsigned char,unsigned char>	signature:(StringRef Object)
getEncryptionInfoCommand	MachO.h	/^  getEncryptionInfoCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::encryption_info_command	access:public	signature:(const LoadCommandInfo & L) const
getEncryptionInfoCommand64	MachO.h	/^  getEncryptionInfoCommand64(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::encryption_info_command_64	access:public	signature:(const LoadCommandInfo & L) const
getEntityCount	ELFTypes.h	/^  unsigned getEntityCount() const {$/;"	kind:f	struct:llvm::object::Elf_Shdr_Impl	typeref:typename:unsigned	access:public	signature:() const
getEntry	ELF.h	/^  Expected<const T *> getEntry(const Elf_Shdr *Section, uint32_t Entry) const;$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<const T * >	access:public	signature:(const Elf_Shdr * Section,uint32_t Entry) const
getEntry	ELF.h	/^  Expected<const T *> getEntry(uint32_t Section, uint32_t Entry) const;$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<const T * >	access:public	signature:(uint32_t Section,uint32_t Entry) const
getEntry	ELF.h	/^Expected<const T *> ELFFile<ELFT>::getEntry(const Elf_Shdr *Section,$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<const T * >	signature:(const Elf_Shdr * Section,uint32_t Entry) const
getEntry	ELF.h	/^Expected<const T *> ELFFile<ELFT>::getEntry(uint32_t Section,$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<const T * >	signature:(uint32_t Section,uint32_t Entry) const
getEntryPointCommand	MachO.h	/^  getEntryPointCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::entry_point_command	access:public	signature:(const LoadCommandInfo & L) const
getExportRVA	COFF.h	/^  std::error_code getExportRVA(uint32_t &Result) const;$/;"	kind:p	class:llvm::object::ExportDirectoryEntryRef	typeref:typename:std::error_code	access:public	signature:(uint32_t & Result) const
getExtendedSymbolTableIndex	ELF.h	/^getExtendedSymbolTableIndex(const typename ELFT::Sym *Sym,$/;"	kind:f	namespace:llvm::object	typeref:typename:Expected<uint32_t>	signature:(const typename ELFT::Sym * Sym,const typename ELFT::Sym * FirstSym,ArrayRef<typename ELFT::Word> ShndxTable)
getFP	COFF.h	/^  int getFP() const { return Attributes >> 14; }$/;"	kind:f	struct:llvm::object::FpoData	typeref:typename:int	access:public	signature:() const
getFeatures	COFF.h	/^  SubtargetFeatures getFeatures() const override { return SubtargetFeatures(); }$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:SubtargetFeatures	access:public	signature:() const
getFeatures	ELFObjectFile.h	/^  SubtargetFeatures getFeatures() const override;$/;"	kind:p	class:llvm::object::ELFObjectFileBase	typeref:typename:SubtargetFeatures	access:public	signature:() const
getFeatures	MachO.h	/^  SubtargetFeatures getFeatures() const override { return SubtargetFeatures(); }$/;"	kind:f	class:llvm::object::MachOObjectFile	typeref:typename:SubtargetFeatures	access:public	signature:() const
getFeatures	ObjectFile.h	/^  virtual SubtargetFeatures getFeatures() const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:SubtargetFeatures	access:public	signature:() const
getFile	ArchiveWriter.h	/^  static Expected<NewArchiveMember> getFile(StringRef FileName,$/;"	kind:p	struct:llvm::NewArchiveMember	typeref:typename:Expected<NewArchiveMember>	access:public	signature:(StringRef FileName,bool Deterministic)
getFileClass	ELFTypes.h	/^  unsigned char getFileClass() const { return e_ident[ELF::EI_CLASS]; }$/;"	kind:f	struct:llvm::object::Elf_Ehdr_Impl	typeref:typename:unsigned char	access:public	signature:() const
getFileFormatName	COFF.h	/^  StringRef getFileFormatName() const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:StringRef	access:public	signature:() const
getFileFormatName	ELFObjectFile.h	/^  StringRef getFileFormatName() const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:StringRef	access:public	signature:() const
getFileFormatName	ELFObjectFile.h	/^StringRef ELFObjectFile<ELFT>::getFileFormatName() const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:StringRef	signature:() const
getFileFormatName	MachO.h	/^  StringRef getFileFormatName() const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:StringRef	access:public	signature:() const
getFileFormatName	ObjectFile.h	/^  virtual StringRef getFileFormatName() const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:StringRef	access:public	signature:() const
getFileName	Binary.h	/^  StringRef getFileName() const;$/;"	kind:p	class:llvm::object::Binary	typeref:typename:StringRef	access:public	signature:() const
getFlags	ELFObjectFile.h	/^  uint64_t getFlags() const {$/;"	kind:f	class:llvm::object::ELFSectionRef	typeref:typename:uint64_t	access:public	signature:() const
getFlags	SymbolicFile.h	/^  uint32_t getFlags() const;$/;"	kind:p	class:llvm::object::BasicSymbolRef	typeref:typename:uint32_t	access:public	signature:() const
getFlags	SymbolicFile.h	/^inline uint32_t BasicSymbolRef::getFlags() const {$/;"	kind:f	class:llvm::object::BasicSymbolRef	typeref:typename:uint32_t	signature:() const
getForwardTo	COFF.h	/^  std::error_code getForwardTo(StringRef &Result) const;$/;"	kind:p	class:llvm::object::ExportDirectoryEntryRef	typeref:typename:std::error_code	access:public	signature:(StringRef & Result) const
getFullName	Archive.h	/^    Expected<std::string> getFullName() const;$/;"	kind:p	class:llvm::object::Archive::Child	typeref:typename:Expected<std::string>	access:public	signature:() const
getFunction	StackMapParser.h	/^  FunctionAccessor getFunction(unsigned FunctionIndex) const {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:FunctionAccessor	access:public	signature:(unsigned FunctionIndex) const
getFunctionAddress	StackMapParser.h	/^    uint64_t getFunctionAddress() const {$/;"	kind:f	class:llvm::StackMapV2Parser::FunctionAccessor	typeref:typename:uint64_t	access:public	signature:() const
getFunctionOffset	StackMapParser.h	/^  std::size_t getFunctionOffset(unsigned FunctionIndex) const {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:std::size_t	access:private	signature:(unsigned FunctionIndex) const
getGID	Archive.h	/^    Expected<unsigned> getGID() const { return Header.getGID(); }$/;"	kind:f	class:llvm::object::Archive::Child	typeref:typename:Expected<unsigned>	access:public	signature:() const
getGID	Archive.h	/^  Expected<unsigned> getGID() const;$/;"	kind:p	class:llvm::object::ArchiveMemberHeader	typeref:typename:Expected<unsigned>	access:public	signature:() const
getGeneric	COFF.h	/^  const coff_symbol_generic *getGeneric() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:const coff_symbol_generic *	access:public	signature:() const
getHeader	ELF.h	/^  const Elf_Ehdr *getHeader() const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:const Elf_Ehdr *	access:public	signature:() const
getHeader	MachO.h	/^  const MachO::mach_header &getHeader() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:const MachO::mach_header &	access:public	signature:() const
getHeader64	MachO.h	/^  const MachO::mach_header_64 &getHeader64() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:const MachO::mach_header_64 &	access:public	signature:() const
getHintName	COFF.h	/^  std::error_code getHintName(uint32_t Rva, uint16_t &Hint,$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:public	signature:(uint32_t Rva,uint16_t & Hint,StringRef & Name) const
getHintNameRVA	COFF.h	/^  std::error_code getHintNameRVA(uint32_t &Result) const;$/;"	kind:p	class:llvm::object::ImportedSymbolRef	typeref:typename:std::error_code	access:public	signature:(uint32_t & Result) const
getHintNameRVA	COFF.h	/^  uint32_t getHintNameRVA() const {$/;"	kind:f	struct:llvm::object::import_lookup_table_entry	typeref:typename:uint32_t	access:public	signature:() const
getHostArch	MachO.h	/^  static Triple getHostArch();$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:Triple	access:public	signature:()
getID	StackMapParser.h	/^    uint64_t getID() const {$/;"	kind:f	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:uint64_t	access:public	signature:() const
getImageBase	COFF.h	/^  uint64_t getImageBase() const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:uint64_t	access:public	signature:() const
getImportAddress	COFF.h	/^  std::error_code getImportAddress(int AddrIndex, uint64_t &Result) const;$/;"	kind:p	class:llvm::object::DelayImportDirectoryEntryRef	typeref:typename:std::error_code	access:public	signature:(int AddrIndex,uint64_t & Result) const
getImportAddressTableRVA	COFF.h	/^  std::error_code getImportAddressTableRVA(uint32_t &Result) const;$/;"	kind:p	class:llvm::object::ImportDirectoryEntryRef	typeref:typename:std::error_code	access:public	signature:(uint32_t & Result) const
getImportLookupTableRVA	COFF.h	/^  std::error_code getImportLookupTableRVA(uint32_t &Result) const;$/;"	kind:p	class:llvm::object::ImportDirectoryEntryRef	typeref:typename:std::error_code	access:public	signature:(uint32_t & Result) const
getImportTableEntry	COFF.h	/^  getImportTableEntry(const coff_import_directory_table_entry *&Result) const;$/;"	kind:p	class:llvm::object::ImportDirectoryEntryRef	typeref:typename:std::error_code	access:public	signature:(const coff_import_directory_table_entry * & Result) const
getIndex	ModuleSummaryIndexObjectFile.h	/^  ModuleSummaryIndex &getIndex() { return *Index; }$/;"	kind:f	class:llvm::object::ModuleSummaryIndexObjectFile	typeref:typename:ModuleSummaryIndex &	access:public	signature:()
getIndex	ModuleSummaryIndexObjectFile.h	/^  const ModuleSummaryIndex &getIndex() const {$/;"	kind:f	class:llvm::object::ModuleSummaryIndexObjectFile	typeref:typename:const ModuleSummaryIndex &	access:public	signature:() const
getIndirectName	MachO.h	/^  std::error_code getIndirectName(DataRefImpl Symb, StringRef &Res) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:std::error_code	access:public	signature:(DataRefImpl Symb,StringRef & Res) const
getIndirectSymbolTableEntry	MachO.h	/^  getIndirectSymbolTableEntry(const MachO::dysymtab_command &DLC,$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:uint32_t	access:public	signature:(const MachO::dysymtab_command & DLC,unsigned Index) const
getInstructionOffset	StackMapParser.h	/^    uint32_t getInstructionOffset() const {$/;"	kind:f	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:uint32_t	access:public	signature:() const
getKind	MachO.h	/^  std::error_code getKind(uint16_t &Result) const;$/;"	kind:p	class:llvm::object::DiceRef	typeref:typename:std::error_code	access:public	signature:(uint16_t & Result) const
getKind	MachO.h	/^inline std::error_code DiceRef::getKind(uint16_t &Result) const {$/;"	kind:f	class:llvm::object::DiceRef	typeref:typename:std::error_code	signature:(uint16_t & Result) const
getKind	StackMapParser.h	/^    LocationKind getKind() const {$/;"	kind:f	class:llvm::StackMapV2Parser::LocationAccessor	typeref:typename:LocationKind	access:public	signature:() const
getLastModified	Archive.h	/^    Expected<sys::TimePoint<std::chrono::seconds>> getLastModified() const {$/;"	kind:f	class:llvm::object::Archive::Child	typeref:typename:Expected<sys::TimePoint<std::chrono::seconds>>	access:public	signature:() const
getLastModified	Archive.h	/^  Expected<sys::TimePoint<std::chrono::seconds>> getLastModified() const;$/;"	kind:p	class:llvm::object::ArchiveMemberHeader	typeref:typename:Expected<sys::TimePoint<std::chrono::seconds>>	access:public	signature:() const
getLength	MachO.h	/^  std::error_code getLength(uint16_t &Result) const;$/;"	kind:p	class:llvm::object::DiceRef	typeref:typename:std::error_code	access:public	signature:(uint16_t & Result) const
getLength	MachO.h	/^inline std::error_code DiceRef::getLength(uint16_t &Result) const {$/;"	kind:f	class:llvm::object::DiceRef	typeref:typename:std::error_code	signature:(uint16_t & Result) const
getLengthMachO64	RelocVisitor.h	/^  uint8_t getLengthMachO64(RelocationRef R) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:uint8_t	access:private	signature:(RelocationRef R)
getLibraryShortNameByIndex	MachO.h	/^  std::error_code getLibraryShortNameByIndex(unsigned Index, StringRef &) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:std::error_code	access:public	signature:(unsigned Index,StringRef &) const
getLinkOptHintsLoadCommand	MachO.h	/^  MachO::linkedit_data_command getLinkOptHintsLoadCommand() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::linkedit_data_command	access:public	signature:() const
getLinkeditDataLoadCommand	MachO.h	/^  getLinkeditDataLoadCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::linkedit_data_command	access:public	signature:(const LoadCommandInfo & L) const
getLinkerOptionLoadCommand	MachO.h	/^  getLinkerOptionLoadCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::linker_option_command	access:public	signature:(const LoadCommandInfo & L) const
getLiveOut	StackMapParser.h	/^    LiveOutAccessor getLiveOut(unsigned LiveOutIndex) const {$/;"	kind:f	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:LiveOutAccessor	access:public	signature:(unsigned LiveOutIndex) const
getLocation	StackMapParser.h	/^    LocationAccessor getLocation(unsigned LocationIndex) const {$/;"	kind:f	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:LocationAccessor	access:public	signature:(unsigned LocationIndex) const
getMachOType	Binary.h	/^  static unsigned int getMachOType(bool isLE, bool is64Bits) {$/;"	kind:f	class:llvm::object::Binary	typeref:typename:unsigned int	access:protected	signature:(bool isLE,bool is64Bits)
getMachine	COFF.h	/^  uint16_t getMachine() const {$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:uint16_t	access:public	signature:() const
getMagic	MachOUniversal.h	/^  uint32_t getMagic() const { return Magic; }$/;"	kind:f	class:llvm::object::MachOUniversalBinary	typeref:typename:uint32_t	access:public	signature:() const
getMember	Archive.h	/^    Expected<Child> getMember() const;$/;"	kind:p	class:llvm::object::Archive::Symbol	typeref:typename:Expected<Child>	access:public	signature:() const
getMemoryBufferRef	Archive.h	/^    Expected<MemoryBufferRef> getMemoryBufferRef() const;$/;"	kind:p	class:llvm::object::Archive::Child	typeref:typename:Expected<MemoryBufferRef>	access:public	signature:() const
getMemoryBufferRef	Binary.h	/^  MemoryBufferRef getMemoryBufferRef() const;$/;"	kind:p	class:llvm::object::Binary	typeref:typename:MemoryBufferRef	access:public	signature:() const
getMessage	Error.h	/^  const std::string &getMessage() const { return Msg; }$/;"	kind:f	class:llvm::object::GenericBinaryError	typeref:typename:const std::string &	access:public	signature:() const
getModule	IRObjectFile.h	/^  Module &getModule() {$/;"	kind:f	class:llvm::object::IRObjectFile	typeref:typename:Module &	access:public	signature:()
getModule	IRObjectFile.h	/^  const Module &getModule() const {$/;"	kind:f	class:llvm::object::IRObjectFile	typeref:typename:const Module &	access:public	signature:() const
getModuleSummaryIndexForFile	ModuleSummaryIndexObjectFile.h	/^getModuleSummaryIndexForFile(StringRef Path);$/;"	kind:p	namespace:llvm	typeref:typename:Expected<std::unique_ptr<ModuleSummaryIndex>>	signature:(StringRef Path)
getNValue	MachO.h	/^  uint64_t getNValue(DataRefImpl Sym) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:uint64_t	access:public	signature:(DataRefImpl Sym) const
getName	Archive.h	/^    Expected<StringRef> getName() const;$/;"	kind:p	class:llvm::object::Archive::Child	typeref:typename:Expected<StringRef>	access:public	signature:() const
getName	Archive.h	/^    StringRef getName() const;$/;"	kind:p	class:llvm::object::Archive::Symbol	typeref:typename:StringRef	access:public	signature:() const
getName	Archive.h	/^  Expected<llvm::StringRef> getName(uint64_t Size) const;$/;"	kind:p	class:llvm::object::ArchiveMemberHeader	typeref:typename:Expected<llvm::StringRef>	access:public	signature:(uint64_t Size) const
getName	COFF.h	/^  std::error_code getName(StringRef &Result) const;$/;"	kind:p	class:llvm::object::DelayImportDirectoryEntryRef	typeref:typename:std::error_code	access:public	signature:(StringRef & Result) const
getName	COFF.h	/^  std::error_code getName(StringRef &Result) const;$/;"	kind:p	class:llvm::object::ImportDirectoryEntryRef	typeref:typename:std::error_code	access:public	signature:(StringRef & Result) const
getName	ELFTypes.h	/^  Expected<StringRef> getName(StringRef StrTab) const;$/;"	kind:p	struct:llvm::object::Elf_Sym_Impl	typeref:typename:Expected<StringRef>	access:public	signature:(StringRef StrTab) const
getName	ELFTypes.h	/^Expected<StringRef> Elf_Sym_Impl<ELFT>::getName(StringRef StrTab) const {$/;"	kind:f	class:llvm::object::Elf_Sym_Impl	typeref:typename:Expected<StringRef>	signature:(StringRef StrTab) const
getName	ObjectFile.h	/^  Expected<StringRef> getName() const;$/;"	kind:p	class:llvm::object::SymbolRef	typeref:typename:Expected<StringRef>	access:public	signature:() const
getName	ObjectFile.h	/^  std::error_code getName(StringRef &Result) const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:std::error_code	access:public	signature:(StringRef & Result) const
getName	ObjectFile.h	/^inline Expected<StringRef> SymbolRef::getName() const {$/;"	kind:f	class:llvm::object::SymbolRef	typeref:typename:Expected<StringRef>	signature:() const
getName	ObjectFile.h	/^inline std::error_code SectionRef::getName(StringRef &Result) const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:std::error_code	signature:(StringRef & Result) const
getNameType	COFF.h	/^  int getNameType() const { return (TypeInfo >> 2) & 0x7; }$/;"	kind:f	struct:llvm::object::coff_import_header	typeref:typename:int	access:public	signature:() const
getNext	Archive.h	/^    Expected<Child> getNext() const;$/;"	kind:p	class:llvm::object::Archive::Child	typeref:typename:Expected<Child>	access:public	signature:() const
getNext	Archive.h	/^    Symbol getNext() const;$/;"	kind:p	class:llvm::object::Archive::Symbol	typeref:typename:Symbol	access:public	signature:() const
getNext	MachOUniversal.h	/^    ObjectForArch getNext() const { return ObjectForArch(Parent, Index + 1); }$/;"	kind:f	class:llvm::object::MachOUniversalBinary::ObjectForArch	typeref:typename:ObjectForArch	access:public	signature:() const
getNumConstants	StackMapParser.h	/^  uint32_t getNumConstants() const {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:uint32_t	access:public	signature:() const
getNumFunctions	StackMapParser.h	/^  uint32_t getNumFunctions() const {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:uint32_t	access:public	signature:() const
getNumLiveOuts	StackMapParser.h	/^    uint16_t getNumLiveOuts() const {$/;"	kind:f	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:uint16_t	access:public	signature:() const
getNumLiveOutsOffset	StackMapParser.h	/^    unsigned getNumLiveOutsOffset() const {$/;"	kind:f	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:unsigned	access:private	signature:() const
getNumLocations	StackMapParser.h	/^    uint16_t getNumLocations() const {$/;"	kind:f	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:uint16_t	access:public	signature:() const
getNumRecords	StackMapParser.h	/^  uint32_t getNumRecords() const {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:uint32_t	access:public	signature:() const
getNumSavedRegs	COFF.h	/^  int getNumSavedRegs() const { return (Attributes >> 8) & 0x7; }$/;"	kind:f	struct:llvm::object::FpoData	typeref:typename:int	access:public	signature:() const
getNumber	COFF.h	/^  int32_t getNumber(bool IsBigObj) const {$/;"	kind:f	struct:llvm::object::coff_aux_section_definition	typeref:typename:int32_t	access:public	signature:(bool IsBigObj) const
getNumberOfAuxSymbols	COFF.h	/^  uint8_t getNumberOfAuxSymbols() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:uint8_t	access:public	signature:() const
getNumberOfObjects	MachOUniversal.h	/^  uint32_t getNumberOfObjects() const { return NumberOfObjects; }$/;"	kind:f	class:llvm::object::MachOUniversalBinary	typeref:typename:uint32_t	access:public	signature:() const
getNumberOfSections	COFF.h	/^  uint32_t getNumberOfSections() const {$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:uint32_t	access:public	signature:() const
getNumberOfSymbols	Archive.h	/^  uint32_t getNumberOfSymbols() const;$/;"	kind:p	class:llvm::object::Archive	typeref:typename:uint32_t	access:public	signature:() const
getNumberOfSymbols	COFF.h	/^  uint32_t getNumberOfSymbols() const {$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:uint32_t	access:public	signature:() const
getObject	ELFObjectFile.h	/^  const ELFObjectFileBase *getObject() const {$/;"	kind:f	class:llvm::object::ELFRelocationRef	typeref:typename:const ELFObjectFileBase *	access:public	signature:() const
getObject	ELFObjectFile.h	/^  const ELFObjectFileBase *getObject() const {$/;"	kind:f	class:llvm::object::ELFSectionRef	typeref:typename:const ELFObjectFileBase *	access:public	signature:() const
getObject	ELFObjectFile.h	/^  const ELFObjectFileBase *getObject() const {$/;"	kind:f	class:llvm::object::ELFSymbolRef	typeref:typename:const ELFObjectFileBase *	access:public	signature:() const
getObject	ObjectFile.h	/^  const ObjectFile *getObject() const;$/;"	kind:p	class:llvm::object::RelocationRef	typeref:typename:const ObjectFile *	access:public	signature:() const
getObject	ObjectFile.h	/^  const ObjectFile *getObject() const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:const ObjectFile *	access:public	signature:() const
getObject	ObjectFile.h	/^  const ObjectFile *getObject() const;$/;"	kind:p	class:llvm::object::SymbolRef	typeref:typename:const ObjectFile *	access:public	signature:() const
getObject	ObjectFile.h	/^inline const ObjectFile *RelocationRef::getObject() const {$/;"	kind:f	class:llvm::object::RelocationRef	typeref:typename:const ObjectFile *	signature:() const
getObject	ObjectFile.h	/^inline const ObjectFile *SectionRef::getObject() const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:const ObjectFile *	signature:() const
getObject	ObjectFile.h	/^inline const ObjectFile *SymbolRef::getObject() const {$/;"	kind:f	class:llvm::object::SymbolRef	typeref:typename:const ObjectFile *	signature:() const
getObject	SymbolicFile.h	/^  const SymbolicFile *getObject() const;$/;"	kind:p	class:llvm::object::BasicSymbolRef	typeref:typename:const SymbolicFile *	access:public	signature:() const
getObject	SymbolicFile.h	/^inline const SymbolicFile *BasicSymbolRef::getObject() const {$/;"	kind:f	class:llvm::object::BasicSymbolRef	typeref:typename:const SymbolicFile *	signature:() const
getObjectFile	MachO.h	/^  const ObjectFile *getObjectFile() const;$/;"	kind:p	class:llvm::object::DiceRef	typeref:typename:const ObjectFile *	access:public	signature:() const
getObjectFile	MachO.h	/^inline const ObjectFile *DiceRef::getObjectFile() const {$/;"	kind:f	class:llvm::object::DiceRef	typeref:typename:const ObjectFile *	signature:() const
getObjectForArch	MachOUniversal.h	/^  getObjectForArch(StringRef ArchName) const;$/;"	kind:p	class:llvm::object::MachOUniversalBinary	typeref:typename:Expected<std::unique_ptr<MachOObjectFile>>	access:public	signature:(StringRef ArchName) const
getOffset	COFF.h	/^  int getOffset() const { return Data & ((1 << 12) - 1); }$/;"	kind:f	struct:llvm::object::coff_base_reloc_block_entry	typeref:typename:int	access:public	signature:() const
getOffset	ELFObjectFile.h	/^  uint64_t getOffset() const {$/;"	kind:f	class:llvm::object::ELFSectionRef	typeref:typename:uint64_t	access:public	signature:() const
getOffset	MachO.h	/^  std::error_code getOffset(uint32_t &Result) const;$/;"	kind:p	class:llvm::object::DiceRef	typeref:typename:std::error_code	access:public	signature:(uint32_t & Result) const
getOffset	MachO.h	/^inline std::error_code DiceRef::getOffset(uint32_t &Result) const {$/;"	kind:f	class:llvm::object::DiceRef	typeref:typename:std::error_code	signature:(uint32_t & Result) const
getOffset	MachOUniversal.h	/^    uint32_t getOffset() const {$/;"	kind:f	class:llvm::object::MachOUniversalBinary::ObjectForArch	typeref:typename:uint32_t	access:public	signature:() const
getOffset	ObjectFile.h	/^  uint64_t getOffset() const;$/;"	kind:p	class:llvm::object::RelocationRef	typeref:typename:uint64_t	access:public	signature:() const
getOffset	ObjectFile.h	/^inline uint64_t RelocationRef::getOffset() const {$/;"	kind:f	class:llvm::object::RelocationRef	typeref:typename:uint64_t	signature:() const
getOffset	StackMapParser.h	/^    int32_t getOffset() const {$/;"	kind:f	class:llvm::StackMapV2Parser::LocationAccessor	typeref:typename:int32_t	access:public	signature:() const
getOldMember	ArchiveWriter.h	/^  getOldMember(const object::Archive::Child &OldMember, bool Deterministic);$/;"	kind:p	struct:llvm::NewArchiveMember	typeref:typename:Expected<NewArchiveMember>	access:public	signature:(const object::Archive::Child & OldMember,bool Deterministic)
getOrdinal	COFF.h	/^  std::error_code getOrdinal(uint16_t &Result) const;$/;"	kind:p	class:llvm::object::ImportedSymbolRef	typeref:typename:std::error_code	access:public	signature:(uint16_t & Result) const
getOrdinal	COFF.h	/^  std::error_code getOrdinal(uint32_t &Result) const;$/;"	kind:p	class:llvm::object::ExportDirectoryEntryRef	typeref:typename:std::error_code	access:public	signature:(uint32_t & Result) const
getOrdinal	COFF.h	/^  uint16_t getOrdinal() const {$/;"	kind:f	struct:llvm::object::import_lookup_table_entry	typeref:typename:uint16_t	access:public	signature:() const
getOrdinalBase	COFF.h	/^  std::error_code getOrdinalBase(uint32_t &Result) const;$/;"	kind:p	class:llvm::object::ExportDirectoryEntryRef	typeref:typename:std::error_code	access:public	signature:(uint32_t & Result) const
getOther	ELFObjectFile.h	/^  uint8_t getOther() const {$/;"	kind:f	class:llvm::object::ELFSymbolRef	typeref:typename:uint8_t	access:public	signature:() const
getPE32Header	COFF.h	/^  std::error_code getPE32Header(const pe32_header *&Res) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:public	signature:(const pe32_header * & Res) const
getPE32PlusHeader	COFF.h	/^  std::error_code getPE32PlusHeader(const pe32plus_header *&Res) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:public	signature:(const pe32plus_header * & Res) const
getParent	Archive.h	/^    const Archive *getParent() const { return Parent; }$/;"	kind:f	class:llvm::object::Archive::Child	typeref:typename:const Archive *	access:public	signature:() const
getPlainRelocationExternal	MachO.h	/^  bool getPlainRelocationExternal(const MachO::any_relocation_info &RE) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:bool	access:public	signature:(const MachO::any_relocation_info & RE) const
getPlainRelocationSymbolNum	MachO.h	/^  unsigned getPlainRelocationSymbolNum($/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:unsigned	access:public	signature:(const MachO::any_relocation_info & RE) const
getPlatformFlags	ELFObjectFile.h	/^  std::error_code getPlatformFlags(unsigned &Result) const override {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:std::error_code	access:public	signature:(unsigned & Result) const
getPlatformFlags	ObjectFile.h	/^  virtual std::error_code getPlatformFlags(unsigned &Result) const {$/;"	kind:f	class:llvm::object::ObjectFile	typeref:typename:std::error_code	access:public	signature:(unsigned & Result) const
getPointerToSymbolTable	COFF.h	/^  uint32_t getPointerToSymbolTable() const {$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:uint32_t	access:public	signature:() const
getPrologSize	COFF.h	/^  int getPrologSize() const { return Attributes & 0xF; }$/;"	kind:f	struct:llvm::object::FpoData	typeref:typename:int	access:public	signature:() const
getPtr	ELFTypes.h	/^  uintX_t getPtr() const { return d_un.d_ptr; }$/;"	kind:f	struct:llvm::object::Elf_Dyn_Impl	typeref:typename:uintX_t	access:public	signature:() const
getRInfo	ELFTypes.h	/^  uint32_t getRInfo(bool isMips64EL) const {$/;"	kind:f	struct:llvm::object::Elf_Rel_Impl	typeref:typename:uint32_t	access:public	signature:(bool isMips64EL) const
getRInfo	ELFTypes.h	/^  uint64_t getRInfo(bool isMips64EL) const {$/;"	kind:f	struct:llvm::object::Elf_Rel_Impl	typeref:typename:uint64_t	access:public	signature:(bool isMips64EL) const
getRVA	COFF.h	/^  std::error_code getRVA(uint32_t &Result) const;$/;"	kind:p	class:llvm::object::BaseRelocRef	typeref:typename:std::error_code	access:public	signature:(uint32_t & Result) const
getRawDataRefImpl	MachO.h	/^  DataRefImpl getRawDataRefImpl() const;$/;"	kind:p	class:llvm::object::DiceRef	typeref:typename:DataRefImpl	access:public	signature:() const
getRawDataRefImpl	MachO.h	/^inline DataRefImpl DiceRef::getRawDataRefImpl() const {$/;"	kind:f	class:llvm::object::DiceRef	typeref:typename:DataRefImpl	signature:() const
getRawDataRefImpl	ObjectFile.h	/^  DataRefImpl getRawDataRefImpl() const;$/;"	kind:p	class:llvm::object::RelocationRef	typeref:typename:DataRefImpl	access:public	signature:() const
getRawDataRefImpl	ObjectFile.h	/^  DataRefImpl getRawDataRefImpl() const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:DataRefImpl	access:public	signature:() const
getRawDataRefImpl	ObjectFile.h	/^inline DataRefImpl RelocationRef::getRawDataRefImpl() const {$/;"	kind:f	class:llvm::object::RelocationRef	typeref:typename:DataRefImpl	signature:() const
getRawDataRefImpl	ObjectFile.h	/^inline DataRefImpl SectionRef::getRawDataRefImpl() const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:DataRefImpl	signature:() const
getRawDataRefImpl	SymbolicFile.h	/^  DataRefImpl getRawDataRefImpl() const;$/;"	kind:p	class:llvm::object::BasicSymbolRef	typeref:typename:DataRefImpl	access:public	signature:() const
getRawDataRefImpl	SymbolicFile.h	/^inline DataRefImpl BasicSymbolRef::getRawDataRefImpl() const {$/;"	kind:f	class:llvm::object::BasicSymbolRef	typeref:typename:DataRefImpl	signature:() const
getRawLastModified	Archive.h	/^    StringRef getRawLastModified() const {$/;"	kind:f	class:llvm::object::Archive::Child	typeref:typename:StringRef	access:public	signature:() const
getRawLastModified	Archive.h	/^  llvm::StringRef getRawLastModified() const {$/;"	kind:f	class:llvm::object::ArchiveMemberHeader	typeref:typename:llvm::StringRef	access:public	signature:() const
getRawName	Archive.h	/^    Expected<StringRef> getRawName() const { return Header.getRawName(); }$/;"	kind:f	class:llvm::object::Archive::Child	typeref:typename:Expected<StringRef>	access:public	signature:() const
getRawName	Archive.h	/^  Expected<llvm::StringRef> getRawName() const;$/;"	kind:p	class:llvm::object::ArchiveMemberHeader	typeref:typename:Expected<llvm::StringRef>	access:public	signature:() const
getRawNumberOfSymbols	COFF.h	/^  uint32_t getRawNumberOfSymbols() const {$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:uint32_t	access:public	signature:() const
getRawPtr	COFF.h	/^  const void *getRawPtr() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:const void *	access:public	signature:() const
getRawSize	Archive.h	/^    Expected<uint64_t> getRawSize() const;$/;"	kind:p	class:llvm::object::Archive::Child	typeref:typename:Expected<uint64_t>	access:public	signature:() const
getRecord	StackMapParser.h	/^  RecordAccessor getRecord(unsigned RecordIndex) const {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:RecordAccessor	access:public	signature:(unsigned RecordIndex) const
getRecordCount	StackMapParser.h	/^    uint64_t getRecordCount() const {$/;"	kind:f	class:llvm::StackMapV2Parser::FunctionAccessor	typeref:typename:uint64_t	access:public	signature:() const
getRegInfo	ELFTypes.h	/^  Elf_Mips_RegInfo<ELFT> &getRegInfo() {$/;"	kind:f	struct:llvm::object::Elf_Mips_Options	typeref:typename:Elf_Mips_RegInfo<ELFT> &	access:public	signature:()
getRegInfo	ELFTypes.h	/^  const Elf_Mips_RegInfo<ELFT> &getRegInfo() const {$/;"	kind:f	struct:llvm::object::Elf_Mips_Options	typeref:typename:const Elf_Mips_RegInfo<ELFT> &	access:public	signature:() const
getRel	ELFObjectFile.h	/^  const Elf_Rel *getRel(DataRefImpl Rel) const;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:const Elf_Rel *	access:public	signature:(DataRefImpl Rel) const
getRel	ELFObjectFile.h	/^ELFObjectFile<ELFT>::getRel(DataRefImpl Rel) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:const typename ELFObjectFile<ELFT>::Elf_Rel *	signature:(DataRefImpl Rel) const
getRelSection	ELFObjectFile.h	/^  const Elf_Shdr *getRelSection(DataRefImpl Rel) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:const Elf_Shdr *	access:protected	signature:(DataRefImpl Rel) const
getRela	ELFObjectFile.h	/^  const Elf_Rela *getRela(DataRefImpl Rela) const;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:const Elf_Rela *	access:public	signature:(DataRefImpl Rela) const
getRela	ELFObjectFile.h	/^ELFObjectFile<ELFT>::getRela(DataRefImpl Rela) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:const typename ELFObjectFile<ELFT>::Elf_Rela *	signature:(DataRefImpl Rela) const
getRelocatedSection	ELFObjectFile.h	/^  section_iterator getRelocatedSection(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:section_iterator	access:protected	signature:(DataRefImpl Sec) const
getRelocatedSection	ELFObjectFile.h	/^ELFObjectFile<ELFT>::getRelocatedSection(DataRefImpl Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:section_iterator	signature:(DataRefImpl Sec) const
getRelocatedSection	ObjectFile.h	/^  section_iterator getRelocatedSection() const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:section_iterator	access:public	signature:() const
getRelocatedSection	ObjectFile.h	/^  virtual section_iterator getRelocatedSection(DataRefImpl Sec) const;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:section_iterator	access:protected	signature:(DataRefImpl Sec) const
getRelocatedSection	ObjectFile.h	/^inline section_iterator SectionRef::getRelocatedSection() const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:section_iterator	signature:() const
getRelocation	MachO.h	/^  MachO::any_relocation_info getRelocation(DataRefImpl Rel) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::any_relocation_info	access:public	signature:(DataRefImpl Rel) const
getRelocationAddend	ELFObjectFile.h	/^  ErrorOr<int64_t> getRelocationAddend(DataRefImpl Rel) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:ErrorOr<int64_t>	access:public	signature:(DataRefImpl Rel) const
getRelocationAddend	ELFObjectFile.h	/^  virtual ErrorOr<int64_t> getRelocationAddend(DataRefImpl Rel) const = 0;$/;"	kind:p	class:llvm::object::ELFObjectFileBase	typeref:typename:ErrorOr<int64_t>	access:protected	signature:(DataRefImpl Rel) const
getRelocationAddend	ELFObjectFile.h	/^ELFObjectFile<ELFT>::getRelocationAddend(DataRefImpl Rel) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:ErrorOr<int64_t>	signature:(DataRefImpl Rel) const
getRelocationLength	MachO.h	/^  uint8_t getRelocationLength(DataRefImpl Rel) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:uint8_t	access:public	signature:(DataRefImpl Rel) const
getRelocationOffset	COFF.h	/^  uint64_t getRelocationOffset(DataRefImpl Rel) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Rel) const
getRelocationOffset	ELFObjectFile.h	/^  uint64_t getRelocationOffset(DataRefImpl Rel) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Rel) const
getRelocationOffset	ELFObjectFile.h	/^uint64_t ELFObjectFile<ELFT>::getRelocationOffset(DataRefImpl Rel) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	signature:(DataRefImpl Rel) const
getRelocationOffset	MachO.h	/^  uint64_t getRelocationOffset(DataRefImpl Rel) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:uint64_t	access:public	signature:(DataRefImpl Rel) const
getRelocationOffset	ObjectFile.h	/^  virtual uint64_t getRelocationOffset(DataRefImpl Rel) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Rel) const
getRelocationRelocatedSection	MachO.h	/^  section_iterator getRelocationRelocatedSection(relocation_iterator Rel) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:section_iterator	access:public	signature:(relocation_iterator Rel) const
getRelocationSection	MachO.h	/^  section_iterator getRelocationSection(DataRefImpl Rel) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:section_iterator	access:public	signature:(DataRefImpl Rel) const
getRelocationSymbol	COFF.h	/^  symbol_iterator getRelocationSymbol(DataRefImpl Rel) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:symbol_iterator	access:protected	signature:(DataRefImpl Rel) const
getRelocationSymbol	ELF.h	/^  Expected<const Elf_Sym *> getRelocationSymbol(const Elf_Rel *Rel,$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<const Elf_Sym * >	access:public	signature:(const Elf_Rel * Rel,const Elf_Shdr * SymTab) const
getRelocationSymbol	ELF.h	/^ELFFile<ELFT>::getRelocationSymbol(const Elf_Rel *Rel,$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<const typename ELFT::Sym * >	signature:(const Elf_Rel * Rel,const Elf_Shdr * SymTab) const
getRelocationSymbol	ELFObjectFile.h	/^  symbol_iterator getRelocationSymbol(DataRefImpl Rel) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:symbol_iterator	access:protected	signature:(DataRefImpl Rel) const
getRelocationSymbol	ELFObjectFile.h	/^ELFObjectFile<ELFT>::getRelocationSymbol(DataRefImpl Rel) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:symbol_iterator	signature:(DataRefImpl Rel) const
getRelocationSymbol	MachO.h	/^  symbol_iterator getRelocationSymbol(DataRefImpl Rel) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:symbol_iterator	access:public	signature:(DataRefImpl Rel) const
getRelocationSymbol	ObjectFile.h	/^  virtual symbol_iterator getRelocationSymbol(DataRefImpl Rel) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:symbol_iterator	access:protected	signature:(DataRefImpl Rel) const
getRelocationType	COFF.h	/^  uint64_t getRelocationType(DataRefImpl Rel) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Rel) const
getRelocationType	ELFObjectFile.h	/^  uint64_t getRelocationType(DataRefImpl Rel) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Rel) const
getRelocationType	ELFObjectFile.h	/^uint64_t ELFObjectFile<ELFT>::getRelocationType(DataRefImpl Rel) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	signature:(DataRefImpl Rel) const
getRelocationType	MachO.h	/^  uint64_t getRelocationType(DataRefImpl Rel) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:uint64_t	access:public	signature:(DataRefImpl Rel) const
getRelocationType	ObjectFile.h	/^  virtual uint64_t getRelocationType(DataRefImpl Rel) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Rel) const
getRelocationTypeName	COFF.h	/^  void getRelocationTypeName(DataRefImpl Rel,$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:void	access:protected	signature:(DataRefImpl Rel,SmallVectorImpl<char> & Result) const
getRelocationTypeName	ELF.h	/^  StringRef getRelocationTypeName(uint32_t Type) const;$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:StringRef	access:public	signature:(uint32_t Type) const
getRelocationTypeName	ELF.h	/^  void getRelocationTypeName(uint32_t Type,$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:void	access:public	signature:(uint32_t Type,SmallVectorImpl<char> & Result) const
getRelocationTypeName	ELF.h	/^StringRef ELFFile<ELFT>::getRelocationTypeName(uint32_t Type) const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:StringRef	signature:(uint32_t Type) const
getRelocationTypeName	ELF.h	/^void ELFFile<ELFT>::getRelocationTypeName(uint32_t Type,$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:void	signature:(uint32_t Type,SmallVectorImpl<char> & Result) const
getRelocationTypeName	ELFObjectFile.h	/^  StringRef getRelocationTypeName(uint32_t Type) const;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:StringRef	access:protected	signature:(uint32_t Type) const
getRelocationTypeName	ELFObjectFile.h	/^  void getRelocationTypeName(DataRefImpl Rel,$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:void	access:protected	signature:(DataRefImpl Rel,SmallVectorImpl<char> & Result) const
getRelocationTypeName	ELFObjectFile.h	/^StringRef ELFObjectFile<ELFT>::getRelocationTypeName(uint32_t Type) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:StringRef	signature:(uint32_t Type) const
getRelocationTypeName	ELFObjectFile.h	/^void ELFObjectFile<ELFT>::getRelocationTypeName($/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:void	signature:(DataRefImpl Rel,SmallVectorImpl<char> & Result) const
getRelocationTypeName	MachO.h	/^  void getRelocationTypeName(DataRefImpl Rel,$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:void	access:public	signature:(DataRefImpl Rel,SmallVectorImpl<char> & Result) const
getRelocationTypeName	ObjectFile.h	/^  virtual void getRelocationTypeName(DataRefImpl Rel,$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:void	access:protected	signature:(DataRefImpl Rel,SmallVectorImpl<char> & Result) const
getRelocations	COFF.h	/^  getRelocations(const coff_section *Sec) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:iterator_range<const coff_relocation * >	access:public	signature:(const coff_section * Sec) const
getReserved	MachOUniversal.h	/^    uint32_t getReserved() const {$/;"	kind:f	class:llvm::object::MachOUniversalBinary::ObjectForArch	typeref:typename:uint32_t	access:public	signature:() const
getRoutinesCommand	MachO.h	/^  getRoutinesCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::routines_command	access:public	signature:(const LoadCommandInfo & L) const
getRoutinesCommand64	MachO.h	/^  getRoutinesCommand64(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::routines_command_64	access:public	signature:(const LoadCommandInfo & L) const
getRpathCommand	MachO.h	/^  getRpathCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::rpath_command	access:public	signature:(const LoadCommandInfo & L) const
getRvaAndSizeAsBytes	COFF.h	/^  std::error_code getRvaAndSizeAsBytes(uint32_t RVA, uint32_t Size,$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:public	signature:(uint32_t RVA,uint32_t Size,ArrayRef<uint8_t> & Contents) const
getRvaPtr	COFF.h	/^  std::error_code getRvaPtr(uint32_t Rva, uintptr_t &Res) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:public	signature:(uint32_t Rva,uintptr_t & Res) const
getSHNDXTable	ELF.h	/^  Expected<ArrayRef<Elf_Word>> getSHNDXTable(const Elf_Shdr &Section) const;$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<ArrayRef<Elf_Word>>	access:public	signature:(const Elf_Shdr & Section) const
getSHNDXTable	ELF.h	/^  Expected<ArrayRef<Elf_Word>> getSHNDXTable(const Elf_Shdr &Section,$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<ArrayRef<Elf_Word>>	access:public	signature:(const Elf_Shdr & Section,Elf_Shdr_Range Sections) const
getSHNDXTable	ELF.h	/^ELFFile<ELFT>::getSHNDXTable(const Elf_Shdr &Section) const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<ArrayRef<typename ELFT::Word>>	signature:(const Elf_Shdr & Section) const
getSHNDXTable	ELF.h	/^ELFFile<ELFT>::getSHNDXTable(const Elf_Shdr &Section,$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<ArrayRef<typename ELFT::Word>>	signature:(const Elf_Shdr & Section,Elf_Shdr_Range Sections) const
getScatteredRelocationScattered	MachO.h	/^  bool getScatteredRelocationScattered($/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:bool	access:public	signature:(const MachO::any_relocation_info & RE) const
getScatteredRelocationType	MachO.h	/^  uint32_t getScatteredRelocationType($/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:uint32_t	access:public	signature:(const MachO::any_relocation_info & RE) const
getScatteredRelocationValue	MachO.h	/^  uint32_t getScatteredRelocationValue($/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:uint32_t	access:public	signature:(const MachO::any_relocation_info & RE) const
getSection	COFF.h	/^  std::error_code getSection(int32_t index, const coff_section *&Res) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:public	signature:(int32_t index,const coff_section * & Res) const
getSection	ELF.h	/^  Expected<const Elf_Shdr *> getSection(const Elf_Sym *Sym,$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<const Elf_Shdr * >	access:public	signature:(const Elf_Sym * Sym,Elf_Sym_Range Symtab,ArrayRef<Elf_Word> ShndxTable) const
getSection	ELF.h	/^  Expected<const Elf_Shdr *> getSection(const Elf_Sym *Sym,$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<const Elf_Shdr * >	access:public	signature:(const Elf_Sym * Sym,const Elf_Shdr * SymTab,ArrayRef<Elf_Word> ShndxTable) const
getSection	ELF.h	/^  Expected<const Elf_Shdr *> getSection(uint32_t Index) const;$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<const Elf_Shdr * >	access:public	signature:(uint32_t Index) const
getSection	ELF.h	/^ELFFile<ELFT>::getSection(const Elf_Sym *Sym, Elf_Sym_Range Symbols,$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<const typename ELFT::Shdr * >	signature:(const Elf_Sym * Sym,Elf_Sym_Range Symbols,ArrayRef<Elf_Word> ShndxTable) const
getSection	ELF.h	/^ELFFile<ELFT>::getSection(const Elf_Sym *Sym, const Elf_Shdr *SymTab,$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<const typename ELFT::Shdr * >	signature:(const Elf_Sym * Sym,const Elf_Shdr * SymTab,ArrayRef<Elf_Word> ShndxTable) const
getSection	ELF.h	/^ELFFile<ELFT>::getSection(uint32_t Index) const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<const typename ELFT::Shdr * >	signature:(uint32_t Index) const
getSection	ELF.h	/^getSection(typename ELFT::ShdrRange Sections, uint32_t Index) {$/;"	kind:f	namespace:llvm::object	typeref:typename:Expected<const typename ELFT::Shdr * >	signature:(typename ELFT::ShdrRange Sections,uint32_t Index)
getSection	ELFObjectFile.h	/^  const Elf_Shdr *getSection(DataRefImpl Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:const Elf_Shdr *	access:public	signature:(DataRefImpl Sec) const
getSection	MachO.h	/^  MachO::section getSection(DataRefImpl DRI) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::section	access:public	signature:(DataRefImpl DRI) const
getSection	MachO.h	/^  MachO::section getSection(const LoadCommandInfo &L, unsigned Index) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::section	access:public	signature:(const LoadCommandInfo & L,unsigned Index) const
getSection	ObjectFile.h	/^  Expected<section_iterator> getSection() const;$/;"	kind:p	class:llvm::object::SymbolRef	typeref:typename:Expected<section_iterator>	access:public	signature:() const
getSection	ObjectFile.h	/^inline Expected<section_iterator> SymbolRef::getSection() const {$/;"	kind:f	class:llvm::object::SymbolRef	typeref:typename:Expected<section_iterator>	signature:() const
getSection64	MachO.h	/^  MachO::section_64 getSection64(DataRefImpl DRI) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::section_64	access:public	signature:(DataRefImpl DRI) const
getSection64	MachO.h	/^  MachO::section_64 getSection64(const LoadCommandInfo &L,unsigned Index) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::section_64	access:public	signature:(const LoadCommandInfo & L,unsigned Index) const
getSectionAddress	COFF.h	/^  uint64_t getSectionAddress(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Sec) const
getSectionAddress	ELFObjectFile.h	/^  uint64_t getSectionAddress(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Sec) const
getSectionAddress	ELFObjectFile.h	/^uint64_t ELFObjectFile<ELFT>::getSectionAddress(DataRefImpl Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	signature:(DataRefImpl Sec) const
getSectionAddress	MachO.h	/^  uint64_t getSectionAddress(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:uint64_t	access:public	signature:(DataRefImpl Sec) const
getSectionAddress	ObjectFile.h	/^  virtual uint64_t getSectionAddress(DataRefImpl Sec) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Sec) const
getSectionAlignment	COFF.h	/^  uint64_t getSectionAlignment(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Sec) const
getSectionAlignment	ELFObjectFile.h	/^  uint64_t getSectionAlignment(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Sec) const
getSectionAlignment	ELFObjectFile.h	/^uint64_t ELFObjectFile<ELFT>::getSectionAlignment(DataRefImpl Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	signature:(DataRefImpl Sec) const
getSectionAlignment	MachO.h	/^  uint64_t getSectionAlignment(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:uint64_t	access:public	signature:(DataRefImpl Sec) const
getSectionAlignment	ObjectFile.h	/^  virtual uint64_t getSectionAlignment(DataRefImpl Sec) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Sec) const
getSectionContents	COFF.h	/^  std::error_code getSectionContents(DataRefImpl Sec,$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:protected	signature:(DataRefImpl Sec,StringRef & Res) const
getSectionContents	COFF.h	/^  std::error_code getSectionContents(const coff_section *Sec,$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:public	signature:(const coff_section * Sec,ArrayRef<uint8_t> & Res) const
getSectionContents	ELF.h	/^  Expected<ArrayRef<uint8_t>> getSectionContents(const Elf_Shdr *Sec) const;$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<ArrayRef<uint8_t>>	access:public	signature:(const Elf_Shdr * Sec) const
getSectionContents	ELF.h	/^ELFFile<ELFT>::getSectionContents(const Elf_Shdr *Sec) const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<ArrayRef<uint8_t>>	signature:(const Elf_Shdr * Sec) const
getSectionContents	ELFObjectFile.h	/^  std::error_code getSectionContents(DataRefImpl Sec,$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:std::error_code	access:protected	signature:(DataRefImpl Sec,StringRef & Res) const
getSectionContents	ELFObjectFile.h	/^ELFObjectFile<ELFT>::getSectionContents(DataRefImpl Sec,$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:std::error_code	signature:(DataRefImpl Sec,StringRef & Result) const
getSectionContents	MachO.h	/^  std::error_code getSectionContents(DataRefImpl Sec,$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:std::error_code	access:public	signature:(DataRefImpl Sec,StringRef & Res) const
getSectionContents	ObjectFile.h	/^  virtual std::error_code getSectionContents(DataRefImpl Sec,$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:std::error_code	access:protected	signature:(DataRefImpl Sec,StringRef & Res) const
getSectionContentsAsArray	ELF.h	/^  Expected<ArrayRef<T>> getSectionContentsAsArray(const Elf_Shdr *Sec) const;$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<ArrayRef<T>>	access:public	signature:(const Elf_Shdr * Sec) const
getSectionContentsAsArray	ELF.h	/^ELFFile<ELFT>::getSectionContentsAsArray(const Elf_Shdr *Sec) const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<ArrayRef<T>>	signature:(const Elf_Shdr * Sec) const
getSectionFinalSegmentName	MachO.h	/^  StringRef getSectionFinalSegmentName(DataRefImpl Sec) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:StringRef	access:public	signature:(DataRefImpl Sec) const
getSectionFlags	ELFObjectFile.h	/^  uint64_t getSectionFlags(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Sec) const
getSectionFlags	ELFObjectFile.h	/^  virtual uint64_t getSectionFlags(DataRefImpl Sec) const = 0;$/;"	kind:p	class:llvm::object::ELFObjectFileBase	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Sec) const
getSectionFlags	ELFObjectFile.h	/^uint64_t ELFObjectFile<ELFT>::getSectionFlags(DataRefImpl Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	signature:(DataRefImpl Sec) const
getSectionID	COFF.h	/^  unsigned getSectionID(SectionRef Sec) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:unsigned	access:public	signature:(SectionRef Sec) const
getSectionID	MachO.h	/^  unsigned getSectionID(SectionRef Sec) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:unsigned	access:public	signature:(SectionRef Sec) const
getSectionIndex	ELF.h	/^  Expected<uint32_t> getSectionIndex(const Elf_Sym *Sym, Elf_Sym_Range Syms,$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<uint32_t>	access:public	signature:(const Elf_Sym * Sym,Elf_Sym_Range Syms,ArrayRef<Elf_Word> ShndxTable) const
getSectionIndex	ELF.h	/^ELFFile<ELFT>::getSectionIndex(const Elf_Sym *Sym, Elf_Sym_Range Syms,$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<uint32_t>	signature:(const Elf_Sym * Sym,Elf_Sym_Range Syms,ArrayRef<Elf_Word> ShndxTable) const
getSectionName	COFF.h	/^  std::error_code getSectionName(DataRefImpl Sec,$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:protected	signature:(DataRefImpl Sec,StringRef & Res) const
getSectionName	COFF.h	/^  std::error_code getSectionName(const coff_section *Sec, StringRef &Res) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:public	signature:(const coff_section * Sec,StringRef & Res) const
getSectionName	ELF.h	/^  Expected<StringRef> getSectionName(const Elf_Shdr *Section) const;$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<StringRef>	access:public	signature:(const Elf_Shdr * Section) const
getSectionName	ELF.h	/^  Expected<StringRef> getSectionName(const Elf_Shdr *Section,$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<StringRef>	access:public	signature:(const Elf_Shdr * Section,StringRef DotShstrtab) const
getSectionName	ELF.h	/^ELFFile<ELFT>::getSectionName(const Elf_Shdr *Section) const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<StringRef>	signature:(const Elf_Shdr * Section) const
getSectionName	ELF.h	/^Expected<StringRef> ELFFile<ELFT>::getSectionName(const Elf_Shdr *Section,$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<StringRef>	signature:(const Elf_Shdr * Section,StringRef DotShstrtab) const
getSectionName	ELFObjectFile.h	/^  std::error_code getSectionName(DataRefImpl Sec,$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:std::error_code	access:protected	signature:(DataRefImpl Sec,StringRef & Res) const
getSectionName	ELFObjectFile.h	/^std::error_code ELFObjectFile<ELFT>::getSectionName(DataRefImpl Sec,$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:std::error_code	signature:(DataRefImpl Sec,StringRef & Result) const
getSectionName	MachO.h	/^  std::error_code getSectionName(DataRefImpl Sec,$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:std::error_code	access:public	signature:(DataRefImpl Sec,StringRef & Res) const
getSectionName	ObjectFile.h	/^  virtual std::error_code getSectionName(DataRefImpl Sec,$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:std::error_code	access:protected	signature:(DataRefImpl Sec,StringRef & Res) const
getSectionNumber	COFF.h	/^  int32_t getSectionNumber() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:int32_t	access:public	signature:() const
getSectionOffset	ELFObjectFile.h	/^  uint64_t getSectionOffset(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Sec) const
getSectionOffset	ELFObjectFile.h	/^  virtual uint64_t getSectionOffset(DataRefImpl Sec) const = 0;$/;"	kind:p	class:llvm::object::ELFObjectFileBase	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Sec) const
getSectionOffset	ELFObjectFile.h	/^uint64_t ELFObjectFile<ELFT>::getSectionOffset(DataRefImpl Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	signature:(DataRefImpl Sec) const
getSectionRawFinalSegmentName	MachO.h	/^  ArrayRef<char> getSectionRawFinalSegmentName(DataRefImpl Sec) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:ArrayRef<char>	access:public	signature:(DataRefImpl Sec) const
getSectionRawName	MachO.h	/^  ArrayRef<char> getSectionRawName(DataRefImpl Sec) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:ArrayRef<char>	access:public	signature:(DataRefImpl Sec) const
getSectionSize	COFF.h	/^  uint64_t getSectionSize(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Sec) const
getSectionSize	COFF.h	/^  uint64_t getSectionSize(const coff_section *Sec) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:uint64_t	access:public	signature:(const coff_section * Sec) const
getSectionSize	ELFObjectFile.h	/^  uint64_t getSectionSize(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Sec) const
getSectionSize	ELFObjectFile.h	/^uint64_t ELFObjectFile<ELFT>::getSectionSize(DataRefImpl Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	signature:(DataRefImpl Sec) const
getSectionSize	MachO.h	/^  uint64_t getSectionSize(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:uint64_t	access:public	signature:(DataRefImpl Sec) const
getSectionSize	ObjectFile.h	/^  virtual uint64_t getSectionSize(DataRefImpl Sec) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Sec) const
getSectionStringTable	ELF.h	/^  Expected<StringRef> getSectionStringTable(Elf_Shdr_Range Sections) const;$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<StringRef>	access:public	signature:(Elf_Shdr_Range Sections) const
getSectionStringTable	ELF.h	/^ELFFile<ELFT>::getSectionStringTable(Elf_Shdr_Range Sections) const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<StringRef>	signature:(Elf_Shdr_Range Sections) const
getSectionType	ELFObjectFile.h	/^  uint32_t getSectionType(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:uint32_t	access:protected	signature:(DataRefImpl Sec) const
getSectionType	ELFObjectFile.h	/^  virtual uint32_t getSectionType(DataRefImpl Sec) const = 0;$/;"	kind:p	class:llvm::object::ELFObjectFileBase	typeref:typename:uint32_t	access:protected	signature:(DataRefImpl Sec) const
getSectionType	ELFObjectFile.h	/^uint32_t ELFObjectFile<ELFT>::getSectionType(DataRefImpl Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:uint32_t	signature:(DataRefImpl Sec) const
getSectionType	MachO.h	/^  unsigned getSectionType(SectionRef Sec) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:unsigned	access:public	signature:(SectionRef Sec) const
getSegment64LoadCommand	MachO.h	/^  getSegment64LoadCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::segment_command_64	access:public	signature:(const LoadCommandInfo & L) const
getSegmentLoadCommand	MachO.h	/^  getSegmentLoadCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::segment_command	access:public	signature:(const LoadCommandInfo & L) const
getShortName	COFF.h	/^  const char *getShortName() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:const char *	access:public	signature:() const
getSize	Archive.h	/^    Expected<uint64_t> getSize() const;$/;"	kind:p	class:llvm::object::Archive::Child	typeref:typename:Expected<uint64_t>	access:public	signature:() const
getSize	Archive.h	/^  Expected<uint32_t> getSize() const;$/;"	kind:p	class:llvm::object::ArchiveMemberHeader	typeref:typename:Expected<uint32_t>	access:public	signature:() const
getSize	ELFObjectFile.h	/^  uint64_t getSize() const {$/;"	kind:f	class:llvm::object::ELFSymbolRef	typeref:typename:uint64_t	access:public	signature:() const
getSize	MachOUniversal.h	/^    uint32_t getSize() const {$/;"	kind:f	class:llvm::object::MachOUniversalBinary::ObjectForArch	typeref:typename:uint32_t	access:public	signature:() const
getSize	ObjectFile.h	/^  uint64_t getSize() const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:uint64_t	access:public	signature:() const
getSize	ObjectFile.h	/^inline uint64_t SectionRef::getSize() const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:uint64_t	signature:() const
getSizeInBytes	StackMapParser.h	/^    unsigned getSizeInBytes() const {$/;"	kind:f	class:llvm::StackMapV2Parser::LiveOutAccessor	typeref:typename:unsigned	access:public	signature:() const
getSizeInBytes	StackMapParser.h	/^    unsigned getSizeInBytes() const {$/;"	kind:f	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:unsigned	access:private	signature:() const
getSizeOf	Archive.h	/^  uint64_t getSizeOf() const {$/;"	kind:f	class:llvm::object::ArchiveMemberHeader	typeref:typename:uint64_t	access:public	signature:() const
getSizeOfOptionalHeader	COFF.h	/^  uint16_t getSizeOfOptionalHeader() const {$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:uint16_t	access:public	signature:() const
getSmallConstant	StackMapParser.h	/^    uint32_t getSmallConstant() const {$/;"	kind:f	class:llvm::StackMapV2Parser::LocationAccessor	typeref:typename:uint32_t	access:public	signature:() const
getSourceVersionCommand	MachO.h	/^  getSourceVersionCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::source_version_command	access:public	signature:(const LoadCommandInfo & L) const
getStackSize	StackMapParser.h	/^    uint64_t getStackSize() const {$/;"	kind:f	class:llvm::StackMapV2Parser::FunctionAccessor	typeref:typename:uint64_t	access:public	signature:() const
getStorageClass	COFF.h	/^  uint8_t getStorageClass() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:uint8_t	access:public	signature:() const
getString	COFF.h	/^  std::error_code getString(uint32_t offset, StringRef &Res) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:private	signature:(uint32_t offset,StringRef & Res) const
getStringTable	Archive.h	/^  StringRef getStringTable() const { return StringTable; }$/;"	kind:f	class:llvm::object::Archive	typeref:typename:StringRef	access:public	signature:() const
getStringTable	ELF.h	/^  Expected<StringRef> getStringTable(const Elf_Shdr *Section) const;$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<StringRef>	access:public	signature:(const Elf_Shdr * Section) const
getStringTable	ELF.h	/^ELFFile<ELFT>::getStringTable(const Elf_Shdr *Section) const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<StringRef>	signature:(const Elf_Shdr * Section) const
getStringTableData	MachO.h	/^  StringRef getStringTableData() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:StringRef	access:public	signature:() const
getStringTableForSymtab	ELF.h	/^  Expected<StringRef> getStringTableForSymtab(const Elf_Shdr &Section) const;$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<StringRef>	access:public	signature:(const Elf_Shdr & Section) const
getStringTableForSymtab	ELF.h	/^  Expected<StringRef> getStringTableForSymtab(const Elf_Shdr &Section,$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<StringRef>	access:public	signature:(const Elf_Shdr & Section,Elf_Shdr_Range Sections) const
getStringTableForSymtab	ELF.h	/^ELFFile<ELFT>::getStringTableForSymtab(const Elf_Shdr &Sec) const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<StringRef>	signature:(const Elf_Shdr & Sec) const
getStringTableForSymtab	ELF.h	/^ELFFile<ELFT>::getStringTableForSymtab(const Elf_Shdr &Sec,$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<StringRef>	signature:(const Elf_Shdr & Sec,Elf_Shdr_Range Sections) const
getStringTableOffset	COFF.h	/^  const StringTableOffset &getStringTableOffset() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:const StringTableOffset &	access:public	signature:() const
getSubClientCommand	MachO.h	/^  getSubClientCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::sub_client_command	access:public	signature:(const LoadCommandInfo & L) const
getSubFrameworkCommand	MachO.h	/^  getSubFrameworkCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::sub_framework_command	access:public	signature:(const LoadCommandInfo & L) const
getSubLibraryCommand	MachO.h	/^  getSubLibraryCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::sub_library_command	access:public	signature:(const LoadCommandInfo & L) const
getSubUmbrellaCommand	MachO.h	/^  getSubUmbrellaCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::sub_umbrella_command	access:public	signature:(const LoadCommandInfo & L) const
getSym	IRObjectFile.h	/^  static Sym getSym(DataRefImpl &Symb) {$/;"	kind:f	class:llvm::object::IRObjectFile	typeref:typename:Sym	access:private	signature:(DataRefImpl & Symb)
getSymbol	COFF.h	/^  ErrorOr<COFFSymbolRef> getSymbol(uint32_t index) const {$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:ErrorOr<COFFSymbolRef>	access:public	signature:(uint32_t index) const
getSymbol	COFF.h	/^  std::error_code getSymbol(uint32_t Index,$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:public	signature:(uint32_t Index,const coff_symbol_type * & Res) const
getSymbol	ELF.h	/^  Expected<const Elf_Sym *> getSymbol(const Elf_Shdr *Sec,$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<const Elf_Sym * >	access:public	signature:(const Elf_Shdr * Sec,uint32_t Index) const
getSymbol	ELF.h	/^ELFFile<ELFT>::getSymbol(const Elf_Shdr *Sec, uint32_t Index) const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<const typename ELFT::Sym * >	signature:(const Elf_Shdr * Sec,uint32_t Index) const
getSymbol	ELF.h	/^getSymbol(typename ELFT::SymRange Symbols, uint32_t Index) {$/;"	kind:f	namespace:llvm::object	typeref:typename:Expected<const typename ELFT::Sym * >	signature:(typename ELFT::SymRange Symbols,uint32_t Index)
getSymbol	ELFObjectFile.h	/^  const Elf_Sym *getSymbol(DataRefImpl Sym) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:const Elf_Sym *	access:public	signature:(DataRefImpl Sym) const
getSymbol	ELFTypes.h	/^  uint32_t getSymbol(bool isMips64EL) const {$/;"	kind:f	struct:llvm::object::Elf_Rel_Impl	typeref:typename:uint32_t	access:public	signature:(bool isMips64EL) const
getSymbol	ObjectFile.h	/^  symbol_iterator getSymbol() const;$/;"	kind:p	class:llvm::object::RelocationRef	typeref:typename:symbol_iterator	access:public	signature:() const
getSymbol	ObjectFile.h	/^inline symbol_iterator RelocationRef::getSymbol() const {$/;"	kind:f	class:llvm::object::RelocationRef	typeref:typename:symbol_iterator	signature:() const
getSymbol64TableEntry	MachO.h	/^  MachO::nlist_64 getSymbol64TableEntry(DataRefImpl DRI) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::nlist_64	access:public	signature:(DataRefImpl DRI) const
getSymbolAddress	COFF.h	/^  Expected<uint64_t> getSymbolAddress(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:Expected<uint64_t>	access:protected	signature:(DataRefImpl Symb) const
getSymbolAddress	ELFObjectFile.h	/^  Expected<uint64_t> getSymbolAddress(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:Expected<uint64_t>	access:protected	signature:(DataRefImpl Symb) const
getSymbolAddress	ELFObjectFile.h	/^ELFObjectFile<ELFT>::getSymbolAddress(DataRefImpl Symb) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:Expected<uint64_t>	signature:(DataRefImpl Symb) const
getSymbolAddress	MachO.h	/^  Expected<uint64_t> getSymbolAddress(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:Expected<uint64_t>	access:public	signature:(DataRefImpl Symb) const
getSymbolAddress	ObjectFile.h	/^  virtual Expected<uint64_t> getSymbolAddress(DataRefImpl Symb) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:Expected<uint64_t>	access:protected	signature:(DataRefImpl Symb) const
getSymbolAlignment	COFF.h	/^  uint32_t getSymbolAlignment(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:uint32_t	access:protected	signature:(DataRefImpl Symb) const
getSymbolAlignment	ELFObjectFile.h	/^  uint32_t getSymbolAlignment(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:uint32_t	access:protected	signature:(DataRefImpl Symb) const
getSymbolAlignment	ELFObjectFile.h	/^uint32_t ELFObjectFile<ELFT>::getSymbolAlignment(DataRefImpl Symb) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:uint32_t	signature:(DataRefImpl Symb) const
getSymbolAlignment	MachO.h	/^  uint32_t getSymbolAlignment(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:uint32_t	access:public	signature:(DataRefImpl Symb) const
getSymbolAlignment	ObjectFile.h	/^  virtual uint32_t getSymbolAlignment(DataRefImpl Symb) const;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:uint32_t	access:protected	signature:(DataRefImpl Symb) const
getSymbolAuxData	COFF.h	/^  ArrayRef<uint8_t> getSymbolAuxData(COFFSymbolRef Symbol) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:ArrayRef<uint8_t>	access:public	signature:(COFFSymbolRef Symbol) const
getSymbolByIndex	MachO.h	/^  basic_symbol_iterator getSymbolByIndex(unsigned Index) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:basic_symbol_iterator	access:public	signature:(unsigned Index) const
getSymbolELFType	ELFObjectFile.h	/^  uint8_t getSymbolELFType(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:uint8_t	access:protected	signature:(DataRefImpl Symb) const
getSymbolELFType	ELFObjectFile.h	/^  virtual uint8_t getSymbolELFType(DataRefImpl Symb) const = 0;$/;"	kind:p	class:llvm::object::ELFObjectFileBase	typeref:typename:uint8_t	access:protected	signature:(DataRefImpl Symb) const
getSymbolELFType	ELFObjectFile.h	/^uint8_t ELFObjectFile<ELFT>::getSymbolELFType(DataRefImpl Symb) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:uint8_t	signature:(DataRefImpl Symb) const
getSymbolFlags	COFF.h	/^  uint32_t getSymbolFlags(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:uint32_t	access:protected	signature:(DataRefImpl Symb) const
getSymbolFlags	COFFImportFile.h	/^  uint32_t getSymbolFlags(DataRefImpl Symb) const override {$/;"	kind:f	class:llvm::object::COFFImportFile	typeref:typename:uint32_t	access:public	signature:(DataRefImpl Symb) const
getSymbolFlags	ELFObjectFile.h	/^  uint32_t getSymbolFlags(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:uint32_t	access:protected	signature:(DataRefImpl Symb) const
getSymbolFlags	ELFObjectFile.h	/^uint32_t ELFObjectFile<ELFT>::getSymbolFlags(DataRefImpl Sym) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:uint32_t	signature:(DataRefImpl Sym) const
getSymbolFlags	IRObjectFile.h	/^  uint32_t getSymbolFlags(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::IRObjectFile	typeref:typename:uint32_t	access:public	signature:(DataRefImpl Symb) const
getSymbolFlags	MachO.h	/^  uint32_t getSymbolFlags(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:uint32_t	access:public	signature:(DataRefImpl Symb) const
getSymbolFlags	ModuleSummaryIndexObjectFile.h	/^  uint32_t getSymbolFlags(DataRefImpl Symb) const override {$/;"	kind:f	class:llvm::object::ModuleSummaryIndexObjectFile	typeref:typename:uint32_t	access:public	signature:(DataRefImpl Symb) const
getSymbolFlags	SymbolicFile.h	/^  virtual uint32_t getSymbolFlags(DataRefImpl Symb) const = 0;$/;"	kind:p	class:llvm::object::SymbolicFile	typeref:typename:uint32_t	access:public	signature:(DataRefImpl Symb) const
getSymbolGV	IRObjectFile.h	/^  GlobalValue *getSymbolGV(DataRefImpl Symb);$/;"	kind:p	class:llvm::object::IRObjectFile	typeref:typename:GlobalValue *	access:public	signature:(DataRefImpl Symb)
getSymbolGV	IRObjectFile.h	/^  const GlobalValue *getSymbolGV(DataRefImpl Symb) const {$/;"	kind:f	class:llvm::object::IRObjectFile	typeref:typename:const GlobalValue *	access:public	signature:(DataRefImpl Symb) const
getSymbolIndex	MachO.h	/^  uint64_t getSymbolIndex(DataRefImpl Symb) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:uint64_t	access:public	signature:(DataRefImpl Symb) const
getSymbolName	COFF.h	/^  Expected<StringRef> getSymbolName(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:Expected<StringRef>	access:protected	signature:(DataRefImpl Symb) const
getSymbolName	COFF.h	/^  std::error_code getSymbolName(COFFSymbolRef Symbol, StringRef &Res) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:public	signature:(COFFSymbolRef Symbol,StringRef & Res) const
getSymbolName	COFF.h	/^  std::error_code getSymbolName(StringRef &Result) const;$/;"	kind:p	class:llvm::object::ExportDirectoryEntryRef	typeref:typename:std::error_code	access:public	signature:(StringRef & Result) const
getSymbolName	COFF.h	/^  std::error_code getSymbolName(StringRef &Result) const;$/;"	kind:p	class:llvm::object::ImportedSymbolRef	typeref:typename:std::error_code	access:public	signature:(StringRef & Result) const
getSymbolName	COFF.h	/^  std::error_code getSymbolName(const coff_symbol_generic *Symbol,$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:public	signature:(const coff_symbol_generic * Symbol,StringRef & Res) const
getSymbolName	ELFObjectFile.h	/^  Expected<StringRef> getSymbolName(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:Expected<StringRef>	access:protected	signature:(DataRefImpl Symb) const
getSymbolName	ELFObjectFile.h	/^Expected<StringRef> ELFObjectFile<ELFT>::getSymbolName(DataRefImpl Sym) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:Expected<StringRef>	signature:(DataRefImpl Sym) const
getSymbolName	MachO.h	/^  Expected<StringRef> getSymbolName(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:Expected<StringRef>	access:public	signature:(DataRefImpl Symb) const
getSymbolName	ObjectFile.h	/^  virtual Expected<StringRef> getSymbolName(DataRefImpl Symb) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:Expected<StringRef>	access:protected	signature:(DataRefImpl Symb) const
getSymbolOther	ELFObjectFile.h	/^  uint8_t getSymbolOther(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:uint8_t	access:protected	signature:(DataRefImpl Symb) const
getSymbolOther	ELFObjectFile.h	/^  virtual uint8_t getSymbolOther(DataRefImpl Symb) const = 0;$/;"	kind:p	class:llvm::object::ELFObjectFileBase	typeref:typename:uint8_t	access:protected	signature:(DataRefImpl Symb) const
getSymbolOther	ELFObjectFile.h	/^uint8_t ELFObjectFile<ELFT>::getSymbolOther(DataRefImpl Symb) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:uint8_t	signature:(DataRefImpl Symb) const
getSymbolSection	COFF.h	/^  Expected<section_iterator> getSymbolSection(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:Expected<section_iterator>	access:protected	signature:(DataRefImpl Symb) const
getSymbolSection	ELFObjectFile.h	/^  Expected<section_iterator> getSymbolSection(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:Expected<section_iterator>	access:protected	signature:(DataRefImpl Symb) const
getSymbolSection	ELFObjectFile.h	/^  Expected<section_iterator> getSymbolSection(const Elf_Sym *Symb,$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:Expected<section_iterator>	access:protected	signature:(const Elf_Sym * Symb,const Elf_Shdr * SymTab) const
getSymbolSection	ELFObjectFile.h	/^ELFObjectFile<ELFT>::getSymbolSection(DataRefImpl Symb) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:Expected<section_iterator>	signature:(DataRefImpl Symb) const
getSymbolSection	ELFObjectFile.h	/^ELFObjectFile<ELFT>::getSymbolSection(const Elf_Sym *ESym,$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:Expected<section_iterator>	signature:(const Elf_Sym * ESym,const Elf_Shdr * SymTab) const
getSymbolSection	MachO.h	/^  Expected<section_iterator> getSymbolSection(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:Expected<section_iterator>	access:public	signature:(DataRefImpl Symb) const
getSymbolSection	ObjectFile.h	/^  getSymbolSection(DataRefImpl Symb) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:Expected<section_iterator>	access:protected	signature:(DataRefImpl Symb) const
getSymbolSectionID	COFF.h	/^  unsigned getSymbolSectionID(SymbolRef Sym) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:unsigned	access:public	signature:(SymbolRef Sym) const
getSymbolSectionID	MachO.h	/^  unsigned getSymbolSectionID(SymbolRef Symb) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:unsigned	access:public	signature:(SymbolRef Symb) const
getSymbolSize	ELFObjectFile.h	/^  uint64_t getSymbolSize(DataRefImpl Sym) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	access:private	signature:(DataRefImpl Sym) const
getSymbolSize	ELFObjectFile.h	/^  virtual uint64_t getSymbolSize(DataRefImpl Symb) const = 0;$/;"	kind:p	class:llvm::object::ELFObjectFileBase	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Symb) const
getSymbolSize	ELFObjectFile.h	/^uint64_t ELFObjectFile<ELFT>::getSymbolSize(DataRefImpl Sym) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	signature:(DataRefImpl Sym) const
getSymbolTable	Archive.h	/^  StringRef getSymbolTable() const { return SymbolTable; }$/;"	kind:f	class:llvm::object::Archive	typeref:typename:StringRef	access:public	signature:() const
getSymbolTable	COFF.h	/^  uintptr_t getSymbolTable() const {$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:uintptr_t	access:public	signature:() const
getSymbolTableEntry	MachO.h	/^  MachO::nlist getSymbolTableEntry(DataRefImpl DRI) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::nlist	access:public	signature:(DataRefImpl DRI) const
getSymbolTableEntrySize	COFF.h	/^  size_t getSymbolTableEntrySize() const {$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:size_t	access:public	signature:() const
getSymbolType	COFF.h	/^  Expected<SymbolRef::Type> getSymbolType(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:Expected<SymbolRef::Type>	access:protected	signature:(DataRefImpl Symb) const
getSymbolType	ELFObjectFile.h	/^  Expected<SymbolRef::Type> getSymbolType(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:Expected<SymbolRef::Type>	access:protected	signature:(DataRefImpl Symb) const
getSymbolType	ELFObjectFile.h	/^ELFObjectFile<ELFT>::getSymbolType(DataRefImpl Symb) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:Expected<SymbolRef::Type>	signature:(DataRefImpl Symb) const
getSymbolType	MachO.h	/^  Expected<SymbolRef::Type> getSymbolType(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:Expected<SymbolRef::Type>	access:public	signature:(DataRefImpl Symb) const
getSymbolType	ObjectFile.h	/^  virtual Expected<SymbolRef::Type> getSymbolType(DataRefImpl Symb) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:Expected<SymbolRef::Type>	access:protected	signature:(DataRefImpl Symb) const
getSymbolValue	ObjectFile.h	/^  uint64_t getSymbolValue(DataRefImpl Symb) const;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Symb) const
getSymbolValueImpl	COFF.h	/^  uint64_t getSymbolValueImpl(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Symb) const
getSymbolValueImpl	ELFObjectFile.h	/^  uint64_t getSymbolValueImpl(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Symb) const
getSymbolValueImpl	ELFObjectFile.h	/^uint64_t ELFObjectFile<ELFT>::getSymbolValueImpl(DataRefImpl Symb) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	signature:(DataRefImpl Symb) const
getSymbolValueImpl	MachO.h	/^  uint64_t getSymbolValueImpl(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:uint64_t	access:private	signature:(DataRefImpl Symb) const
getSymbolValueImpl	ObjectFile.h	/^  virtual uint64_t getSymbolValueImpl(DataRefImpl Symb) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Symb) const
getSymtabLoadCommand	MachO.h	/^  MachO::symtab_command getSymtabLoadCommand() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::symtab_command	access:public	signature:() const
getTag	ELFTypes.h	/^  intX_t getTag() const { return d_tag; }$/;"	kind:f	struct:llvm::object::Elf_Dyn_Impl	typeref:typename:intX_t	access:public	signature:() const
getTargetTriple	IRObjectFile.h	/^  StringRef getTargetTriple() const;$/;"	kind:p	class:llvm::object::IRObjectFile	typeref:typename:StringRef	access:public	signature:() const
getThreadCommand	MachO.h	/^  getThreadCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::thread_command	access:public	signature:(const LoadCommandInfo & L) const
getTimeDateStamp	COFF.h	/^  uint32_t getTimeDateStamp() const {$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:uint32_t	access:public	signature:() const
getType	Binary.h	/^  unsigned int getType() const { return TypeID; }$/;"	kind:f	class:llvm::object::Binary	typeref:typename:unsigned int	access:public	signature:() const
getType	COFF.h	/^  int getType() const { return Data >> 12; }$/;"	kind:f	struct:llvm::object::coff_base_reloc_block_entry	typeref:typename:int	access:public	signature:() const
getType	COFF.h	/^  int getType() const { return TypeInfo & 0x3; }$/;"	kind:f	struct:llvm::object::coff_import_header	typeref:typename:int	access:public	signature:() const
getType	COFF.h	/^  std::error_code getType(uint8_t &Type) const;$/;"	kind:p	class:llvm::object::BaseRelocRef	typeref:typename:std::error_code	access:public	signature:(uint8_t & Type) const
getType	COFF.h	/^  uint16_t getType() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:uint16_t	access:public	signature:() const
getType	ELFObjectFile.h	/^  uint32_t getType() const {$/;"	kind:f	class:llvm::object::ELFSectionRef	typeref:typename:uint32_t	access:public	signature:() const
getType	ELFTypes.h	/^  uint32_t getType(bool isMips64EL) const {$/;"	kind:f	struct:llvm::object::Elf_Rel_Impl	typeref:typename:uint32_t	access:public	signature:(bool isMips64EL) const
getType	ELFTypes.h	/^  unsigned char getType() const { return st_info & 0x0f; }$/;"	kind:f	struct:llvm::object::Elf_Sym_Impl	typeref:typename:unsigned char	access:public	signature:() const
getType	ELFTypes.h	/^  unsigned char getType(bool isMips64EL) const {$/;"	kind:f	struct:llvm::object::Elf_Rel_Impl	typeref:typename:unsigned char	access:public	signature:(bool isMips64EL) const
getType	ObjectFile.h	/^  Expected<SymbolRef::Type> getType() const;$/;"	kind:p	class:llvm::object::SymbolRef	typeref:typename:Expected<SymbolRef::Type>	access:public	signature:() const
getType	ObjectFile.h	/^  uint64_t getType() const;$/;"	kind:p	class:llvm::object::RelocationRef	typeref:typename:uint64_t	access:public	signature:() const
getType	ObjectFile.h	/^inline Expected<SymbolRef::Type> SymbolRef::getType() const {$/;"	kind:f	class:llvm::object::SymbolRef	typeref:typename:Expected<SymbolRef::Type>	signature:() const
getType	ObjectFile.h	/^inline uint64_t RelocationRef::getType() const {$/;"	kind:f	class:llvm::object::RelocationRef	typeref:typename:uint64_t	signature:() const
getTypeName	ObjectFile.h	/^  void getTypeName(SmallVectorImpl<char> &Result) const;$/;"	kind:p	class:llvm::object::RelocationRef	typeref:typename:void	access:public	signature:(SmallVectorImpl<char> & Result) const
getTypeName	ObjectFile.h	/^inline void RelocationRef::getTypeName(SmallVectorImpl<char> &Result) const {$/;"	kind:f	class:llvm::object::RelocationRef	typeref:typename:void	signature:(SmallVectorImpl<char> & Result) const
getUID	Archive.h	/^    Expected<unsigned> getUID() const { return Header.getUID(); }$/;"	kind:f	class:llvm::object::Archive::Child	typeref:typename:Expected<unsigned>	access:public	signature:() const
getUID	Archive.h	/^  Expected<unsigned> getUID() const;$/;"	kind:p	class:llvm::object::ArchiveMemberHeader	typeref:typename:Expected<unsigned>	access:public	signature:() const
getUuid	MachO.h	/^  ArrayRef<uint8_t> getUuid() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:ArrayRef<uint8_t>	access:public	signature:() const
getUuidCommand	MachO.h	/^  getUuidCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::uuid_command	access:public	signature:(const LoadCommandInfo & L) const
getVaPtr	COFF.h	/^  std::error_code getVaPtr(uint64_t VA, uintptr_t &Res) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:public	signature:(uint64_t VA,uintptr_t & Res) const
getVal	ELFTypes.h	/^  uintX_t getVal() const { return d_un.d_val; }$/;"	kind:f	struct:llvm::object::Elf_Dyn_Impl	typeref:typename:uintX_t	access:public	signature:() const
getValue	COFF.h	/^  uint32_t getValue() const { return CS16 ? CS16->Value : CS32->Value; }$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:uint32_t	access:public	signature:() const
getValue	ELFTypes.h	/^  uint64_t getValue() const { return st_value; }$/;"	kind:f	struct:llvm::object::Elf_Sym_Impl	typeref:typename:uint64_t	access:public	signature:() const
getValue	ObjectFile.h	/^  uint64_t getValue() const;$/;"	kind:p	class:llvm::object::SymbolRef	typeref:typename:uint64_t	access:public	signature:() const
getValue	ObjectFile.h	/^inline uint64_t SymbolRef::getValue() const {$/;"	kind:f	class:llvm::object::SymbolRef	typeref:typename:uint64_t	signature:() const
getValue	StackMapParser.h	/^    uint64_t getValue() const { return read<uint64_t>(P); }$/;"	kind:f	class:llvm::StackMapV2Parser::ConstantAccessor	typeref:typename:uint64_t	access:public	signature:() const
getVersion	StackMapParser.h	/^  unsigned getVersion() const { return 2; }$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:unsigned	access:public	signature:() const
getVersionMinLoadCommand	MachO.h	/^  getVersionMinLoadCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::version_min_command	access:public	signature:(const LoadCommandInfo & L) const
getVersionMinMajor	MachO.h	/^  getVersionMinMajor(MachO::version_min_command &C, bool SDK) {$/;"	kind:f	class:llvm::object::MachOObjectFile	typeref:typename:uint32_t	access:public	signature:(MachO::version_min_command & C,bool SDK)
getVersionMinMinor	MachO.h	/^  getVersionMinMinor(MachO::version_min_command &C, bool SDK) {$/;"	kind:f	class:llvm::object::MachOObjectFile	typeref:typename:uint32_t	access:public	signature:(MachO::version_min_command & C,bool SDK)
getVersionMinUpdate	MachO.h	/^  getVersionMinUpdate(MachO::version_min_command &C, bool SDK) {$/;"	kind:f	class:llvm::object::MachOObjectFile	typeref:typename:uint32_t	access:public	signature:(MachO::version_min_command & C,bool SDK)
getVisibility	ELFTypes.h	/^  unsigned char getVisibility() const { return st_other & 0x3; }$/;"	kind:f	struct:llvm::object::Elf_Sym_Impl	typeref:typename:unsigned char	access:public	signature:() const
gpr_size	ELFTypes.h	/^  uint8_t gpr_size;  \/\/ General purpose registers size$/;"	kind:m	struct:llvm::object::Elf_Mips_ABIFlags	typeref:typename:uint8_t	access:public
guessLibraryShortName	MachO.h	/^  static StringRef guessLibraryShortName(StringRef Name, bool &isFramework,$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:StringRef	access:public	signature:(StringRef Name,bool & isFramework,StringRef & Suffix)
hasExtendedRelocations	COFF.h	/^  bool hasExtendedRelocations() const {$/;"	kind:f	struct:llvm::object::coff_section	typeref:typename:bool	access:public	signature:() const
hasPageZeroSegment	MachO.h	/^  bool hasPageZeroSegment() const { return HasPageZeroSegment; }$/;"	kind:f	class:llvm::object::MachOObjectFile	typeref:typename:bool	access:public	signature:() const
hasSEH	COFF.h	/^  bool hasSEH() const { return (Attributes >> 9) & 1; }$/;"	kind:f	struct:llvm::object::FpoData	typeref:typename:bool	access:public	signature:() const
hasSymbolTable	Archive.h	/^  bool hasSymbolTable() const;$/;"	kind:p	class:llvm::object::Archive	typeref:typename:bool	access:public	signature:() const
hashSysV	ELF.h	/^inline unsigned hashSysV(StringRef SymbolName) {$/;"	kind:f	namespace:llvm::object	typeref:typename:unsigned	signature:(StringRef SymbolName)
import_directories	COFF.h	/^  iterator_range<import_directory_iterator> import_directories() const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:iterator_range<import_directory_iterator>	access:public	signature:() const
import_directory_begin	COFF.h	/^  import_directory_iterator import_directory_begin() const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:import_directory_iterator	access:public	signature:() const
import_directory_end	COFF.h	/^  import_directory_iterator import_directory_end() const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:import_directory_iterator	access:public	signature:() const
import_directory_iterator	COFF.h	/^typedef content_iterator<ImportDirectoryEntryRef> import_directory_iterator;$/;"	kind:t	namespace:llvm::object	typeref:typename:content_iterator<ImportDirectoryEntryRef>
import_lookup_table_entry	COFF.h	/^struct import_lookup_table_entry {$/;"	kind:s	namespace:llvm::object
import_lookup_table_entry32	COFF.h	/^    import_lookup_table_entry32;$/;"	kind:t	namespace:llvm::object	typeref:typename:import_lookup_table_entry<support::little32_t>
import_lookup_table_entry64	COFF.h	/^    import_lookup_table_entry64;$/;"	kind:t	namespace:llvm::object	typeref:typename:import_lookup_table_entry<support::little64_t>
imported_symbol_begin	COFF.h	/^  imported_symbol_iterator imported_symbol_begin() const;$/;"	kind:p	class:llvm::object::DelayImportDirectoryEntryRef	typeref:typename:imported_symbol_iterator	access:public	signature:() const
imported_symbol_begin	COFF.h	/^  imported_symbol_iterator imported_symbol_begin() const;$/;"	kind:p	class:llvm::object::ImportDirectoryEntryRef	typeref:typename:imported_symbol_iterator	access:public	signature:() const
imported_symbol_end	COFF.h	/^  imported_symbol_iterator imported_symbol_end() const;$/;"	kind:p	class:llvm::object::DelayImportDirectoryEntryRef	typeref:typename:imported_symbol_iterator	access:public	signature:() const
imported_symbol_end	COFF.h	/^  imported_symbol_iterator imported_symbol_end() const;$/;"	kind:p	class:llvm::object::ImportDirectoryEntryRef	typeref:typename:imported_symbol_iterator	access:public	signature:() const
imported_symbol_iterator	COFF.h	/^typedef content_iterator<ImportedSymbolRef> imported_symbol_iterator;$/;"	kind:t	namespace:llvm::object	typeref:typename:content_iterator<ImportedSymbolRef>
imported_symbols	COFF.h	/^  iterator_range<imported_symbol_iterator> imported_symbols() const;$/;"	kind:p	class:llvm::object::DelayImportDirectoryEntryRef	typeref:typename:iterator_range<imported_symbol_iterator>	access:public	signature:() const
imported_symbols	COFF.h	/^  iterator_range<imported_symbol_iterator> imported_symbols() const;$/;"	kind:p	class:llvm::object::ImportDirectoryEntryRef	typeref:typename:iterator_range<imported_symbol_iterator>	access:public	signature:() const
info	ELFTypes.h	/^  Elf_Word info;    \/\/ Kind-specific information$/;"	kind:m	struct:llvm::object::Elf_Mips_Options	typeref:typename:Elf_Word	access:public
initBaseRelocPtr	COFF.h	/^  std::error_code initBaseRelocPtr();$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:private	signature:()
initDebugDirectoryPtr	COFF.h	/^  std::error_code initDebugDirectoryPtr();$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:private	signature:()
initDelayImportTablePtr	COFF.h	/^  std::error_code initDelayImportTablePtr();$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:private	signature:()
initExportTablePtr	COFF.h	/^  std::error_code initExportTablePtr();$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:private	signature:()
initImportTablePtr	COFF.h	/^  std::error_code initImportTablePtr();$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:private	signature:()
initSymbolTablePtr	COFF.h	/^  std::error_code initSymbolTablePtr();$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:private	signature:()
intX_t	ELFTypes.h	/^                                    int64_t, int32_t>::type intX_t;$/;"	kind:t	struct:llvm::object::Elf_Dyn_Impl	typeref:typename:std::conditional<ELFT::Is64Bits,int64_t,int32_t>::type	access:public
invalid_file_type	Error.h	/^  invalid_file_type,$/;"	kind:e	enum:llvm::object::object_error	access:public
invalid_section_index	Error.h	/^  invalid_section_index,$/;"	kind:e	enum:llvm::object::object_error	access:public
invalid_symbol_index	Error.h	/^  invalid_symbol_index,$/;"	kind:e	enum:llvm::object::object_error	access:public
is64	COFF.h	/^  bool is64() const { return PE32PlusHeader; }$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:bool	access:public	signature:() const
is64Bit	MachO.h	/^  bool is64Bit() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:bool	access:public	signature:() const
isAbsolute	COFF.h	/^  bool isAbsolute() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:bool	access:public	signature:() const
isAbsolute	ELFTypes.h	/^  bool isAbsolute() const { return st_shndx == ELF::SHN_ABS; }$/;"	kind:f	struct:llvm::object::Elf_Sym_Impl	typeref:typename:bool	access:public	signature:() const
isAnyUndefined	COFF.h	/^  bool isAnyUndefined() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:bool	access:public	signature:() const
isArchive	Binary.h	/^  bool isArchive() const {$/;"	kind:f	class:llvm::object::Binary	typeref:typename:bool	access:public	signature:() const
isBSS	ObjectFile.h	/^  bool isBSS() const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:bool	access:public	signature:() const
isBSS	ObjectFile.h	/^inline bool SectionRef::isBSS() const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:bool	signature:() const
isBigObj	COFF.h	/^  bool isBigObj() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:bool	access:public	signature:() const
isBitcode	ObjectFile.h	/^  bool isBitcode() const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:bool	access:public	signature:() const
isBitcode	ObjectFile.h	/^inline bool SectionRef::isBitcode() const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:bool	signature:() const
isCLRToken	COFF.h	/^  bool isCLRToken() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:bool	access:public	signature:() const
isCOFF	Binary.h	/^  bool isCOFF() const {$/;"	kind:f	class:llvm::object::Binary	typeref:typename:bool	access:public	signature:() const
isCOFFImportFile	Binary.h	/^  bool isCOFFImportFile() const {$/;"	kind:f	class:llvm::object::Binary	typeref:typename:bool	access:public	signature:() const
isCode	COFFImportFile.h	/^  bool isCode() const {$/;"	kind:f	class:llvm::object::COFFImportFile	typeref:typename:bool	access:private	signature:() const
isCommon	COFF.h	/^  bool isCommon() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:bool	access:public	signature:() const
isCommon	ELFTypes.h	/^  bool isCommon() const {$/;"	kind:f	struct:llvm::object::Elf_Sym_Impl	typeref:typename:bool	access:public	signature:() const
isCompressed	ObjectFile.h	/^  bool isCompressed() const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:bool	access:public	signature:() const
isCompressed	ObjectFile.h	/^inline bool SectionRef::isCompressed() const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:bool	signature:() const
isData	ObjectFile.h	/^  bool isData() const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:bool	access:public	signature:() const
isData	ObjectFile.h	/^inline bool SectionRef::isData() const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:bool	signature:() const
isDefined	ELFTypes.h	/^  bool isDefined() const { return !isUndefined(); }$/;"	kind:f	struct:llvm::object::Elf_Sym_Impl	typeref:typename:bool	access:public	signature:() const
isDyldELFObject	ELFObjectFile.h	/^  bool isDyldELFObject;$/;"	kind:m	class:llvm::object::ELFObjectFile	typeref:typename:bool	access:protected
isDyldType	ELFObjectFile.h	/^  bool isDyldType() const { return isDyldELFObject; }$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:bool	access:public	signature:() const
isELF	Binary.h	/^  bool isELF() const {$/;"	kind:f	class:llvm::object::Binary	typeref:typename:bool	access:public	signature:() const
isEmpty	Archive.h	/^  bool isEmpty() const;$/;"	kind:p	class:llvm::object::Archive	typeref:typename:bool	access:public	signature:() const
isExportedToOtherDSO	ELFObjectFile.h	/^  bool isExportedToOtherDSO(const Elf_Sym *ESym) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:bool	access:protected	signature:(const Elf_Sym * ESym) const
isExternal	COFF.h	/^  bool isExternal() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:bool	access:public	signature:() const
isExternal	ELFTypes.h	/^  bool isExternal() const {$/;"	kind:f	struct:llvm::object::Elf_Sym_Impl	typeref:typename:bool	access:public	signature:() const
isFileRecord	COFF.h	/^  bool isFileRecord() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:bool	access:public	signature:() const
isForwarder	COFF.h	/^  std::error_code isForwarder(bool &Result) const;$/;"	kind:p	class:llvm::object::ExportDirectoryEntryRef	typeref:typename:std::error_code	access:public	signature:(bool & Result) const
isFunctionDefinition	COFF.h	/^  bool isFunctionDefinition() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:bool	access:public	signature:() const
isFunctionLineInfo	COFF.h	/^  bool isFunctionLineInfo() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:bool	access:public	signature:() const
isIR	Binary.h	/^  bool isIR() const {$/;"	kind:f	class:llvm::object::Binary	typeref:typename:bool	access:public	signature:() const
isImportLibrary	COFF.h	/^  bool isImportLibrary() const { return NumberOfSections == 0xffff; }$/;"	kind:f	struct:llvm::object::coff_file_header	typeref:typename:bool	access:public	signature:() const
isLittleEndian	Binary.h	/^  bool isLittleEndian() const {$/;"	kind:f	class:llvm::object::Binary	typeref:typename:bool	access:public	signature:() const
isMachO	Binary.h	/^  bool isMachO() const {$/;"	kind:f	class:llvm::object::Binary	typeref:typename:bool	access:public	signature:() const
isMachOUniversalBinary	Binary.h	/^  bool isMachOUniversalBinary() const {$/;"	kind:f	class:llvm::object::Binary	typeref:typename:bool	access:public	signature:() const
isMips64EL	ELF.h	/^  bool isMips64EL() const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:bool	access:public	signature:() const
isMipsELF64	ELF.h	/^  bool isMipsELF64() const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:bool	access:public	signature:() const
isModuleSummaryIndex	Binary.h	/^  bool isModuleSummaryIndex() const { return TypeID == ID_ModuleSummaryIndex; }$/;"	kind:f	class:llvm::object::Binary	typeref:typename:bool	access:public	signature:() const
isNotObjectErrorInvalidFileType	Error.h	/^Error isNotObjectErrorInvalidFileType(llvm::Error Err);$/;"	kind:p	namespace:llvm::object	typeref:typename:Error	signature:(llvm::Error Err)
isNull	COFF.h	/^  bool isNull() const {$/;"	kind:f	struct:llvm::object::coff_import_directory_table_entry	typeref:typename:bool	access:public	signature:() const
isOSSpecific	ELFTypes.h	/^  bool isOSSpecific() const {$/;"	kind:f	struct:llvm::object::Elf_Sym_Impl	typeref:typename:bool	access:public	signature:() const
isObject	Binary.h	/^  bool isObject() const {$/;"	kind:f	class:llvm::object::Binary	typeref:typename:bool	access:public	signature:() const
isOrdinal	COFF.h	/^  bool isOrdinal() const { return Data < 0; }$/;"	kind:f	struct:llvm::object::import_lookup_table_entry	typeref:typename:bool	access:public	signature:() const
isOrdinal	COFF.h	/^  std::error_code isOrdinal(bool &Result) const;$/;"	kind:p	class:llvm::object::ImportedSymbolRef	typeref:typename:std::error_code	access:public	signature:(bool & Result) const
isProcessorSpecific	ELFTypes.h	/^  bool isProcessorSpecific() const {$/;"	kind:f	struct:llvm::object::Elf_Sym_Impl	typeref:typename:bool	access:public	signature:() const
isRelocatableObject	COFF.h	/^  bool isRelocatableObject() const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:bool	access:public	signature:() const
isRelocatableObject	ELFObjectFile.h	/^  bool isRelocatableObject() const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:bool	access:public	signature:() const
isRelocatableObject	ELFObjectFile.h	/^template <class ELFT> bool ELFObjectFile<ELFT>::isRelocatableObject() const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:bool	signature:() const
isRelocatableObject	MachO.h	/^  bool isRelocatableObject() const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:bool	access:public	signature:() const
isRelocatableObject	ObjectFile.h	/^  virtual bool isRelocatableObject() const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:bool	access:public	signature:() const
isRelocationScattered	MachO.h	/^  bool isRelocationScattered(const MachO::any_relocation_info &RE) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:bool	access:public	signature:(const MachO::any_relocation_info & RE) const
isReserved	ELFTypes.h	/^  bool isReserved() const {$/;"	kind:f	struct:llvm::object::Elf_Sym_Impl	typeref:typename:bool	access:public	signature:() const
isSection	COFF.h	/^  bool isSection() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:bool	access:public	signature:() const
isSectionBSS	COFF.h	/^  bool isSectionBSS(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:bool	access:protected	signature:(DataRefImpl Sec) const
isSectionBSS	ELFObjectFile.h	/^  bool isSectionBSS(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:bool	access:protected	signature:(DataRefImpl Sec) const
isSectionBSS	ELFObjectFile.h	/^bool ELFObjectFile<ELFT>::isSectionBSS(DataRefImpl Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:bool	signature:(DataRefImpl Sec) const
isSectionBSS	MachO.h	/^  bool isSectionBSS(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:bool	access:public	signature:(DataRefImpl Sec) const
isSectionBSS	ObjectFile.h	/^  virtual bool isSectionBSS(DataRefImpl Sec) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:bool	access:protected	signature:(DataRefImpl Sec) const
isSectionBitcode	MachO.h	/^  bool isSectionBitcode(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:bool	access:public	signature:(DataRefImpl Sec) const
isSectionBitcode	ObjectFile.h	/^  virtual bool isSectionBitcode(DataRefImpl Sec) const;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:bool	access:protected	signature:(DataRefImpl Sec) const
isSectionCompressed	COFF.h	/^  bool isSectionCompressed(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:bool	access:protected	signature:(DataRefImpl Sec) const
isSectionCompressed	ELFObjectFile.h	/^  bool isSectionCompressed(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:bool	access:protected	signature:(DataRefImpl Sec) const
isSectionCompressed	ELFObjectFile.h	/^bool ELFObjectFile<ELFT>::isSectionCompressed(DataRefImpl Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:bool	signature:(DataRefImpl Sec) const
isSectionCompressed	MachO.h	/^  bool isSectionCompressed(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:bool	access:public	signature:(DataRefImpl Sec) const
isSectionCompressed	ObjectFile.h	/^  virtual bool isSectionCompressed(DataRefImpl Sec) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:bool	access:protected	signature:(DataRefImpl Sec) const
isSectionData	COFF.h	/^  bool isSectionData(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:bool	access:protected	signature:(DataRefImpl Sec) const
isSectionData	ELFObjectFile.h	/^  bool isSectionData(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:bool	access:protected	signature:(DataRefImpl Sec) const
isSectionData	ELFObjectFile.h	/^bool ELFObjectFile<ELFT>::isSectionData(DataRefImpl Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:bool	signature:(DataRefImpl Sec) const
isSectionData	MachO.h	/^  bool isSectionData(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:bool	access:public	signature:(DataRefImpl Sec) const
isSectionData	ObjectFile.h	/^  virtual bool isSectionData(DataRefImpl Sec) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:bool	access:protected	signature:(DataRefImpl Sec) const
isSectionDefinition	COFF.h	/^  bool isSectionDefinition() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:bool	access:public	signature:() const
isSectionText	COFF.h	/^  bool isSectionText(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:bool	access:protected	signature:(DataRefImpl Sec) const
isSectionText	ELFObjectFile.h	/^  bool isSectionText(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:bool	access:protected	signature:(DataRefImpl Sec) const
isSectionText	ELFObjectFile.h	/^bool ELFObjectFile<ELFT>::isSectionText(DataRefImpl Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:bool	signature:(DataRefImpl Sec) const
isSectionText	MachO.h	/^  bool isSectionText(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:bool	access:public	signature:(DataRefImpl Sec) const
isSectionText	ObjectFile.h	/^  virtual bool isSectionText(DataRefImpl Sec) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:bool	access:protected	signature:(DataRefImpl Sec) const
isSectionVirtual	COFF.h	/^  bool isSectionVirtual(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:bool	access:protected	signature:(DataRefImpl Sec) const
isSectionVirtual	ELFObjectFile.h	/^  bool isSectionVirtual(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:bool	access:protected	signature:(DataRefImpl Sec) const
isSectionVirtual	ELFObjectFile.h	/^bool ELFObjectFile<ELFT>::isSectionVirtual(DataRefImpl Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:bool	signature:(DataRefImpl Sec) const
isSectionVirtual	MachO.h	/^  bool isSectionVirtual(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:bool	access:public	signature:(DataRefImpl Sec) const
isSectionVirtual	ObjectFile.h	/^  virtual bool isSectionVirtual(DataRefImpl Sec) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:bool	access:protected	signature:(DataRefImpl Sec) const
isSet	COFF.h	/^  bool isSet() const { return CS16 || CS32; }$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:bool	access:private	signature:() const
isSymbolic	Binary.h	/^  bool isSymbolic() const {$/;"	kind:f	class:llvm::object::Binary	typeref:typename:bool	access:public	signature:() const
isText	ObjectFile.h	/^  bool isText() const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:bool	access:public	signature:() const
isText	ObjectFile.h	/^inline bool SectionRef::isText() const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:bool	signature:() const
isThin	Archive.h	/^  bool isThin() const { return IsThin; }$/;"	kind:f	class:llvm::object::Archive	typeref:typename:bool	access:public	signature:() const
isThinMember	Archive.h	/^    Expected<bool> isThinMember() const;$/;"	kind:p	class:llvm::object::Archive::Child	typeref:typename:Expected<bool>	access:private	signature:() const
isUndefined	COFF.h	/^  bool isUndefined() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:bool	access:public	signature:() const
isUndefined	ELFTypes.h	/^  bool isUndefined() const { return st_shndx == ELF::SHN_UNDEF; }$/;"	kind:f	struct:llvm::object::Elf_Sym_Impl	typeref:typename:bool	access:public	signature:() const
isValidArch	MachO.h	/^  static bool isValidArch(StringRef ArchFlag);$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:bool	access:public	signature:(StringRef ArchFlag)
isVirtual	ObjectFile.h	/^  bool isVirtual() const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:bool	access:public	signature:() const
isVirtual	ObjectFile.h	/^inline bool SectionRef::isVirtual() const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:bool	signature:() const
isWeakExternal	COFF.h	/^  bool isWeakExternal() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:bool	access:public	signature:() const
is_error_code_enum	Error.h	/^struct is_error_code_enum<llvm::object::object_error> : std::true_type {};$/;"	kind:s	namespace:std	inherits:std::true_type
isa_ext	ELFTypes.h	/^  Elf_Word isa_ext;  \/\/ Processor-specific extension$/;"	kind:m	struct:llvm::object::Elf_Mips_ABIFlags	typeref:typename:Elf_Word	access:public
isa_level	ELFTypes.h	/^  uint8_t isa_level; \/\/ ISA level: 1-5, 32, and 64$/;"	kind:m	struct:llvm::object::Elf_Mips_ABIFlags	typeref:typename:uint8_t	access:public
isa_rev	ELFTypes.h	/^  uint8_t isa_rev;   \/\/ ISA revision (0 for MIPS I - MIPS V)$/;"	kind:m	struct:llvm::object::Elf_Mips_ABIFlags	typeref:typename:uint8_t	access:public
kind	Archive.h	/^  Kind kind() const { return (Kind)Format; }$/;"	kind:f	class:llvm::object::Archive	typeref:typename:Kind	access:public	signature:() const
lazyBindTable	MachO.h	/^  iterator_range<bind_iterator> lazyBindTable() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:iterator_range<bind_iterator>	access:public	signature:() const
liveout_iterator	StackMapParser.h	/^    typedef AccessorIterator<LiveOutAccessor> liveout_iterator;$/;"	kind:t	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:AccessorIterator<LiveOutAccessor>	access:public
liveouts	StackMapParser.h	/^    iterator_range<liveout_iterator> liveouts() const {$/;"	kind:f	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:iterator_range<liveout_iterator>	access:public	signature:() const
liveouts_begin	StackMapParser.h	/^    liveout_iterator liveouts_begin() const {$/;"	kind:f	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:liveout_iterator	access:public	signature:() const
liveouts_end	StackMapParser.h	/^    liveout_iterator liveouts_end() const {$/;"	kind:f	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:liveout_iterator	access:public	signature:() const
llvm	Archive.h	/^namespace llvm {$/;"	kind:n
llvm	ArchiveWriter.h	/^namespace llvm {$/;"	kind:n
llvm	Binary.h	/^namespace llvm {$/;"	kind:n
llvm	COFF.h	/^namespace llvm {$/;"	kind:n
llvm	COFFImportFile.h	/^namespace llvm {$/;"	kind:n
llvm	ELF.h	/^namespace llvm {$/;"	kind:n
llvm	ELFObjectFile.h	/^namespace llvm {$/;"	kind:n
llvm	ELFTypes.h	/^namespace llvm {$/;"	kind:n
llvm	Error.h	/^namespace llvm {$/;"	kind:n
llvm	IRObjectFile.h	/^namespace llvm {$/;"	kind:n
llvm	MachO.h	/^namespace llvm {$/;"	kind:n
llvm	MachOUniversal.h	/^namespace llvm {$/;"	kind:n
llvm	ModuleSummaryIndexObjectFile.h	/^namespace llvm {$/;"	kind:n
llvm	ObjectFile.h	/^namespace llvm {$/;"	kind:n
llvm	RelocVisitor.h	/^namespace llvm {$/;"	kind:n
llvm	StackMapParser.h	/^namespace llvm {$/;"	kind:n
llvm	SymbolSize.h	/^namespace llvm {$/;"	kind:n
llvm	SymbolicFile.h	/^namespace llvm {$/;"	kind:n
llvm::Constant	StackMapParser.h	/^    Register = 1, Direct = 2, Indirect = 3, Constant = 4, ConstantIndex = 5$/;"	kind:e	enum:llvm::StackMapV2Parser::LocationKind	access:public
llvm::ConstantIndex	StackMapParser.h	/^    Register = 1, Direct = 2, Indirect = 3, Constant = 4, ConstantIndex = 5$/;"	kind:e	enum:llvm::StackMapV2Parser::LocationKind	access:public
llvm::Direct	StackMapParser.h	/^    Register = 1, Direct = 2, Indirect = 3, Constant = 4, ConstantIndex = 5$/;"	kind:e	enum:llvm::StackMapV2Parser::LocationKind	access:public
llvm::ID_Archive	Binary.h	/^    ID_Archive,$/;"	kind:e	enum:llvm::object::Binary::__anonff0261800103	access:public
llvm::ID_COFF	Binary.h	/^    ID_COFF,$/;"	kind:e	enum:llvm::object::Binary::__anonff0261800103	access:public
llvm::ID_COFFImportFile	Binary.h	/^    ID_COFFImportFile,$/;"	kind:e	enum:llvm::object::Binary::__anonff0261800103	access:public
llvm::ID_ELF32B	Binary.h	/^    ID_ELF32B, \/\/ ELF 32-bit, big endian$/;"	kind:e	enum:llvm::object::Binary::__anonff0261800103	access:public
llvm::ID_ELF32L	Binary.h	/^    ID_ELF32L, \/\/ ELF 32-bit, little endian$/;"	kind:e	enum:llvm::object::Binary::__anonff0261800103	access:public
llvm::ID_ELF64B	Binary.h	/^    ID_ELF64B, \/\/ ELF 64-bit, big endian$/;"	kind:e	enum:llvm::object::Binary::__anonff0261800103	access:public
llvm::ID_ELF64L	Binary.h	/^    ID_ELF64L, \/\/ ELF 64-bit, little endian$/;"	kind:e	enum:llvm::object::Binary::__anonff0261800103	access:public
llvm::ID_EndObjects	Binary.h	/^    ID_EndObjects$/;"	kind:e	enum:llvm::object::Binary::__anonff0261800103	access:public
llvm::ID_IR	Binary.h	/^    ID_IR,                 \/\/ LLVM IR$/;"	kind:e	enum:llvm::object::Binary::__anonff0261800103	access:public
llvm::ID_MachO32B	Binary.h	/^    ID_MachO32B, \/\/ MachO 32-bit, big endian$/;"	kind:e	enum:llvm::object::Binary::__anonff0261800103	access:public
llvm::ID_MachO32L	Binary.h	/^    ID_MachO32L, \/\/ MachO 32-bit, little endian$/;"	kind:e	enum:llvm::object::Binary::__anonff0261800103	access:public
llvm::ID_MachO64B	Binary.h	/^    ID_MachO64B, \/\/ MachO 64-bit, big endian$/;"	kind:e	enum:llvm::object::Binary::__anonff0261800103	access:public
llvm::ID_MachO64L	Binary.h	/^    ID_MachO64L, \/\/ MachO 64-bit, little endian$/;"	kind:e	enum:llvm::object::Binary::__anonff0261800103	access:public
llvm::ID_MachOUniversalBinary	Binary.h	/^    ID_MachOUniversalBinary,$/;"	kind:e	enum:llvm::object::Binary::__anonff0261800103	access:public
llvm::ID_ModuleSummaryIndex	Binary.h	/^    ID_ModuleSummaryIndex, \/\/ Module summary index$/;"	kind:e	enum:llvm::object::Binary::__anonff0261800103	access:public
llvm::ID_StartObjects	Binary.h	/^    ID_StartObjects,$/;"	kind:e	enum:llvm::object::Binary::__anonff0261800103	access:public
llvm::Indirect	StackMapParser.h	/^    Register = 1, Direct = 2, Indirect = 3, Constant = 4, ConstantIndex = 5$/;"	kind:e	enum:llvm::StackMapV2Parser::LocationKind	access:public
llvm::K_BSD	Archive.h	/^    K_BSD,$/;"	kind:e	enum:llvm::object::Archive::Kind	access:public
llvm::K_COFF	Archive.h	/^    K_COFF$/;"	kind:e	enum:llvm::object::Archive::Kind	access:public
llvm::K_DARWIN64	Archive.h	/^    K_DARWIN64,$/;"	kind:e	enum:llvm::object::Archive::Kind	access:public
llvm::K_GNU	Archive.h	/^    K_GNU,$/;"	kind:e	enum:llvm::object::Archive::Kind	access:public
llvm::K_MIPS64	Archive.h	/^    K_MIPS64,$/;"	kind:e	enum:llvm::object::Archive::Kind	access:public
llvm::Lazy	MachO.h	/^  enum class Kind { Regular, Lazy, Weak };$/;"	kind:e	enum:llvm::object::MachOBindEntry::Kind	access:public
llvm::NewArchiveMember	ArchiveWriter.h	/^struct NewArchiveMember {$/;"	kind:s	namespace:llvm
llvm::NewArchiveMember::Buf	ArchiveWriter.h	/^  std::unique_ptr<MemoryBuffer> Buf;$/;"	kind:m	struct:llvm::NewArchiveMember	typeref:typename:std::unique_ptr<MemoryBuffer>	access:public
llvm::NewArchiveMember::GID	ArchiveWriter.h	/^  unsigned UID = 0, GID = 0, Perms = 0644;$/;"	kind:m	struct:llvm::NewArchiveMember	typeref:typename:unsigned	access:public
llvm::NewArchiveMember::ModTime	ArchiveWriter.h	/^  sys::TimePoint<std::chrono::seconds> ModTime;$/;"	kind:m	struct:llvm::NewArchiveMember	typeref:typename:sys::TimePoint<std::chrono::seconds>	access:public
llvm::NewArchiveMember::NewArchiveMember	ArchiveWriter.h	/^  NewArchiveMember() = default;$/;"	kind:p	struct:llvm::NewArchiveMember	access:public	signature:()
llvm::NewArchiveMember::NewArchiveMember	ArchiveWriter.h	/^  NewArchiveMember(MemoryBufferRef BufRef);$/;"	kind:p	struct:llvm::NewArchiveMember	access:public	signature:(MemoryBufferRef BufRef)
llvm::NewArchiveMember::Perms	ArchiveWriter.h	/^  unsigned UID = 0, GID = 0, Perms = 0644;$/;"	kind:m	struct:llvm::NewArchiveMember	typeref:typename:unsigned	access:public
llvm::NewArchiveMember::UID	ArchiveWriter.h	/^  unsigned UID = 0, GID = 0, Perms = 0644;$/;"	kind:m	struct:llvm::NewArchiveMember	typeref:typename:unsigned	access:public
llvm::NewArchiveMember::getFile	ArchiveWriter.h	/^  static Expected<NewArchiveMember> getFile(StringRef FileName,$/;"	kind:p	struct:llvm::NewArchiveMember	typeref:typename:Expected<NewArchiveMember>	access:public	signature:(StringRef FileName,bool Deterministic)
llvm::NewArchiveMember::getOldMember	ArchiveWriter.h	/^  getOldMember(const object::Archive::Child &OldMember, bool Deterministic);$/;"	kind:p	struct:llvm::NewArchiveMember	typeref:typename:Expected<NewArchiveMember>	access:public	signature:(const object::Archive::Child & OldMember,bool Deterministic)
llvm::Register	StackMapParser.h	/^    Register = 1, Direct = 2, Indirect = 3, Constant = 4, ConstantIndex = 5$/;"	kind:e	enum:llvm::StackMapV2Parser::LocationKind	access:public
llvm::Regular	MachO.h	/^  enum class Kind { Regular, Lazy, Weak };$/;"	kind:e	enum:llvm::object::MachOBindEntry::Kind	access:public
llvm::SF_Absolute	SymbolicFile.h	/^    SF_Absolute = 1U << 3,       \/\/ Absolute symbol$/;"	kind:e	enum:llvm::object::BasicSymbolRef::Flags	access:public
llvm::SF_Common	SymbolicFile.h	/^    SF_Common = 1U << 4,         \/\/ Symbol has common linkage$/;"	kind:e	enum:llvm::object::BasicSymbolRef::Flags	access:public
llvm::SF_Const	SymbolicFile.h	/^    SF_Const = 1U << 10,         \/\/ Symbol value is constant$/;"	kind:e	enum:llvm::object::BasicSymbolRef::Flags	access:public
llvm::SF_Exported	SymbolicFile.h	/^    SF_Exported = 1U << 6,       \/\/ Symbol is visible to other DSOs$/;"	kind:e	enum:llvm::object::BasicSymbolRef::Flags	access:public
llvm::SF_FormatSpecific	SymbolicFile.h	/^    SF_FormatSpecific = 1U << 7, \/\/ Specific to the object file format$/;"	kind:e	enum:llvm::object::BasicSymbolRef::Flags	access:public
llvm::SF_Global	SymbolicFile.h	/^    SF_Global = 1U << 1,         \/\/ Global symbol$/;"	kind:e	enum:llvm::object::BasicSymbolRef::Flags	access:public
llvm::SF_Hidden	SymbolicFile.h	/^    SF_Hidden = 1U << 9,         \/\/ Symbol has hidden visibility$/;"	kind:e	enum:llvm::object::BasicSymbolRef::Flags	access:public
llvm::SF_Indirect	SymbolicFile.h	/^    SF_Indirect = 1U << 5,       \/\/ Symbol is an alias to another symbol$/;"	kind:e	enum:llvm::object::BasicSymbolRef::Flags	access:public
llvm::SF_None	SymbolicFile.h	/^    SF_None = 0,$/;"	kind:e	enum:llvm::object::BasicSymbolRef::Flags	access:public
llvm::SF_Thumb	SymbolicFile.h	/^    SF_Thumb = 1U << 8,          \/\/ Thumb symbol in a 32-bit ARM binary$/;"	kind:e	enum:llvm::object::BasicSymbolRef::Flags	access:public
llvm::SF_Undefined	SymbolicFile.h	/^    SF_Undefined = 1U << 0,      \/\/ Symbol is defined in another object file$/;"	kind:e	enum:llvm::object::BasicSymbolRef::Flags	access:public
llvm::SF_Weak	SymbolicFile.h	/^    SF_Weak = 1U << 2,           \/\/ Weak symbol$/;"	kind:e	enum:llvm::object::BasicSymbolRef::Flags	access:public
llvm::ST_Data	ObjectFile.h	/^    ST_Data,$/;"	kind:e	enum:llvm::object::SymbolRef::Type	access:public
llvm::ST_Debug	ObjectFile.h	/^    ST_Debug,$/;"	kind:e	enum:llvm::object::SymbolRef::Type	access:public
llvm::ST_File	ObjectFile.h	/^    ST_File,$/;"	kind:e	enum:llvm::object::SymbolRef::Type	access:public
llvm::ST_Function	ObjectFile.h	/^    ST_Function,$/;"	kind:e	enum:llvm::object::SymbolRef::Type	access:public
llvm::ST_Other	ObjectFile.h	/^    ST_Other$/;"	kind:e	enum:llvm::object::SymbolRef::Type	access:public
llvm::ST_Unknown	ObjectFile.h	/^    ST_Unknown, \/\/ Type not specified$/;"	kind:e	enum:llvm::object::SymbolRef::Type	access:public
llvm::StackMapV2Parser	StackMapParser.h	/^class StackMapV2Parser {$/;"	kind:c	namespace:llvm
llvm::StackMapV2Parser::AccessorIterator	StackMapParser.h	/^  class AccessorIterator {$/;"	kind:c	class:llvm::StackMapV2Parser	access:public
llvm::StackMapV2Parser::AccessorIterator::A	StackMapParser.h	/^    AccessorT A;$/;"	kind:m	class:llvm::StackMapV2Parser::AccessorIterator	typeref:typename:AccessorT	access:private
llvm::StackMapV2Parser::AccessorIterator::AccessorIterator	StackMapParser.h	/^    AccessorIterator(AccessorT A) : A(A) {}$/;"	kind:f	class:llvm::StackMapV2Parser::AccessorIterator	access:public	signature:(AccessorT A)
llvm::StackMapV2Parser::AccessorIterator::operator !=	StackMapParser.h	/^    bool operator!=(const AccessorIterator &Other) { return !(*this == Other); }$/;"	kind:f	class:llvm::StackMapV2Parser::AccessorIterator	typeref:typename:bool	access:public	signature:(const AccessorIterator & Other)
llvm::StackMapV2Parser::AccessorIterator::operator *	StackMapParser.h	/^    AccessorT& operator*() { return A; }$/;"	kind:f	class:llvm::StackMapV2Parser::AccessorIterator	typeref:typename:AccessorT &	access:public	signature:()
llvm::StackMapV2Parser::AccessorIterator::operator ++	StackMapParser.h	/^    AccessorIterator operator++(int) {$/;"	kind:f	class:llvm::StackMapV2Parser::AccessorIterator	typeref:typename:AccessorIterator	access:public	signature:(int)
llvm::StackMapV2Parser::AccessorIterator::operator ++	StackMapParser.h	/^    AccessorIterator& operator++() { A = A.next(); return *this; }$/;"	kind:f	class:llvm::StackMapV2Parser::AccessorIterator	typeref:typename:AccessorIterator &	access:public	signature:()
llvm::StackMapV2Parser::AccessorIterator::operator ->	StackMapParser.h	/^    AccessorT* operator->() { return &A; }$/;"	kind:f	class:llvm::StackMapV2Parser::AccessorIterator	typeref:typename:AccessorT *	access:public	signature:()
llvm::StackMapV2Parser::AccessorIterator::operator ==	StackMapParser.h	/^    bool operator==(const AccessorIterator &Other) {$/;"	kind:f	class:llvm::StackMapV2Parser::AccessorIterator	typeref:typename:bool	access:public	signature:(const AccessorIterator & Other)
llvm::StackMapV2Parser::ConstantAccessor	StackMapParser.h	/^  class ConstantAccessor {$/;"	kind:c	class:llvm::StackMapV2Parser	access:public
llvm::StackMapV2Parser::ConstantAccessor::ConstantAccessor	StackMapParser.h	/^    ConstantAccessor(const uint8_t *P) : P(P) {}$/;"	kind:f	class:llvm::StackMapV2Parser::ConstantAccessor	access:private	signature:(const uint8_t * P)
llvm::StackMapV2Parser::ConstantAccessor::ConstantAccessorSize	StackMapParser.h	/^    const static int ConstantAccessorSize = sizeof(uint64_t);$/;"	kind:m	class:llvm::StackMapV2Parser::ConstantAccessor	typeref:typename:const int	access:private
llvm::StackMapV2Parser::ConstantAccessor::P	StackMapParser.h	/^    const uint8_t *P;$/;"	kind:m	class:llvm::StackMapV2Parser::ConstantAccessor	typeref:typename:const uint8_t *	access:private
llvm::StackMapV2Parser::ConstantAccessor::getValue	StackMapParser.h	/^    uint64_t getValue() const { return read<uint64_t>(P); }$/;"	kind:f	class:llvm::StackMapV2Parser::ConstantAccessor	typeref:typename:uint64_t	access:public	signature:() const
llvm::StackMapV2Parser::ConstantAccessor::next	StackMapParser.h	/^    ConstantAccessor next() const {$/;"	kind:f	class:llvm::StackMapV2Parser::ConstantAccessor	typeref:typename:ConstantAccessor	access:private	signature:() const
llvm::StackMapV2Parser::ConstantSize	StackMapParser.h	/^  static const unsigned ConstantSize = sizeof(uint64_t);$/;"	kind:m	class:llvm::StackMapV2Parser	typeref:typename:const unsigned	access:private
llvm::StackMapV2Parser::ConstantsListOffset	StackMapParser.h	/^  unsigned ConstantsListOffset;$/;"	kind:m	class:llvm::StackMapV2Parser	typeref:typename:unsigned	access:private
llvm::StackMapV2Parser::FunctionAccessor	StackMapParser.h	/^  class FunctionAccessor {$/;"	kind:c	class:llvm::StackMapV2Parser	access:public
llvm::StackMapV2Parser::FunctionAccessor::FunctionAccessor	StackMapParser.h	/^    FunctionAccessor(const uint8_t *P) : P(P) {}$/;"	kind:f	class:llvm::StackMapV2Parser::FunctionAccessor	access:private	signature:(const uint8_t * P)
llvm::StackMapV2Parser::FunctionAccessor::FunctionAccessorSize	StackMapParser.h	/^    const static int FunctionAccessorSize = 3 * sizeof(uint64_t);$/;"	kind:m	class:llvm::StackMapV2Parser::FunctionAccessor	typeref:typename:const int	access:private
llvm::StackMapV2Parser::FunctionAccessor::P	StackMapParser.h	/^    const uint8_t *P;$/;"	kind:m	class:llvm::StackMapV2Parser::FunctionAccessor	typeref:typename:const uint8_t *	access:private
llvm::StackMapV2Parser::FunctionAccessor::getFunctionAddress	StackMapParser.h	/^    uint64_t getFunctionAddress() const {$/;"	kind:f	class:llvm::StackMapV2Parser::FunctionAccessor	typeref:typename:uint64_t	access:public	signature:() const
llvm::StackMapV2Parser::FunctionAccessor::getRecordCount	StackMapParser.h	/^    uint64_t getRecordCount() const {$/;"	kind:f	class:llvm::StackMapV2Parser::FunctionAccessor	typeref:typename:uint64_t	access:public	signature:() const
llvm::StackMapV2Parser::FunctionAccessor::getStackSize	StackMapParser.h	/^    uint64_t getStackSize() const {$/;"	kind:f	class:llvm::StackMapV2Parser::FunctionAccessor	typeref:typename:uint64_t	access:public	signature:() const
llvm::StackMapV2Parser::FunctionAccessor::next	StackMapParser.h	/^    FunctionAccessor next() const {$/;"	kind:f	class:llvm::StackMapV2Parser::FunctionAccessor	typeref:typename:FunctionAccessor	access:private	signature:() const
llvm::StackMapV2Parser::FunctionListOffset	StackMapParser.h	/^  static const unsigned FunctionListOffset = NumRecordsOffset + sizeof(uint32_t);$/;"	kind:m	class:llvm::StackMapV2Parser	typeref:typename:const unsigned	access:private
llvm::StackMapV2Parser::FunctionSize	StackMapParser.h	/^  static const unsigned FunctionSize = 3 * sizeof(uint64_t);$/;"	kind:m	class:llvm::StackMapV2Parser	typeref:typename:const unsigned	access:private
llvm::StackMapV2Parser::HeaderOffset	StackMapParser.h	/^  static const unsigned HeaderOffset = 0;$/;"	kind:m	class:llvm::StackMapV2Parser	typeref:typename:const unsigned	access:private
llvm::StackMapV2Parser::LiveOutAccessor	StackMapParser.h	/^  class LiveOutAccessor {$/;"	kind:c	class:llvm::StackMapV2Parser	access:public
llvm::StackMapV2Parser::LiveOutAccessor::DwarfRegNumOffset	StackMapParser.h	/^    static const int DwarfRegNumOffset = 0;$/;"	kind:m	class:llvm::StackMapV2Parser::LiveOutAccessor	typeref:typename:const int	access:private
llvm::StackMapV2Parser::LiveOutAccessor::LiveOutAccessor	StackMapParser.h	/^    LiveOutAccessor(const uint8_t *P) : P(P) {}$/;"	kind:f	class:llvm::StackMapV2Parser::LiveOutAccessor	access:private	signature:(const uint8_t * P)
llvm::StackMapV2Parser::LiveOutAccessor::LiveOutAccessorSize	StackMapParser.h	/^    static const int LiveOutAccessorSize = sizeof(uint32_t);$/;"	kind:m	class:llvm::StackMapV2Parser::LiveOutAccessor	typeref:typename:const int	access:private
llvm::StackMapV2Parser::LiveOutAccessor::P	StackMapParser.h	/^    const uint8_t *P;$/;"	kind:m	class:llvm::StackMapV2Parser::LiveOutAccessor	typeref:typename:const uint8_t *	access:private
llvm::StackMapV2Parser::LiveOutAccessor::SizeOffset	StackMapParser.h	/^    static const int SizeOffset =$/;"	kind:m	class:llvm::StackMapV2Parser::LiveOutAccessor	typeref:typename:const int	access:private
llvm::StackMapV2Parser::LiveOutAccessor::getDwarfRegNum	StackMapParser.h	/^    uint16_t getDwarfRegNum() const {$/;"	kind:f	class:llvm::StackMapV2Parser::LiveOutAccessor	typeref:typename:uint16_t	access:public	signature:() const
llvm::StackMapV2Parser::LiveOutAccessor::getSizeInBytes	StackMapParser.h	/^    unsigned getSizeInBytes() const {$/;"	kind:f	class:llvm::StackMapV2Parser::LiveOutAccessor	typeref:typename:unsigned	access:public	signature:() const
llvm::StackMapV2Parser::LiveOutAccessor::next	StackMapParser.h	/^    LiveOutAccessor next() const {$/;"	kind:f	class:llvm::StackMapV2Parser::LiveOutAccessor	typeref:typename:LiveOutAccessor	access:private	signature:() const
llvm::StackMapV2Parser::LocationAccessor	StackMapParser.h	/^  class LocationAccessor {$/;"	kind:c	class:llvm::StackMapV2Parser	access:public
llvm::StackMapV2Parser::LocationAccessor::DwarfRegNumOffset	StackMapParser.h	/^    static const int DwarfRegNumOffset = KindOffset + sizeof(uint16_t);$/;"	kind:m	class:llvm::StackMapV2Parser::LocationAccessor	typeref:typename:const int	access:private
llvm::StackMapV2Parser::LocationAccessor::KindOffset	StackMapParser.h	/^    static const int KindOffset = 0;$/;"	kind:m	class:llvm::StackMapV2Parser::LocationAccessor	typeref:typename:const int	access:private
llvm::StackMapV2Parser::LocationAccessor::LocationAccessor	StackMapParser.h	/^    LocationAccessor(const uint8_t *P) : P(P) {}$/;"	kind:f	class:llvm::StackMapV2Parser::LocationAccessor	access:private	signature:(const uint8_t * P)
llvm::StackMapV2Parser::LocationAccessor::LocationAccessorSize	StackMapParser.h	/^    static const int LocationAccessorSize = sizeof(uint64_t);$/;"	kind:m	class:llvm::StackMapV2Parser::LocationAccessor	typeref:typename:const int	access:private
llvm::StackMapV2Parser::LocationAccessor::P	StackMapParser.h	/^    const uint8_t *P;$/;"	kind:m	class:llvm::StackMapV2Parser::LocationAccessor	typeref:typename:const uint8_t *	access:private
llvm::StackMapV2Parser::LocationAccessor::SmallConstantOffset	StackMapParser.h	/^    static const int SmallConstantOffset = DwarfRegNumOffset + sizeof(uint16_t);$/;"	kind:m	class:llvm::StackMapV2Parser::LocationAccessor	typeref:typename:const int	access:private
llvm::StackMapV2Parser::LocationAccessor::getConstantIndex	StackMapParser.h	/^    uint32_t getConstantIndex() const {$/;"	kind:f	class:llvm::StackMapV2Parser::LocationAccessor	typeref:typename:uint32_t	access:public	signature:() const
llvm::StackMapV2Parser::LocationAccessor::getDwarfRegNum	StackMapParser.h	/^    uint16_t getDwarfRegNum() const {$/;"	kind:f	class:llvm::StackMapV2Parser::LocationAccessor	typeref:typename:uint16_t	access:public	signature:() const
llvm::StackMapV2Parser::LocationAccessor::getKind	StackMapParser.h	/^    LocationKind getKind() const {$/;"	kind:f	class:llvm::StackMapV2Parser::LocationAccessor	typeref:typename:LocationKind	access:public	signature:() const
llvm::StackMapV2Parser::LocationAccessor::getOffset	StackMapParser.h	/^    int32_t getOffset() const {$/;"	kind:f	class:llvm::StackMapV2Parser::LocationAccessor	typeref:typename:int32_t	access:public	signature:() const
llvm::StackMapV2Parser::LocationAccessor::getSmallConstant	StackMapParser.h	/^    uint32_t getSmallConstant() const {$/;"	kind:f	class:llvm::StackMapV2Parser::LocationAccessor	typeref:typename:uint32_t	access:public	signature:() const
llvm::StackMapV2Parser::LocationAccessor::next	StackMapParser.h	/^    LocationAccessor next() const {$/;"	kind:f	class:llvm::StackMapV2Parser::LocationAccessor	typeref:typename:LocationAccessor	access:private	signature:() const
llvm::StackMapV2Parser::LocationKind	StackMapParser.h	/^  enum class LocationKind : uint8_t {$/;"	kind:g	class:llvm::StackMapV2Parser	typeref:typename:uint8_t	access:public
llvm::StackMapV2Parser::NumConstantsOffset	StackMapParser.h	/^  static const unsigned NumConstantsOffset = NumFunctionsOffset + sizeof(uint32_t);$/;"	kind:m	class:llvm::StackMapV2Parser	typeref:typename:const unsigned	access:private
llvm::StackMapV2Parser::NumFunctionsOffset	StackMapParser.h	/^  static const unsigned NumFunctionsOffset = HeaderOffset + sizeof(uint32_t);$/;"	kind:m	class:llvm::StackMapV2Parser	typeref:typename:const unsigned	access:private
llvm::StackMapV2Parser::NumRecordsOffset	StackMapParser.h	/^  static const unsigned NumRecordsOffset = NumConstantsOffset + sizeof(uint32_t);$/;"	kind:m	class:llvm::StackMapV2Parser	typeref:typename:const unsigned	access:private
llvm::StackMapV2Parser::RecordAccessor	StackMapParser.h	/^  class RecordAccessor {$/;"	kind:c	class:llvm::StackMapV2Parser	access:public
llvm::StackMapV2Parser::RecordAccessor::InstructionOffsetOffset	StackMapParser.h	/^    static const unsigned InstructionOffsetOffset =$/;"	kind:m	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:const unsigned	access:private
llvm::StackMapV2Parser::RecordAccessor::LiveOutSize	StackMapParser.h	/^    static const unsigned LiveOutSize = sizeof(uint32_t);$/;"	kind:m	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:const unsigned	access:private
llvm::StackMapV2Parser::RecordAccessor::LocationListOffset	StackMapParser.h	/^    static const unsigned LocationListOffset =$/;"	kind:m	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:const unsigned	access:private
llvm::StackMapV2Parser::RecordAccessor::LocationSize	StackMapParser.h	/^    static const unsigned LocationSize = sizeof(uint64_t);$/;"	kind:m	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:const unsigned	access:private
llvm::StackMapV2Parser::RecordAccessor::NumLocationsOffset	StackMapParser.h	/^    static const unsigned NumLocationsOffset =$/;"	kind:m	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:const unsigned	access:private
llvm::StackMapV2Parser::RecordAccessor::P	StackMapParser.h	/^    const uint8_t *P;$/;"	kind:m	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:const uint8_t *	access:private
llvm::StackMapV2Parser::RecordAccessor::PatchpointIDOffset	StackMapParser.h	/^    static const unsigned PatchpointIDOffset = 0;$/;"	kind:m	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:const unsigned	access:private
llvm::StackMapV2Parser::RecordAccessor::RecordAccessor	StackMapParser.h	/^    RecordAccessor(const uint8_t *P) : P(P) {}$/;"	kind:f	class:llvm::StackMapV2Parser::RecordAccessor	access:private	signature:(const uint8_t * P)
llvm::StackMapV2Parser::RecordAccessor::getID	StackMapParser.h	/^    uint64_t getID() const {$/;"	kind:f	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:uint64_t	access:public	signature:() const
llvm::StackMapV2Parser::RecordAccessor::getInstructionOffset	StackMapParser.h	/^    uint32_t getInstructionOffset() const {$/;"	kind:f	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:uint32_t	access:public	signature:() const
llvm::StackMapV2Parser::RecordAccessor::getLiveOut	StackMapParser.h	/^    LiveOutAccessor getLiveOut(unsigned LiveOutIndex) const {$/;"	kind:f	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:LiveOutAccessor	access:public	signature:(unsigned LiveOutIndex) const
llvm::StackMapV2Parser::RecordAccessor::getLocation	StackMapParser.h	/^    LocationAccessor getLocation(unsigned LocationIndex) const {$/;"	kind:f	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:LocationAccessor	access:public	signature:(unsigned LocationIndex) const
llvm::StackMapV2Parser::RecordAccessor::getNumLiveOuts	StackMapParser.h	/^    uint16_t getNumLiveOuts() const {$/;"	kind:f	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:uint16_t	access:public	signature:() const
llvm::StackMapV2Parser::RecordAccessor::getNumLiveOutsOffset	StackMapParser.h	/^    unsigned getNumLiveOutsOffset() const {$/;"	kind:f	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:unsigned	access:private	signature:() const
llvm::StackMapV2Parser::RecordAccessor::getNumLocations	StackMapParser.h	/^    uint16_t getNumLocations() const {$/;"	kind:f	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:uint16_t	access:public	signature:() const
llvm::StackMapV2Parser::RecordAccessor::getSizeInBytes	StackMapParser.h	/^    unsigned getSizeInBytes() const {$/;"	kind:f	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:unsigned	access:private	signature:() const
llvm::StackMapV2Parser::RecordAccessor::liveout_iterator	StackMapParser.h	/^    typedef AccessorIterator<LiveOutAccessor> liveout_iterator;$/;"	kind:t	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:AccessorIterator<LiveOutAccessor>	access:public
llvm::StackMapV2Parser::RecordAccessor::liveouts	StackMapParser.h	/^    iterator_range<liveout_iterator> liveouts() const {$/;"	kind:f	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:iterator_range<liveout_iterator>	access:public	signature:() const
llvm::StackMapV2Parser::RecordAccessor::liveouts_begin	StackMapParser.h	/^    liveout_iterator liveouts_begin() const {$/;"	kind:f	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:liveout_iterator	access:public	signature:() const
llvm::StackMapV2Parser::RecordAccessor::liveouts_end	StackMapParser.h	/^    liveout_iterator liveouts_end() const {$/;"	kind:f	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:liveout_iterator	access:public	signature:() const
llvm::StackMapV2Parser::RecordAccessor::location_begin	StackMapParser.h	/^    location_iterator location_begin() const {$/;"	kind:f	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:location_iterator	access:public	signature:() const
llvm::StackMapV2Parser::RecordAccessor::location_end	StackMapParser.h	/^    location_iterator location_end() const {$/;"	kind:f	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:location_iterator	access:public	signature:() const
llvm::StackMapV2Parser::RecordAccessor::location_iterator	StackMapParser.h	/^    typedef AccessorIterator<LocationAccessor> location_iterator;$/;"	kind:t	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:AccessorIterator<LocationAccessor>	access:public
llvm::StackMapV2Parser::RecordAccessor::locations	StackMapParser.h	/^    iterator_range<location_iterator> locations() const {$/;"	kind:f	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:iterator_range<location_iterator>	access:public	signature:() const
llvm::StackMapV2Parser::RecordAccessor::next	StackMapParser.h	/^    RecordAccessor next() const {$/;"	kind:f	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:RecordAccessor	access:private	signature:() const
llvm::StackMapV2Parser::StackMapRecordOffsets	StackMapParser.h	/^  std::vector<unsigned> StackMapRecordOffsets;$/;"	kind:m	class:llvm::StackMapV2Parser	typeref:typename:std::vector<unsigned>	access:private
llvm::StackMapV2Parser::StackMapSection	StackMapParser.h	/^  ArrayRef<uint8_t> StackMapSection;$/;"	kind:m	class:llvm::StackMapV2Parser	typeref:typename:ArrayRef<uint8_t>	access:private
llvm::StackMapV2Parser::StackMapV2Parser	StackMapParser.h	/^  StackMapV2Parser(ArrayRef<uint8_t> StackMapSection)$/;"	kind:f	class:llvm::StackMapV2Parser	access:public	signature:(ArrayRef<uint8_t> StackMapSection)
llvm::StackMapV2Parser::constant_iterator	StackMapParser.h	/^  typedef AccessorIterator<ConstantAccessor> constant_iterator;$/;"	kind:t	class:llvm::StackMapV2Parser	typeref:typename:AccessorIterator<ConstantAccessor>	access:public
llvm::StackMapV2Parser::constants	StackMapParser.h	/^  iterator_range<constant_iterator> constants() const {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:iterator_range<constant_iterator>	access:public	signature:() const
llvm::StackMapV2Parser::constants_begin	StackMapParser.h	/^  constant_iterator constants_begin() const {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:constant_iterator	access:public	signature:() const
llvm::StackMapV2Parser::constants_end	StackMapParser.h	/^  constant_iterator constants_end() const {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:constant_iterator	access:public	signature:() const
llvm::StackMapV2Parser::function_iterator	StackMapParser.h	/^  typedef AccessorIterator<FunctionAccessor> function_iterator;$/;"	kind:t	class:llvm::StackMapV2Parser	typeref:typename:AccessorIterator<FunctionAccessor>	access:public
llvm::StackMapV2Parser::functions	StackMapParser.h	/^  iterator_range<function_iterator> functions() const {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:iterator_range<function_iterator>	access:public	signature:() const
llvm::StackMapV2Parser::functions_begin	StackMapParser.h	/^  function_iterator functions_begin() const {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:function_iterator	access:public	signature:() const
llvm::StackMapV2Parser::functions_end	StackMapParser.h	/^  function_iterator functions_end() const {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:function_iterator	access:public	signature:() const
llvm::StackMapV2Parser::getConstant	StackMapParser.h	/^  ConstantAccessor getConstant(unsigned ConstantIndex) const {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:ConstantAccessor	access:public	signature:(unsigned ConstantIndex) const
llvm::StackMapV2Parser::getConstantOffset	StackMapParser.h	/^  std::size_t getConstantOffset(unsigned ConstantIndex) const {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:std::size_t	access:private	signature:(unsigned ConstantIndex) const
llvm::StackMapV2Parser::getFunction	StackMapParser.h	/^  FunctionAccessor getFunction(unsigned FunctionIndex) const {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:FunctionAccessor	access:public	signature:(unsigned FunctionIndex) const
llvm::StackMapV2Parser::getFunctionOffset	StackMapParser.h	/^  std::size_t getFunctionOffset(unsigned FunctionIndex) const {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:std::size_t	access:private	signature:(unsigned FunctionIndex) const
llvm::StackMapV2Parser::getNumConstants	StackMapParser.h	/^  uint32_t getNumConstants() const {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:uint32_t	access:public	signature:() const
llvm::StackMapV2Parser::getNumFunctions	StackMapParser.h	/^  uint32_t getNumFunctions() const {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:uint32_t	access:public	signature:() const
llvm::StackMapV2Parser::getNumRecords	StackMapParser.h	/^  uint32_t getNumRecords() const {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:uint32_t	access:public	signature:() const
llvm::StackMapV2Parser::getRecord	StackMapParser.h	/^  RecordAccessor getRecord(unsigned RecordIndex) const {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:RecordAccessor	access:public	signature:(unsigned RecordIndex) const
llvm::StackMapV2Parser::getVersion	StackMapParser.h	/^  unsigned getVersion() const { return 2; }$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:unsigned	access:public	signature:() const
llvm::StackMapV2Parser::read	StackMapParser.h	/^  static T read(const uint8_t *P) {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:T	access:private	signature:(const uint8_t * P)
llvm::StackMapV2Parser::record_iterator	StackMapParser.h	/^  typedef AccessorIterator<RecordAccessor> record_iterator;$/;"	kind:t	class:llvm::StackMapV2Parser	typeref:typename:AccessorIterator<RecordAccessor>	access:public
llvm::StackMapV2Parser::records	StackMapParser.h	/^  iterator_range<record_iterator> records() const {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:iterator_range<record_iterator>	access:public	signature:() const
llvm::StackMapV2Parser::records_begin	StackMapParser.h	/^  record_iterator records_begin() const {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:record_iterator	access:public	signature:() const
llvm::StackMapV2Parser::records_end	StackMapParser.h	/^  record_iterator records_end() const {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:record_iterator	access:public	signature:() const
llvm::Weak	MachO.h	/^  enum class Kind { Regular, Lazy, Weak };$/;"	kind:e	enum:llvm::object::MachOBindEntry::Kind	access:public
llvm::arch_not_found	Error.h	/^  arch_not_found = 1,$/;"	kind:e	enum:llvm::object::object_error	access:public
llvm::bitcode_section_not_found	Error.h	/^  bitcode_section_not_found,$/;"	kind:e	enum:llvm::object::object_error	access:public
llvm::getModuleSummaryIndexForFile	ModuleSummaryIndexObjectFile.h	/^getModuleSummaryIndexForFile(StringRef Path);$/;"	kind:p	namespace:llvm	typeref:typename:Expected<std::unique_ptr<ModuleSummaryIndex>>	signature:(StringRef Path)
llvm::invalid_file_type	Error.h	/^  invalid_file_type,$/;"	kind:e	enum:llvm::object::object_error	access:public
llvm::invalid_section_index	Error.h	/^  invalid_section_index,$/;"	kind:e	enum:llvm::object::object_error	access:public
llvm::invalid_symbol_index	Error.h	/^  invalid_symbol_index,$/;"	kind:e	enum:llvm::object::object_error	access:public
llvm::object	Archive.h	/^namespace object {$/;"	kind:n	namespace:llvm
llvm::object	Binary.h	/^namespace object {$/;"	kind:n	namespace:llvm
llvm::object	COFF.h	/^namespace object {$/;"	kind:n	namespace:llvm
llvm::object	COFFImportFile.h	/^namespace object {$/;"	kind:n	namespace:llvm
llvm::object	ELF.h	/^namespace object {$/;"	kind:n	namespace:llvm
llvm::object	ELFObjectFile.h	/^namespace object {$/;"	kind:n	namespace:llvm
llvm::object	ELFTypes.h	/^namespace object {$/;"	kind:n	namespace:llvm
llvm::object	Error.h	/^namespace object {$/;"	kind:n	namespace:llvm
llvm::object	IRObjectFile.h	/^namespace object {$/;"	kind:n	namespace:llvm
llvm::object	MachO.h	/^namespace object {$/;"	kind:n	namespace:llvm
llvm::object	MachOUniversal.h	/^namespace object {$/;"	kind:n	namespace:llvm
llvm::object	ModuleSummaryIndexObjectFile.h	/^namespace object {$/;"	kind:n	namespace:llvm
llvm::object	ObjectFile.h	/^namespace object {$/;"	kind:n	namespace:llvm
llvm::object	RelocVisitor.h	/^namespace object {$/;"	kind:n	namespace:llvm
llvm::object	SymbolSize.h	/^namespace object {$/;"	kind:n	namespace:llvm
llvm::object	SymbolicFile.h	/^namespace object {$/;"	kind:n	namespace:llvm
llvm::object::Archive	Archive.h	/^class Archive : public Binary {$/;"	kind:c	namespace:llvm::object	inherits:Binary
llvm::object::Archive::Archive	Archive.h	/^  Archive(MemoryBufferRef Source, Error &Err);$/;"	kind:p	class:llvm::object::Archive	access:public	signature:(MemoryBufferRef Source,Error & Err)
llvm::object::Archive::Child	Archive.h	/^  class Child {$/;"	kind:c	class:llvm::object::Archive	access:public
llvm::object::Archive::Child::Archive	Archive.h	/^    friend Archive;$/;"	kind:m	class:llvm::object::Archive::Child	access:private
llvm::object::Archive::Child::ArchiveMemberHeader	Archive.h	/^    friend ArchiveMemberHeader;$/;"	kind:m	class:llvm::object::Archive::Child	access:private
llvm::object::Archive::Child::Child	Archive.h	/^    Child(const Archive *Parent, StringRef Data, uint16_t StartOfFile);$/;"	kind:p	class:llvm::object::Archive::Child	access:public	signature:(const Archive * Parent,StringRef Data,uint16_t StartOfFile)
llvm::object::Archive::Child::Child	Archive.h	/^    Child(const Archive *Parent, const char *Start, Error *Err);$/;"	kind:p	class:llvm::object::Archive::Child	access:public	signature:(const Archive * Parent,const char * Start,Error * Err)
llvm::object::Archive::Child::Data	Archive.h	/^    StringRef Data;$/;"	kind:m	class:llvm::object::Archive::Child	typeref:typename:StringRef	access:private
llvm::object::Archive::Child::Header	Archive.h	/^    ArchiveMemberHeader Header;$/;"	kind:m	class:llvm::object::Archive::Child	typeref:typename:ArchiveMemberHeader	access:private
llvm::object::Archive::Child::Parent	Archive.h	/^    const Archive *Parent;$/;"	kind:m	class:llvm::object::Archive::Child	typeref:typename:const Archive *	access:private
llvm::object::Archive::Child::StartOfFile	Archive.h	/^    uint16_t StartOfFile;$/;"	kind:m	class:llvm::object::Archive::Child	typeref:typename:uint16_t	access:private
llvm::object::Archive::Child::getAccessMode	Archive.h	/^    Expected<sys::fs::perms> getAccessMode() const {$/;"	kind:f	class:llvm::object::Archive::Child	typeref:typename:Expected<sys::fs::perms>	access:public	signature:() const
llvm::object::Archive::Child::getAsBinary	Archive.h	/^    getAsBinary(LLVMContext *Context = nullptr) const;$/;"	kind:p	class:llvm::object::Archive::Child	typeref:typename:Expected<std::unique_ptr<Binary>>	access:public	signature:(LLVMContext * Context=nullptr) const
llvm::object::Archive::Child::getBuffer	Archive.h	/^    Expected<StringRef> getBuffer() const;$/;"	kind:p	class:llvm::object::Archive::Child	typeref:typename:Expected<StringRef>	access:public	signature:() const
llvm::object::Archive::Child::getChildOffset	Archive.h	/^    uint64_t getChildOffset() const;$/;"	kind:p	class:llvm::object::Archive::Child	typeref:typename:uint64_t	access:public	signature:() const
llvm::object::Archive::Child::getFullName	Archive.h	/^    Expected<std::string> getFullName() const;$/;"	kind:p	class:llvm::object::Archive::Child	typeref:typename:Expected<std::string>	access:public	signature:() const
llvm::object::Archive::Child::getGID	Archive.h	/^    Expected<unsigned> getGID() const { return Header.getGID(); }$/;"	kind:f	class:llvm::object::Archive::Child	typeref:typename:Expected<unsigned>	access:public	signature:() const
llvm::object::Archive::Child::getLastModified	Archive.h	/^    Expected<sys::TimePoint<std::chrono::seconds>> getLastModified() const {$/;"	kind:f	class:llvm::object::Archive::Child	typeref:typename:Expected<sys::TimePoint<std::chrono::seconds>>	access:public	signature:() const
llvm::object::Archive::Child::getMemoryBufferRef	Archive.h	/^    Expected<MemoryBufferRef> getMemoryBufferRef() const;$/;"	kind:p	class:llvm::object::Archive::Child	typeref:typename:Expected<MemoryBufferRef>	access:public	signature:() const
llvm::object::Archive::Child::getName	Archive.h	/^    Expected<StringRef> getName() const;$/;"	kind:p	class:llvm::object::Archive::Child	typeref:typename:Expected<StringRef>	access:public	signature:() const
llvm::object::Archive::Child::getNext	Archive.h	/^    Expected<Child> getNext() const;$/;"	kind:p	class:llvm::object::Archive::Child	typeref:typename:Expected<Child>	access:public	signature:() const
llvm::object::Archive::Child::getParent	Archive.h	/^    const Archive *getParent() const { return Parent; }$/;"	kind:f	class:llvm::object::Archive::Child	typeref:typename:const Archive *	access:public	signature:() const
llvm::object::Archive::Child::getRawLastModified	Archive.h	/^    StringRef getRawLastModified() const {$/;"	kind:f	class:llvm::object::Archive::Child	typeref:typename:StringRef	access:public	signature:() const
llvm::object::Archive::Child::getRawName	Archive.h	/^    Expected<StringRef> getRawName() const { return Header.getRawName(); }$/;"	kind:f	class:llvm::object::Archive::Child	typeref:typename:Expected<StringRef>	access:public	signature:() const
llvm::object::Archive::Child::getRawSize	Archive.h	/^    Expected<uint64_t> getRawSize() const;$/;"	kind:p	class:llvm::object::Archive::Child	typeref:typename:Expected<uint64_t>	access:public	signature:() const
llvm::object::Archive::Child::getSize	Archive.h	/^    Expected<uint64_t> getSize() const;$/;"	kind:p	class:llvm::object::Archive::Child	typeref:typename:Expected<uint64_t>	access:public	signature:() const
llvm::object::Archive::Child::getUID	Archive.h	/^    Expected<unsigned> getUID() const { return Header.getUID(); }$/;"	kind:f	class:llvm::object::Archive::Child	typeref:typename:Expected<unsigned>	access:public	signature:() const
llvm::object::Archive::Child::isThinMember	Archive.h	/^    Expected<bool> isThinMember() const;$/;"	kind:p	class:llvm::object::Archive::Child	typeref:typename:Expected<bool>	access:private	signature:() const
llvm::object::Archive::Child::operator ==	Archive.h	/^    bool operator ==(const Child &other) const {$/;"	kind:f	class:llvm::object::Archive::Child	typeref:typename:bool	access:public	signature:(const Child & other) const
llvm::object::Archive::FirstRegularData	Archive.h	/^  StringRef FirstRegularData;$/;"	kind:m	class:llvm::object::Archive	typeref:typename:StringRef	access:private
llvm::object::Archive::FirstRegularStartOfFile	Archive.h	/^  uint16_t FirstRegularStartOfFile = -1;$/;"	kind:m	class:llvm::object::Archive	typeref:typename:uint16_t	access:private
llvm::object::Archive::Format	Archive.h	/^  unsigned Format : 3;$/;"	kind:m	class:llvm::object::Archive	typeref:typename:unsigned:3	access:private
llvm::object::Archive::IsThin	Archive.h	/^  unsigned IsThin : 1;$/;"	kind:m	class:llvm::object::Archive	typeref:typename:unsigned:1	access:private
llvm::object::Archive::Kind	Archive.h	/^  enum Kind {$/;"	kind:g	class:llvm::object::Archive	access:public
llvm::object::Archive::StringTable	Archive.h	/^  StringRef StringTable;$/;"	kind:m	class:llvm::object::Archive	typeref:typename:StringRef	access:private
llvm::object::Archive::Symbol	Archive.h	/^  class Symbol {$/;"	kind:c	class:llvm::object::Archive	access:public
llvm::object::Archive::Symbol::Parent	Archive.h	/^    const Archive *Parent;$/;"	kind:m	class:llvm::object::Archive::Symbol	typeref:typename:const Archive *	access:private
llvm::object::Archive::Symbol::StringIndex	Archive.h	/^    uint32_t StringIndex; \/\/ Extra index to the string.$/;"	kind:m	class:llvm::object::Archive::Symbol	typeref:typename:uint32_t	access:private
llvm::object::Archive::Symbol::Symbol	Archive.h	/^    Symbol(const Archive *p, uint32_t symi, uint32_t stri)$/;"	kind:f	class:llvm::object::Archive::Symbol	access:public	signature:(const Archive * p,uint32_t symi,uint32_t stri)
llvm::object::Archive::Symbol::SymbolIndex	Archive.h	/^    uint32_t SymbolIndex;$/;"	kind:m	class:llvm::object::Archive::Symbol	typeref:typename:uint32_t	access:private
llvm::object::Archive::Symbol::getMember	Archive.h	/^    Expected<Child> getMember() const;$/;"	kind:p	class:llvm::object::Archive::Symbol	typeref:typename:Expected<Child>	access:public	signature:() const
llvm::object::Archive::Symbol::getName	Archive.h	/^    StringRef getName() const;$/;"	kind:p	class:llvm::object::Archive::Symbol	typeref:typename:StringRef	access:public	signature:() const
llvm::object::Archive::Symbol::getNext	Archive.h	/^    Symbol getNext() const;$/;"	kind:p	class:llvm::object::Archive::Symbol	typeref:typename:Symbol	access:public	signature:() const
llvm::object::Archive::Symbol::operator ==	Archive.h	/^    bool operator ==(const Symbol &other) const {$/;"	kind:f	class:llvm::object::Archive::Symbol	typeref:typename:bool	access:public	signature:(const Symbol & other) const
llvm::object::Archive::SymbolTable	Archive.h	/^  StringRef SymbolTable;$/;"	kind:m	class:llvm::object::Archive	typeref:typename:StringRef	access:private
llvm::object::Archive::ThinBuffers	Archive.h	/^  mutable std::vector<std::unique_ptr<MemoryBuffer>> ThinBuffers;$/;"	kind:m	class:llvm::object::Archive	typeref:typename:std::vector<std::unique_ptr<MemoryBuffer>>	access:private
llvm::object::Archive::anchor	Archive.h	/^  virtual void anchor();$/;"	kind:p	class:llvm::object::Archive	typeref:typename:void	access:private	signature:()
llvm::object::Archive::child_begin	Archive.h	/^  child_iterator child_begin(Error &Err, bool SkipInternal = true) const;$/;"	kind:p	class:llvm::object::Archive	typeref:typename:child_iterator	access:public	signature:(Error & Err,bool SkipInternal=true) const
llvm::object::Archive::child_end	Archive.h	/^  child_iterator child_end() const;$/;"	kind:p	class:llvm::object::Archive	typeref:typename:child_iterator	access:public	signature:() const
llvm::object::Archive::child_iterator	Archive.h	/^  class child_iterator {$/;"	kind:c	class:llvm::object::Archive	access:public
llvm::object::Archive::child_iterator::C	Archive.h	/^    Child C;$/;"	kind:m	class:llvm::object::Archive::child_iterator	typeref:typename:Child	access:private
llvm::object::Archive::child_iterator::E	Archive.h	/^    Error *E;$/;"	kind:m	class:llvm::object::Archive::child_iterator	typeref:typename:Error *	access:private
llvm::object::Archive::child_iterator::child_iterator	Archive.h	/^    child_iterator() : C(Child(nullptr, nullptr, nullptr)), E(nullptr) {}$/;"	kind:f	class:llvm::object::Archive::child_iterator	access:public	signature:()
llvm::object::Archive::child_iterator::child_iterator	Archive.h	/^    child_iterator(const Child &C, Error *E) : C(C), E(E) {}$/;"	kind:f	class:llvm::object::Archive::child_iterator	access:public	signature:(const Child & C,Error * E)
llvm::object::Archive::child_iterator::operator !=	Archive.h	/^    bool operator!=(const child_iterator &other) const {$/;"	kind:f	class:llvm::object::Archive::child_iterator	typeref:typename:bool	access:public	signature:(const child_iterator & other) const
llvm::object::Archive::child_iterator::operator *	Archive.h	/^    const Child &operator*() const { return C; }$/;"	kind:f	class:llvm::object::Archive::child_iterator	typeref:typename:const Child &	access:public	signature:() const
llvm::object::Archive::child_iterator::operator ++	Archive.h	/^    child_iterator &operator++() { \/\/ Preincrement$/;"	kind:f	class:llvm::object::Archive::child_iterator	typeref:typename:child_iterator &	access:public	signature:()
llvm::object::Archive::child_iterator::operator ->	Archive.h	/^    const Child *operator->() const { return &C; }$/;"	kind:f	class:llvm::object::Archive::child_iterator	typeref:typename:const Child *	access:public	signature:() const
llvm::object::Archive::child_iterator::operator ==	Archive.h	/^    bool operator==(const child_iterator &other) const {$/;"	kind:f	class:llvm::object::Archive::child_iterator	typeref:typename:bool	access:public	signature:(const child_iterator & other) const
llvm::object::Archive::children	Archive.h	/^  iterator_range<child_iterator> children(Error &Err,$/;"	kind:f	class:llvm::object::Archive	typeref:typename:iterator_range<child_iterator>	access:public	signature:(Error & Err,bool SkipInternal=true) const
llvm::object::Archive::classof	Archive.h	/^  static inline bool classof(Binary const *v) {$/;"	kind:f	class:llvm::object::Archive	typeref:typename:bool	access:public	signature:(Binary const * v)
llvm::object::Archive::create	Archive.h	/^  static Expected<std::unique_ptr<Archive>> create(MemoryBufferRef Source);$/;"	kind:p	class:llvm::object::Archive	typeref:typename:Expected<std::unique_ptr<Archive>>	access:public	signature:(MemoryBufferRef Source)
llvm::object::Archive::findSym	Archive.h	/^  Expected<Optional<Child>> findSym(StringRef name) const;$/;"	kind:p	class:llvm::object::Archive	typeref:typename:Expected<Optional<Child>>	access:public	signature:(StringRef name) const
llvm::object::Archive::getNumberOfSymbols	Archive.h	/^  uint32_t getNumberOfSymbols() const;$/;"	kind:p	class:llvm::object::Archive	typeref:typename:uint32_t	access:public	signature:() const
llvm::object::Archive::getStringTable	Archive.h	/^  StringRef getStringTable() const { return StringTable; }$/;"	kind:f	class:llvm::object::Archive	typeref:typename:StringRef	access:public	signature:() const
llvm::object::Archive::getSymbolTable	Archive.h	/^  StringRef getSymbolTable() const { return SymbolTable; }$/;"	kind:f	class:llvm::object::Archive	typeref:typename:StringRef	access:public	signature:() const
llvm::object::Archive::hasSymbolTable	Archive.h	/^  bool hasSymbolTable() const;$/;"	kind:p	class:llvm::object::Archive	typeref:typename:bool	access:public	signature:() const
llvm::object::Archive::isEmpty	Archive.h	/^  bool isEmpty() const;$/;"	kind:p	class:llvm::object::Archive	typeref:typename:bool	access:public	signature:() const
llvm::object::Archive::isThin	Archive.h	/^  bool isThin() const { return IsThin; }$/;"	kind:f	class:llvm::object::Archive	typeref:typename:bool	access:public	signature:() const
llvm::object::Archive::kind	Archive.h	/^  Kind kind() const { return (Kind)Format; }$/;"	kind:f	class:llvm::object::Archive	typeref:typename:Kind	access:public	signature:() const
llvm::object::Archive::setFirstRegular	Archive.h	/^  void setFirstRegular(const Child &C);$/;"	kind:p	class:llvm::object::Archive	typeref:typename:void	access:private	signature:(const Child & C)
llvm::object::Archive::symbol_begin	Archive.h	/^  symbol_iterator symbol_begin() const;$/;"	kind:p	class:llvm::object::Archive	typeref:typename:symbol_iterator	access:public	signature:() const
llvm::object::Archive::symbol_end	Archive.h	/^  symbol_iterator symbol_end() const;$/;"	kind:p	class:llvm::object::Archive	typeref:typename:symbol_iterator	access:public	signature:() const
llvm::object::Archive::symbol_iterator	Archive.h	/^  class symbol_iterator {$/;"	kind:c	class:llvm::object::Archive	access:public
llvm::object::Archive::symbol_iterator::operator !=	Archive.h	/^    bool operator!=(const symbol_iterator &other) const {$/;"	kind:f	class:llvm::object::Archive::symbol_iterator	typeref:typename:bool	access:public	signature:(const symbol_iterator & other) const
llvm::object::Archive::symbol_iterator::operator *	Archive.h	/^    const Symbol &operator*() const { return symbol; }$/;"	kind:f	class:llvm::object::Archive::symbol_iterator	typeref:typename:const Symbol &	access:public	signature:() const
llvm::object::Archive::symbol_iterator::operator ++	Archive.h	/^    symbol_iterator& operator++() {  \/\/ Preincrement$/;"	kind:f	class:llvm::object::Archive::symbol_iterator	typeref:typename:symbol_iterator &	access:public	signature:()
llvm::object::Archive::symbol_iterator::operator ->	Archive.h	/^    const Symbol *operator->() const { return &symbol; }$/;"	kind:f	class:llvm::object::Archive::symbol_iterator	typeref:typename:const Symbol *	access:public	signature:() const
llvm::object::Archive::symbol_iterator::operator ==	Archive.h	/^    bool operator==(const symbol_iterator &other) const {$/;"	kind:f	class:llvm::object::Archive::symbol_iterator	typeref:typename:bool	access:public	signature:(const symbol_iterator & other) const
llvm::object::Archive::symbol_iterator::symbol	Archive.h	/^    Symbol symbol;$/;"	kind:m	class:llvm::object::Archive::symbol_iterator	typeref:typename:Symbol	access:private
llvm::object::Archive::symbol_iterator::symbol_iterator	Archive.h	/^    symbol_iterator(const Symbol &s) : symbol(s) {}$/;"	kind:f	class:llvm::object::Archive::symbol_iterator	access:public	signature:(const Symbol & s)
llvm::object::Archive::symbols	Archive.h	/^  iterator_range<symbol_iterator> symbols() const {$/;"	kind:f	class:llvm::object::Archive	typeref:typename:iterator_range<symbol_iterator>	access:public	signature:() const
llvm::object::Archive::takeThinBuffers	Archive.h	/^  std::vector<std::unique_ptr<MemoryBuffer>> takeThinBuffers() {$/;"	kind:f	class:llvm::object::Archive	typeref:typename:std::vector<std::unique_ptr<MemoryBuffer>>	access:public	signature:()
llvm::object::ArchiveMemberHeader	Archive.h	/^class ArchiveMemberHeader {$/;"	kind:c	namespace:llvm::object
llvm::object::ArchiveMemberHeader::ArMemHdr	Archive.h	/^  ArMemHdrType const *ArMemHdr;$/;"	kind:m	class:llvm::object::ArchiveMemberHeader	typeref:typename:ArMemHdrType const *	access:private
llvm::object::ArchiveMemberHeader::ArMemHdrType	Archive.h	/^  struct ArMemHdrType {$/;"	kind:s	class:llvm::object::ArchiveMemberHeader	access:private
llvm::object::ArchiveMemberHeader::ArMemHdrType::AccessMode	Archive.h	/^    char AccessMode[8];$/;"	kind:m	struct:llvm::object::ArchiveMemberHeader::ArMemHdrType	typeref:typename:char[8]	access:public
llvm::object::ArchiveMemberHeader::ArMemHdrType::GID	Archive.h	/^    char GID[6];$/;"	kind:m	struct:llvm::object::ArchiveMemberHeader::ArMemHdrType	typeref:typename:char[6]	access:public
llvm::object::ArchiveMemberHeader::ArMemHdrType::LastModified	Archive.h	/^    char LastModified[12];$/;"	kind:m	struct:llvm::object::ArchiveMemberHeader::ArMemHdrType	typeref:typename:char[12]	access:public
llvm::object::ArchiveMemberHeader::ArMemHdrType::Name	Archive.h	/^    char Name[16];$/;"	kind:m	struct:llvm::object::ArchiveMemberHeader::ArMemHdrType	typeref:typename:char[16]	access:public
llvm::object::ArchiveMemberHeader::ArMemHdrType::Size	Archive.h	/^    char Size[10]; \/\/\/< Size of data, not including header or padding.$/;"	kind:m	struct:llvm::object::ArchiveMemberHeader::ArMemHdrType	typeref:typename:char[10]	access:public
llvm::object::ArchiveMemberHeader::ArMemHdrType::Terminator	Archive.h	/^    char Terminator[2];$/;"	kind:m	struct:llvm::object::ArchiveMemberHeader::ArMemHdrType	typeref:typename:char[2]	access:public
llvm::object::ArchiveMemberHeader::ArMemHdrType::UID	Archive.h	/^    char UID[6];$/;"	kind:m	struct:llvm::object::ArchiveMemberHeader::ArMemHdrType	typeref:typename:char[6]	access:public
llvm::object::ArchiveMemberHeader::ArchiveMemberHeader	Archive.h	/^  ArchiveMemberHeader(Archive const *Parent, const char *RawHeaderPtr,$/;"	kind:p	class:llvm::object::ArchiveMemberHeader	access:public	signature:(Archive const * Parent,const char * RawHeaderPtr,uint64_t Size,Error * Err)
llvm::object::ArchiveMemberHeader::Parent	Archive.h	/^  Archive const *Parent;$/;"	kind:m	class:llvm::object::ArchiveMemberHeader	typeref:typename:Archive const *	access:private
llvm::object::ArchiveMemberHeader::getAccessMode	Archive.h	/^  Expected<sys::fs::perms> getAccessMode() const;$/;"	kind:p	class:llvm::object::ArchiveMemberHeader	typeref:typename:Expected<sys::fs::perms>	access:public	signature:() const
llvm::object::ArchiveMemberHeader::getGID	Archive.h	/^  Expected<unsigned> getGID() const;$/;"	kind:p	class:llvm::object::ArchiveMemberHeader	typeref:typename:Expected<unsigned>	access:public	signature:() const
llvm::object::ArchiveMemberHeader::getLastModified	Archive.h	/^  Expected<sys::TimePoint<std::chrono::seconds>> getLastModified() const;$/;"	kind:p	class:llvm::object::ArchiveMemberHeader	typeref:typename:Expected<sys::TimePoint<std::chrono::seconds>>	access:public	signature:() const
llvm::object::ArchiveMemberHeader::getName	Archive.h	/^  Expected<llvm::StringRef> getName(uint64_t Size) const;$/;"	kind:p	class:llvm::object::ArchiveMemberHeader	typeref:typename:Expected<llvm::StringRef>	access:public	signature:(uint64_t Size) const
llvm::object::ArchiveMemberHeader::getRawLastModified	Archive.h	/^  llvm::StringRef getRawLastModified() const {$/;"	kind:f	class:llvm::object::ArchiveMemberHeader	typeref:typename:llvm::StringRef	access:public	signature:() const
llvm::object::ArchiveMemberHeader::getRawName	Archive.h	/^  Expected<llvm::StringRef> getRawName() const;$/;"	kind:p	class:llvm::object::ArchiveMemberHeader	typeref:typename:Expected<llvm::StringRef>	access:public	signature:() const
llvm::object::ArchiveMemberHeader::getSize	Archive.h	/^  Expected<uint32_t> getSize() const;$/;"	kind:p	class:llvm::object::ArchiveMemberHeader	typeref:typename:Expected<uint32_t>	access:public	signature:() const
llvm::object::ArchiveMemberHeader::getSizeOf	Archive.h	/^  uint64_t getSizeOf() const {$/;"	kind:f	class:llvm::object::ArchiveMemberHeader	typeref:typename:uint64_t	access:public	signature:() const
llvm::object::ArchiveMemberHeader::getUID	Archive.h	/^  Expected<unsigned> getUID() const;$/;"	kind:p	class:llvm::object::ArchiveMemberHeader	typeref:typename:Expected<unsigned>	access:public	signature:() const
llvm::object::BaseRelocRef	COFF.h	/^class BaseRelocRef {$/;"	kind:c	namespace:llvm::object
llvm::object::BaseRelocRef::BaseRelocRef	COFF.h	/^  BaseRelocRef() : OwningObject(nullptr) {}$/;"	kind:f	class:llvm::object::BaseRelocRef	access:public	signature:()
llvm::object::BaseRelocRef::BaseRelocRef	COFF.h	/^  BaseRelocRef(const coff_base_reloc_block_header *Header,$/;"	kind:f	class:llvm::object::BaseRelocRef	access:public	signature:(const coff_base_reloc_block_header * Header,const COFFObjectFile * Owner)
llvm::object::BaseRelocRef::Header	COFF.h	/^  const coff_base_reloc_block_header *Header;$/;"	kind:m	class:llvm::object::BaseRelocRef	typeref:typename:const coff_base_reloc_block_header *	access:private
llvm::object::BaseRelocRef::Index	COFF.h	/^  uint32_t Index;$/;"	kind:m	class:llvm::object::BaseRelocRef	typeref:typename:uint32_t	access:private
llvm::object::BaseRelocRef::OwningObject	COFF.h	/^  const COFFObjectFile *OwningObject;$/;"	kind:m	class:llvm::object::BaseRelocRef	typeref:typename:const COFFObjectFile *	access:private
llvm::object::BaseRelocRef::getRVA	COFF.h	/^  std::error_code getRVA(uint32_t &Result) const;$/;"	kind:p	class:llvm::object::BaseRelocRef	typeref:typename:std::error_code	access:public	signature:(uint32_t & Result) const
llvm::object::BaseRelocRef::getType	COFF.h	/^  std::error_code getType(uint8_t &Type) const;$/;"	kind:p	class:llvm::object::BaseRelocRef	typeref:typename:std::error_code	access:public	signature:(uint8_t & Type) const
llvm::object::BaseRelocRef::moveNext	COFF.h	/^  void moveNext();$/;"	kind:p	class:llvm::object::BaseRelocRef	typeref:typename:void	access:public	signature:()
llvm::object::BaseRelocRef::operator ==	COFF.h	/^  bool operator==(const BaseRelocRef &Other) const;$/;"	kind:p	class:llvm::object::BaseRelocRef	typeref:typename:bool	access:public	signature:(const BaseRelocRef & Other) const
llvm::object::BasicSymbolRef	SymbolicFile.h	/^class BasicSymbolRef {$/;"	kind:c	namespace:llvm::object
llvm::object::BasicSymbolRef::BasicSymbolRef	SymbolicFile.h	/^  BasicSymbolRef() : OwningObject(nullptr) { }$/;"	kind:f	class:llvm::object::BasicSymbolRef	access:public	signature:()
llvm::object::BasicSymbolRef::BasicSymbolRef	SymbolicFile.h	/^  BasicSymbolRef(DataRefImpl SymbolP, const SymbolicFile *Owner);$/;"	kind:p	class:llvm::object::BasicSymbolRef	access:public	signature:(DataRefImpl SymbolP,const SymbolicFile * Owner)
llvm::object::BasicSymbolRef::BasicSymbolRef	SymbolicFile.h	/^inline BasicSymbolRef::BasicSymbolRef(DataRefImpl SymbolP,$/;"	kind:f	class:llvm::object::BasicSymbolRef	signature:(DataRefImpl SymbolP,const SymbolicFile * Owner)
llvm::object::BasicSymbolRef::Flags	SymbolicFile.h	/^  enum Flags : unsigned {$/;"	kind:g	class:llvm::object::BasicSymbolRef	typeref:typename:unsigned	access:public
llvm::object::BasicSymbolRef::OwningObject	SymbolicFile.h	/^  const SymbolicFile *OwningObject;$/;"	kind:m	class:llvm::object::BasicSymbolRef	typeref:typename:const SymbolicFile *	access:private
llvm::object::BasicSymbolRef::SymbolPimpl	SymbolicFile.h	/^  DataRefImpl SymbolPimpl;$/;"	kind:m	class:llvm::object::BasicSymbolRef	typeref:typename:DataRefImpl	access:private
llvm::object::BasicSymbolRef::getFlags	SymbolicFile.h	/^  uint32_t getFlags() const;$/;"	kind:p	class:llvm::object::BasicSymbolRef	typeref:typename:uint32_t	access:public	signature:() const
llvm::object::BasicSymbolRef::getFlags	SymbolicFile.h	/^inline uint32_t BasicSymbolRef::getFlags() const {$/;"	kind:f	class:llvm::object::BasicSymbolRef	typeref:typename:uint32_t	signature:() const
llvm::object::BasicSymbolRef::getObject	SymbolicFile.h	/^  const SymbolicFile *getObject() const;$/;"	kind:p	class:llvm::object::BasicSymbolRef	typeref:typename:const SymbolicFile *	access:public	signature:() const
llvm::object::BasicSymbolRef::getObject	SymbolicFile.h	/^inline const SymbolicFile *BasicSymbolRef::getObject() const {$/;"	kind:f	class:llvm::object::BasicSymbolRef	typeref:typename:const SymbolicFile *	signature:() const
llvm::object::BasicSymbolRef::getRawDataRefImpl	SymbolicFile.h	/^  DataRefImpl getRawDataRefImpl() const;$/;"	kind:p	class:llvm::object::BasicSymbolRef	typeref:typename:DataRefImpl	access:public	signature:() const
llvm::object::BasicSymbolRef::getRawDataRefImpl	SymbolicFile.h	/^inline DataRefImpl BasicSymbolRef::getRawDataRefImpl() const {$/;"	kind:f	class:llvm::object::BasicSymbolRef	typeref:typename:DataRefImpl	signature:() const
llvm::object::BasicSymbolRef::moveNext	SymbolicFile.h	/^  void moveNext();$/;"	kind:p	class:llvm::object::BasicSymbolRef	typeref:typename:void	access:public	signature:()
llvm::object::BasicSymbolRef::moveNext	SymbolicFile.h	/^inline void BasicSymbolRef::moveNext() {$/;"	kind:f	class:llvm::object::BasicSymbolRef	typeref:typename:void	signature:()
llvm::object::BasicSymbolRef::operator <	SymbolicFile.h	/^  bool operator<(const BasicSymbolRef &Other) const;$/;"	kind:p	class:llvm::object::BasicSymbolRef	typeref:typename:bool	access:public	signature:(const BasicSymbolRef & Other) const
llvm::object::BasicSymbolRef::operator <	SymbolicFile.h	/^inline bool BasicSymbolRef::operator<(const BasicSymbolRef &Other) const {$/;"	kind:f	class:llvm::object::BasicSymbolRef	typeref:typename:bool	signature:(const BasicSymbolRef & Other) const
llvm::object::BasicSymbolRef::operator ==	SymbolicFile.h	/^  bool operator==(const BasicSymbolRef &Other) const;$/;"	kind:p	class:llvm::object::BasicSymbolRef	typeref:typename:bool	access:public	signature:(const BasicSymbolRef & Other) const
llvm::object::BasicSymbolRef::operator ==	SymbolicFile.h	/^inline bool BasicSymbolRef::operator==(const BasicSymbolRef &Other) const {$/;"	kind:f	class:llvm::object::BasicSymbolRef	typeref:typename:bool	signature:(const BasicSymbolRef & Other) const
llvm::object::BasicSymbolRef::printName	SymbolicFile.h	/^  std::error_code printName(raw_ostream &OS) const;$/;"	kind:p	class:llvm::object::BasicSymbolRef	typeref:typename:std::error_code	access:public	signature:(raw_ostream & OS) const
llvm::object::BasicSymbolRef::printName	SymbolicFile.h	/^inline std::error_code BasicSymbolRef::printName(raw_ostream &OS) const {$/;"	kind:f	class:llvm::object::BasicSymbolRef	typeref:typename:std::error_code	signature:(raw_ostream & OS) const
llvm::object::Binary	Binary.h	/^class Binary {$/;"	kind:c	namespace:llvm::object
llvm::object::Binary::Binary	Binary.h	/^  Binary() = delete;$/;"	kind:p	class:llvm::object::Binary	access:private	signature:()
llvm::object::Binary::Binary	Binary.h	/^  Binary(const Binary &other) = delete;$/;"	kind:p	class:llvm::object::Binary	access:private	signature:(const Binary & other)
llvm::object::Binary::Binary	Binary.h	/^  Binary(unsigned int Type, MemoryBufferRef Source);$/;"	kind:p	class:llvm::object::Binary	access:protected	signature:(unsigned int Type,MemoryBufferRef Source)
llvm::object::Binary::Data	Binary.h	/^  MemoryBufferRef Data;$/;"	kind:m	class:llvm::object::Binary	typeref:typename:MemoryBufferRef	access:protected
llvm::object::Binary::TypeID	Binary.h	/^  unsigned int TypeID;$/;"	kind:m	class:llvm::object::Binary	typeref:typename:unsigned int	access:private
llvm::object::Binary::__anonff0261800103	Binary.h	/^  enum {$/;"	kind:g	class:llvm::object::Binary	access:protected
llvm::object::Binary::getData	Binary.h	/^  StringRef getData() const;$/;"	kind:p	class:llvm::object::Binary	typeref:typename:StringRef	access:public	signature:() const
llvm::object::Binary::getELFType	Binary.h	/^  static inline unsigned int getELFType(bool isLE, bool is64Bits) {$/;"	kind:f	class:llvm::object::Binary	typeref:typename:unsigned int	access:protected	signature:(bool isLE,bool is64Bits)
llvm::object::Binary::getFileName	Binary.h	/^  StringRef getFileName() const;$/;"	kind:p	class:llvm::object::Binary	typeref:typename:StringRef	access:public	signature:() const
llvm::object::Binary::getMachOType	Binary.h	/^  static unsigned int getMachOType(bool isLE, bool is64Bits) {$/;"	kind:f	class:llvm::object::Binary	typeref:typename:unsigned int	access:protected	signature:(bool isLE,bool is64Bits)
llvm::object::Binary::getMemoryBufferRef	Binary.h	/^  MemoryBufferRef getMemoryBufferRef() const;$/;"	kind:p	class:llvm::object::Binary	typeref:typename:MemoryBufferRef	access:public	signature:() const
llvm::object::Binary::getType	Binary.h	/^  unsigned int getType() const { return TypeID; }$/;"	kind:f	class:llvm::object::Binary	typeref:typename:unsigned int	access:public	signature:() const
llvm::object::Binary::isArchive	Binary.h	/^  bool isArchive() const {$/;"	kind:f	class:llvm::object::Binary	typeref:typename:bool	access:public	signature:() const
llvm::object::Binary::isCOFF	Binary.h	/^  bool isCOFF() const {$/;"	kind:f	class:llvm::object::Binary	typeref:typename:bool	access:public	signature:() const
llvm::object::Binary::isCOFFImportFile	Binary.h	/^  bool isCOFFImportFile() const {$/;"	kind:f	class:llvm::object::Binary	typeref:typename:bool	access:public	signature:() const
llvm::object::Binary::isELF	Binary.h	/^  bool isELF() const {$/;"	kind:f	class:llvm::object::Binary	typeref:typename:bool	access:public	signature:() const
llvm::object::Binary::isIR	Binary.h	/^  bool isIR() const {$/;"	kind:f	class:llvm::object::Binary	typeref:typename:bool	access:public	signature:() const
llvm::object::Binary::isLittleEndian	Binary.h	/^  bool isLittleEndian() const {$/;"	kind:f	class:llvm::object::Binary	typeref:typename:bool	access:public	signature:() const
llvm::object::Binary::isMachO	Binary.h	/^  bool isMachO() const {$/;"	kind:f	class:llvm::object::Binary	typeref:typename:bool	access:public	signature:() const
llvm::object::Binary::isMachOUniversalBinary	Binary.h	/^  bool isMachOUniversalBinary() const {$/;"	kind:f	class:llvm::object::Binary	typeref:typename:bool	access:public	signature:() const
llvm::object::Binary::isModuleSummaryIndex	Binary.h	/^  bool isModuleSummaryIndex() const { return TypeID == ID_ModuleSummaryIndex; }$/;"	kind:f	class:llvm::object::Binary	typeref:typename:bool	access:public	signature:() const
llvm::object::Binary::isObject	Binary.h	/^  bool isObject() const {$/;"	kind:f	class:llvm::object::Binary	typeref:typename:bool	access:public	signature:() const
llvm::object::Binary::isSymbolic	Binary.h	/^  bool isSymbolic() const {$/;"	kind:f	class:llvm::object::Binary	typeref:typename:bool	access:public	signature:() const
llvm::object::Binary::~Binary	Binary.h	/^  virtual ~Binary();$/;"	kind:p	class:llvm::object::Binary	access:public	signature:()
llvm::object::BinaryError	Error.h	/^class BinaryError : public ErrorInfo<BinaryError, ECError> {$/;"	kind:c	namespace:llvm::object	inherits:ErrorInfo<BinaryError,ECError>
llvm::object::BinaryError::BinaryError	Error.h	/^  BinaryError() {$/;"	kind:f	class:llvm::object::BinaryError	access:public	signature:()
llvm::object::BinaryError::ID	Error.h	/^  static char ID;$/;"	kind:m	class:llvm::object::BinaryError	typeref:typename:char	access:public
llvm::object::COFFImportFile	COFFImportFile.h	/^class COFFImportFile : public SymbolicFile {$/;"	kind:c	namespace:llvm::object	inherits:SymbolicFile
llvm::object::COFFImportFile::COFFImportFile	COFFImportFile.h	/^  COFFImportFile(MemoryBufferRef Source)$/;"	kind:f	class:llvm::object::COFFImportFile	access:public	signature:(MemoryBufferRef Source)
llvm::object::COFFImportFile::classof	COFFImportFile.h	/^  static inline bool classof(Binary const *V) { return V->isCOFFImportFile(); }$/;"	kind:f	class:llvm::object::COFFImportFile	typeref:typename:bool	access:public	signature:(Binary const * V)
llvm::object::COFFImportFile::getCOFFImportHeader	COFFImportFile.h	/^  const coff_import_header *getCOFFImportHeader() const {$/;"	kind:f	class:llvm::object::COFFImportFile	typeref:typename:const coff_import_header *	access:public	signature:() const
llvm::object::COFFImportFile::getSymbolFlags	COFFImportFile.h	/^  uint32_t getSymbolFlags(DataRefImpl Symb) const override {$/;"	kind:f	class:llvm::object::COFFImportFile	typeref:typename:uint32_t	access:public	signature:(DataRefImpl Symb) const
llvm::object::COFFImportFile::isCode	COFFImportFile.h	/^  bool isCode() const {$/;"	kind:f	class:llvm::object::COFFImportFile	typeref:typename:bool	access:private	signature:() const
llvm::object::COFFImportFile::moveSymbolNext	COFFImportFile.h	/^  void moveSymbolNext(DataRefImpl &Symb) const override { ++Symb.p; }$/;"	kind:f	class:llvm::object::COFFImportFile	typeref:typename:void	access:public	signature:(DataRefImpl & Symb) const
llvm::object::COFFImportFile::printSymbolName	COFFImportFile.h	/^  std::error_code printSymbolName(raw_ostream &OS,$/;"	kind:f	class:llvm::object::COFFImportFile	typeref:typename:std::error_code	access:public	signature:(raw_ostream & OS,DataRefImpl Symb) const
llvm::object::COFFImportFile::symbol_begin	COFFImportFile.h	/^  basic_symbol_iterator symbol_begin() const override {$/;"	kind:f	class:llvm::object::COFFImportFile	typeref:typename:basic_symbol_iterator	access:public	signature:() const
llvm::object::COFFImportFile::symbol_end	COFFImportFile.h	/^  basic_symbol_iterator symbol_end() const override {$/;"	kind:f	class:llvm::object::COFFImportFile	typeref:typename:basic_symbol_iterator	access:public	signature:() const
llvm::object::COFFObjectFile	COFF.h	/^class COFFObjectFile : public ObjectFile {$/;"	kind:c	namespace:llvm::object	inherits:ObjectFile
llvm::object::COFFObjectFile::BaseRelocEnd	COFF.h	/^  const coff_base_reloc_block_header *BaseRelocEnd;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:const coff_base_reloc_block_header *	access:private
llvm::object::COFFObjectFile::BaseRelocHeader	COFF.h	/^  const coff_base_reloc_block_header *BaseRelocHeader;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:const coff_base_reloc_block_header *	access:private
llvm::object::COFFObjectFile::COFFBigObjHeader	COFF.h	/^  const coff_bigobj_file_header *COFFBigObjHeader;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:const coff_bigobj_file_header *	access:private
llvm::object::COFFObjectFile::COFFHeader	COFF.h	/^  const coff_file_header *COFFHeader;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:const coff_file_header *	access:private
llvm::object::COFFObjectFile::COFFObjectFile	COFF.h	/^  COFFObjectFile(MemoryBufferRef Object, std::error_code &EC);$/;"	kind:p	class:llvm::object::COFFObjectFile	access:public	signature:(MemoryBufferRef Object,std::error_code & EC)
llvm::object::COFFObjectFile::DataDirectory	COFF.h	/^  const data_directory *DataDirectory;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:const data_directory *	access:private
llvm::object::COFFObjectFile::DebugDirectoryBegin	COFF.h	/^  const debug_directory *DebugDirectoryBegin;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:const debug_directory *	access:private
llvm::object::COFFObjectFile::DebugDirectoryEnd	COFF.h	/^  const debug_directory *DebugDirectoryEnd;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:const debug_directory *	access:private
llvm::object::COFFObjectFile::DelayImportDirectory	COFF.h	/^  const delay_import_directory_table_entry *DelayImportDirectory;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:const delay_import_directory_table_entry *	access:private
llvm::object::COFFObjectFile::ExportDirectory	COFF.h	/^  const export_directory_table_entry *ExportDirectory;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:const export_directory_table_entry *	access:private
llvm::object::COFFObjectFile::ImportDirectory	COFF.h	/^  const coff_import_directory_table_entry *ImportDirectory;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:const coff_import_directory_table_entry *	access:private
llvm::object::COFFObjectFile::NumberOfDelayImportDirectory	COFF.h	/^  uint32_t NumberOfDelayImportDirectory;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:uint32_t	access:private
llvm::object::COFFObjectFile::PE32Header	COFF.h	/^  const pe32_header *PE32Header;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:const pe32_header *	access:private
llvm::object::COFFObjectFile::PE32PlusHeader	COFF.h	/^  const pe32plus_header *PE32PlusHeader;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:const pe32plus_header *	access:private
llvm::object::COFFObjectFile::SectionTable	COFF.h	/^  const coff_section *SectionTable;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:const coff_section *	access:private
llvm::object::COFFObjectFile::StringTable	COFF.h	/^  const char *StringTable;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:const char *	access:private
llvm::object::COFFObjectFile::StringTableSize	COFF.h	/^  uint32_t StringTableSize;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:uint32_t	access:private
llvm::object::COFFObjectFile::SymbolTable16	COFF.h	/^  const coff_symbol16 *SymbolTable16;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:const coff_symbol16 *	access:private
llvm::object::COFFObjectFile::SymbolTable32	COFF.h	/^  const coff_symbol32 *SymbolTable32;$/;"	kind:m	class:llvm::object::COFFObjectFile	typeref:typename:const coff_symbol32 *	access:private
llvm::object::COFFObjectFile::base_reloc_begin	COFF.h	/^  base_reloc_iterator base_reloc_begin() const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:base_reloc_iterator	access:public	signature:() const
llvm::object::COFFObjectFile::base_reloc_end	COFF.h	/^  base_reloc_iterator base_reloc_end() const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:base_reloc_iterator	access:public	signature:() const
llvm::object::COFFObjectFile::base_relocs	COFF.h	/^  iterator_range<base_reloc_iterator> base_relocs() const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:iterator_range<base_reloc_iterator>	access:public	signature:() const
llvm::object::COFFObjectFile::classof	COFF.h	/^  static inline bool classof(const Binary *v) { return v->isCOFF(); }$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:bool	access:public	signature:(const Binary * v)
llvm::object::COFFObjectFile::debug_directories	COFF.h	/^  iterator_range<const debug_directory *> debug_directories() const {$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:iterator_range<const debug_directory * >	access:public	signature:() const
llvm::object::COFFObjectFile::debug_directory_begin	COFF.h	/^  const debug_directory *debug_directory_begin() const {$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:const debug_directory *	access:public	signature:() const
llvm::object::COFFObjectFile::debug_directory_end	COFF.h	/^  const debug_directory *debug_directory_end() const {$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:const debug_directory *	access:public	signature:() const
llvm::object::COFFObjectFile::delay_import_directories	COFF.h	/^      delay_import_directories() const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:iterator_range<delay_import_directory_iterator>	access:public	signature:() const
llvm::object::COFFObjectFile::delay_import_directory_begin	COFF.h	/^  delay_import_directory_iterator delay_import_directory_begin() const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:delay_import_directory_iterator	access:public	signature:() const
llvm::object::COFFObjectFile::delay_import_directory_end	COFF.h	/^  delay_import_directory_iterator delay_import_directory_end() const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:delay_import_directory_iterator	access:public	signature:() const
llvm::object::COFFObjectFile::export_directories	COFF.h	/^  iterator_range<export_directory_iterator> export_directories() const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:iterator_range<export_directory_iterator>	access:public	signature:() const
llvm::object::COFFObjectFile::export_directory_begin	COFF.h	/^  export_directory_iterator export_directory_begin() const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:export_directory_iterator	access:public	signature:() const
llvm::object::COFFObjectFile::export_directory_end	COFF.h	/^  export_directory_iterator export_directory_end() const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:export_directory_iterator	access:public	signature:() const
llvm::object::COFFObjectFile::getArch	COFF.h	/^  unsigned getArch() const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:unsigned	access:public	signature:() const
llvm::object::COFFObjectFile::getAuxSymbol	COFF.h	/^  std::error_code getAuxSymbol(uint32_t index, const T *&Res) const {$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:public	signature:(uint32_t index,const T * & Res) const
llvm::object::COFFObjectFile::getBytesInAddress	COFF.h	/^  uint8_t getBytesInAddress() const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:uint8_t	access:public	signature:() const
llvm::object::COFFObjectFile::getCOFFRelocation	COFF.h	/^  const coff_relocation *getCOFFRelocation(const RelocationRef &Reloc) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:const coff_relocation *	access:public	signature:(const RelocationRef & Reloc) const
llvm::object::COFFObjectFile::getCOFFSection	COFF.h	/^  const coff_section *getCOFFSection(const SectionRef &Section) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:const coff_section *	access:public	signature:(const SectionRef & Section) const
llvm::object::COFFObjectFile::getCOFFSymbol	COFF.h	/^  COFFSymbolRef getCOFFSymbol(const DataRefImpl &Ref) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:COFFSymbolRef	access:public	signature:(const DataRefImpl & Ref) const
llvm::object::COFFObjectFile::getCOFFSymbol	COFF.h	/^  COFFSymbolRef getCOFFSymbol(const SymbolRef &Symbol) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:COFFSymbolRef	access:public	signature:(const SymbolRef & Symbol) const
llvm::object::COFFObjectFile::getCharacteristics	COFF.h	/^  uint16_t getCharacteristics() const {$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:uint16_t	access:public	signature:() const
llvm::object::COFFObjectFile::getCommonSymbolSizeImpl	COFF.h	/^  uint64_t getCommonSymbolSizeImpl(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Symb) const
llvm::object::COFFObjectFile::getDOSHeader	COFF.h	/^  const dos_header *getDOSHeader() const {$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:const dos_header *	access:public	signature:() const
llvm::object::COFFObjectFile::getDataDirectory	COFF.h	/^  std::error_code getDataDirectory(uint32_t index,$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:public	signature:(uint32_t index,const data_directory * & Res) const
llvm::object::COFFObjectFile::getDebugPDBInfo	COFF.h	/^  std::error_code getDebugPDBInfo(const codeview::DebugInfo *&Info,$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:public	signature:(const codeview::DebugInfo * & Info,StringRef & PDBFileName) const
llvm::object::COFFObjectFile::getDebugPDBInfo	COFF.h	/^  std::error_code getDebugPDBInfo(const debug_directory *DebugDir,$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:public	signature:(const debug_directory * DebugDir,const codeview::DebugInfo * & Info,StringRef & PDBFileName) const
llvm::object::COFFObjectFile::getFeatures	COFF.h	/^  SubtargetFeatures getFeatures() const override { return SubtargetFeatures(); }$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:SubtargetFeatures	access:public	signature:() const
llvm::object::COFFObjectFile::getFileFormatName	COFF.h	/^  StringRef getFileFormatName() const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:StringRef	access:public	signature:() const
llvm::object::COFFObjectFile::getHintName	COFF.h	/^  std::error_code getHintName(uint32_t Rva, uint16_t &Hint,$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:public	signature:(uint32_t Rva,uint16_t & Hint,StringRef & Name) const
llvm::object::COFFObjectFile::getImageBase	COFF.h	/^  uint64_t getImageBase() const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:uint64_t	access:public	signature:() const
llvm::object::COFFObjectFile::getMachine	COFF.h	/^  uint16_t getMachine() const {$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:uint16_t	access:public	signature:() const
llvm::object::COFFObjectFile::getNumberOfSections	COFF.h	/^  uint32_t getNumberOfSections() const {$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:uint32_t	access:public	signature:() const
llvm::object::COFFObjectFile::getNumberOfSymbols	COFF.h	/^  uint32_t getNumberOfSymbols() const {$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:uint32_t	access:public	signature:() const
llvm::object::COFFObjectFile::getPE32Header	COFF.h	/^  std::error_code getPE32Header(const pe32_header *&Res) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:public	signature:(const pe32_header * & Res) const
llvm::object::COFFObjectFile::getPE32PlusHeader	COFF.h	/^  std::error_code getPE32PlusHeader(const pe32plus_header *&Res) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:public	signature:(const pe32plus_header * & Res) const
llvm::object::COFFObjectFile::getPointerToSymbolTable	COFF.h	/^  uint32_t getPointerToSymbolTable() const {$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:uint32_t	access:public	signature:() const
llvm::object::COFFObjectFile::getRawNumberOfSymbols	COFF.h	/^  uint32_t getRawNumberOfSymbols() const {$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:uint32_t	access:public	signature:() const
llvm::object::COFFObjectFile::getRelocationOffset	COFF.h	/^  uint64_t getRelocationOffset(DataRefImpl Rel) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Rel) const
llvm::object::COFFObjectFile::getRelocationSymbol	COFF.h	/^  symbol_iterator getRelocationSymbol(DataRefImpl Rel) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:symbol_iterator	access:protected	signature:(DataRefImpl Rel) const
llvm::object::COFFObjectFile::getRelocationType	COFF.h	/^  uint64_t getRelocationType(DataRefImpl Rel) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Rel) const
llvm::object::COFFObjectFile::getRelocationTypeName	COFF.h	/^  void getRelocationTypeName(DataRefImpl Rel,$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:void	access:protected	signature:(DataRefImpl Rel,SmallVectorImpl<char> & Result) const
llvm::object::COFFObjectFile::getRelocations	COFF.h	/^  getRelocations(const coff_section *Sec) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:iterator_range<const coff_relocation * >	access:public	signature:(const coff_section * Sec) const
llvm::object::COFFObjectFile::getRvaAndSizeAsBytes	COFF.h	/^  std::error_code getRvaAndSizeAsBytes(uint32_t RVA, uint32_t Size,$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:public	signature:(uint32_t RVA,uint32_t Size,ArrayRef<uint8_t> & Contents) const
llvm::object::COFFObjectFile::getRvaPtr	COFF.h	/^  std::error_code getRvaPtr(uint32_t Rva, uintptr_t &Res) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:public	signature:(uint32_t Rva,uintptr_t & Res) const
llvm::object::COFFObjectFile::getSection	COFF.h	/^  std::error_code getSection(int32_t index, const coff_section *&Res) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:public	signature:(int32_t index,const coff_section * & Res) const
llvm::object::COFFObjectFile::getSectionAddress	COFF.h	/^  uint64_t getSectionAddress(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Sec) const
llvm::object::COFFObjectFile::getSectionAlignment	COFF.h	/^  uint64_t getSectionAlignment(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Sec) const
llvm::object::COFFObjectFile::getSectionContents	COFF.h	/^  std::error_code getSectionContents(DataRefImpl Sec,$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:protected	signature:(DataRefImpl Sec,StringRef & Res) const
llvm::object::COFFObjectFile::getSectionContents	COFF.h	/^  std::error_code getSectionContents(const coff_section *Sec,$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:public	signature:(const coff_section * Sec,ArrayRef<uint8_t> & Res) const
llvm::object::COFFObjectFile::getSectionID	COFF.h	/^  unsigned getSectionID(SectionRef Sec) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:unsigned	access:public	signature:(SectionRef Sec) const
llvm::object::COFFObjectFile::getSectionName	COFF.h	/^  std::error_code getSectionName(DataRefImpl Sec,$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:protected	signature:(DataRefImpl Sec,StringRef & Res) const
llvm::object::COFFObjectFile::getSectionName	COFF.h	/^  std::error_code getSectionName(const coff_section *Sec, StringRef &Res) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:public	signature:(const coff_section * Sec,StringRef & Res) const
llvm::object::COFFObjectFile::getSectionSize	COFF.h	/^  uint64_t getSectionSize(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Sec) const
llvm::object::COFFObjectFile::getSectionSize	COFF.h	/^  uint64_t getSectionSize(const coff_section *Sec) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:uint64_t	access:public	signature:(const coff_section * Sec) const
llvm::object::COFFObjectFile::getSizeOfOptionalHeader	COFF.h	/^  uint16_t getSizeOfOptionalHeader() const {$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:uint16_t	access:public	signature:() const
llvm::object::COFFObjectFile::getString	COFF.h	/^  std::error_code getString(uint32_t offset, StringRef &Res) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:private	signature:(uint32_t offset,StringRef & Res) const
llvm::object::COFFObjectFile::getSymbol	COFF.h	/^  ErrorOr<COFFSymbolRef> getSymbol(uint32_t index) const {$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:ErrorOr<COFFSymbolRef>	access:public	signature:(uint32_t index) const
llvm::object::COFFObjectFile::getSymbol	COFF.h	/^  std::error_code getSymbol(uint32_t Index,$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:public	signature:(uint32_t Index,const coff_symbol_type * & Res) const
llvm::object::COFFObjectFile::getSymbolAddress	COFF.h	/^  Expected<uint64_t> getSymbolAddress(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:Expected<uint64_t>	access:protected	signature:(DataRefImpl Symb) const
llvm::object::COFFObjectFile::getSymbolAlignment	COFF.h	/^  uint32_t getSymbolAlignment(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:uint32_t	access:protected	signature:(DataRefImpl Symb) const
llvm::object::COFFObjectFile::getSymbolAuxData	COFF.h	/^  ArrayRef<uint8_t> getSymbolAuxData(COFFSymbolRef Symbol) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:ArrayRef<uint8_t>	access:public	signature:(COFFSymbolRef Symbol) const
llvm::object::COFFObjectFile::getSymbolFlags	COFF.h	/^  uint32_t getSymbolFlags(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:uint32_t	access:protected	signature:(DataRefImpl Symb) const
llvm::object::COFFObjectFile::getSymbolName	COFF.h	/^  Expected<StringRef> getSymbolName(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:Expected<StringRef>	access:protected	signature:(DataRefImpl Symb) const
llvm::object::COFFObjectFile::getSymbolName	COFF.h	/^  std::error_code getSymbolName(COFFSymbolRef Symbol, StringRef &Res) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:public	signature:(COFFSymbolRef Symbol,StringRef & Res) const
llvm::object::COFFObjectFile::getSymbolName	COFF.h	/^  std::error_code getSymbolName(const coff_symbol_generic *Symbol,$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:public	signature:(const coff_symbol_generic * Symbol,StringRef & Res) const
llvm::object::COFFObjectFile::getSymbolSection	COFF.h	/^  Expected<section_iterator> getSymbolSection(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:Expected<section_iterator>	access:protected	signature:(DataRefImpl Symb) const
llvm::object::COFFObjectFile::getSymbolSectionID	COFF.h	/^  unsigned getSymbolSectionID(SymbolRef Sym) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:unsigned	access:public	signature:(SymbolRef Sym) const
llvm::object::COFFObjectFile::getSymbolTable	COFF.h	/^  uintptr_t getSymbolTable() const {$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:uintptr_t	access:public	signature:() const
llvm::object::COFFObjectFile::getSymbolTableEntrySize	COFF.h	/^  size_t getSymbolTableEntrySize() const {$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:size_t	access:public	signature:() const
llvm::object::COFFObjectFile::getSymbolType	COFF.h	/^  Expected<SymbolRef::Type> getSymbolType(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:Expected<SymbolRef::Type>	access:protected	signature:(DataRefImpl Symb) const
llvm::object::COFFObjectFile::getSymbolValueImpl	COFF.h	/^  uint64_t getSymbolValueImpl(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Symb) const
llvm::object::COFFObjectFile::getTimeDateStamp	COFF.h	/^  uint32_t getTimeDateStamp() const {$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:uint32_t	access:public	signature:() const
llvm::object::COFFObjectFile::getVaPtr	COFF.h	/^  std::error_code getVaPtr(uint64_t VA, uintptr_t &Res) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:public	signature:(uint64_t VA,uintptr_t & Res) const
llvm::object::COFFObjectFile::import_directories	COFF.h	/^  iterator_range<import_directory_iterator> import_directories() const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:iterator_range<import_directory_iterator>	access:public	signature:() const
llvm::object::COFFObjectFile::import_directory_begin	COFF.h	/^  import_directory_iterator import_directory_begin() const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:import_directory_iterator	access:public	signature:() const
llvm::object::COFFObjectFile::import_directory_end	COFF.h	/^  import_directory_iterator import_directory_end() const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:import_directory_iterator	access:public	signature:() const
llvm::object::COFFObjectFile::initBaseRelocPtr	COFF.h	/^  std::error_code initBaseRelocPtr();$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:private	signature:()
llvm::object::COFFObjectFile::initDebugDirectoryPtr	COFF.h	/^  std::error_code initDebugDirectoryPtr();$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:private	signature:()
llvm::object::COFFObjectFile::initDelayImportTablePtr	COFF.h	/^  std::error_code initDelayImportTablePtr();$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:private	signature:()
llvm::object::COFFObjectFile::initExportTablePtr	COFF.h	/^  std::error_code initExportTablePtr();$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:private	signature:()
llvm::object::COFFObjectFile::initImportTablePtr	COFF.h	/^  std::error_code initImportTablePtr();$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:private	signature:()
llvm::object::COFFObjectFile::initSymbolTablePtr	COFF.h	/^  std::error_code initSymbolTablePtr();$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:std::error_code	access:private	signature:()
llvm::object::COFFObjectFile::is64	COFF.h	/^  bool is64() const { return PE32PlusHeader; }$/;"	kind:f	class:llvm::object::COFFObjectFile	typeref:typename:bool	access:public	signature:() const
llvm::object::COFFObjectFile::isRelocatableObject	COFF.h	/^  bool isRelocatableObject() const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:bool	access:public	signature:() const
llvm::object::COFFObjectFile::isSectionBSS	COFF.h	/^  bool isSectionBSS(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:bool	access:protected	signature:(DataRefImpl Sec) const
llvm::object::COFFObjectFile::isSectionCompressed	COFF.h	/^  bool isSectionCompressed(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:bool	access:protected	signature:(DataRefImpl Sec) const
llvm::object::COFFObjectFile::isSectionData	COFF.h	/^  bool isSectionData(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:bool	access:protected	signature:(DataRefImpl Sec) const
llvm::object::COFFObjectFile::isSectionText	COFF.h	/^  bool isSectionText(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:bool	access:protected	signature:(DataRefImpl Sec) const
llvm::object::COFFObjectFile::isSectionVirtual	COFF.h	/^  bool isSectionVirtual(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:bool	access:protected	signature:(DataRefImpl Sec) const
llvm::object::COFFObjectFile::moveRelocationNext	COFF.h	/^  void moveRelocationNext(DataRefImpl &Rel) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:void	access:protected	signature:(DataRefImpl & Rel) const
llvm::object::COFFObjectFile::moveSectionNext	COFF.h	/^  void moveSectionNext(DataRefImpl &Sec) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:void	access:protected	signature:(DataRefImpl & Sec) const
llvm::object::COFFObjectFile::moveSymbolNext	COFF.h	/^  void moveSymbolNext(DataRefImpl &Symb) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:void	access:protected	signature:(DataRefImpl & Symb) const
llvm::object::COFFObjectFile::section_begin	COFF.h	/^  section_iterator section_begin() const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:section_iterator	access:public	signature:() const
llvm::object::COFFObjectFile::section_end	COFF.h	/^  section_iterator section_end() const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:section_iterator	access:public	signature:() const
llvm::object::COFFObjectFile::section_rel_begin	COFF.h	/^  relocation_iterator section_rel_begin(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:relocation_iterator	access:protected	signature:(DataRefImpl Sec) const
llvm::object::COFFObjectFile::section_rel_end	COFF.h	/^  relocation_iterator section_rel_end(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:relocation_iterator	access:protected	signature:(DataRefImpl Sec) const
llvm::object::COFFObjectFile::symbol_begin	COFF.h	/^  basic_symbol_iterator symbol_begin() const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:basic_symbol_iterator	access:public	signature:() const
llvm::object::COFFObjectFile::symbol_end	COFF.h	/^  basic_symbol_iterator symbol_end() const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:basic_symbol_iterator	access:public	signature:() const
llvm::object::COFFObjectFile::toRel	COFF.h	/^  const coff_relocation *toRel(DataRefImpl Rel) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:const coff_relocation *	access:private	signature:(DataRefImpl Rel) const
llvm::object::COFFObjectFile::toSec	COFF.h	/^  const coff_section *toSec(DataRefImpl Sec) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:const coff_section *	access:private	signature:(DataRefImpl Sec) const
llvm::object::COFFObjectFile::toSymb	COFF.h	/^  const coff_symbol_type *toSymb(DataRefImpl Symb) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:const coff_symbol_type *	access:private	signature:(DataRefImpl Symb) const
llvm::object::COFFSymbolRef	COFF.h	/^class COFFSymbolRef {$/;"	kind:c	namespace:llvm::object
llvm::object::COFFSymbolRef::COFFSymbolRef	COFF.h	/^  COFFSymbolRef() : CS16(nullptr), CS32(nullptr) {}$/;"	kind:f	class:llvm::object::COFFSymbolRef	access:public	signature:()
llvm::object::COFFSymbolRef::COFFSymbolRef	COFF.h	/^  COFFSymbolRef(const coff_symbol16 *CS) : CS16(CS), CS32(nullptr) {}$/;"	kind:f	class:llvm::object::COFFSymbolRef	access:public	signature:(const coff_symbol16 * CS)
llvm::object::COFFSymbolRef::COFFSymbolRef	COFF.h	/^  COFFSymbolRef(const coff_symbol32 *CS) : CS16(nullptr), CS32(CS) {}$/;"	kind:f	class:llvm::object::COFFSymbolRef	access:public	signature:(const coff_symbol32 * CS)
llvm::object::COFFSymbolRef::CS16	COFF.h	/^  const coff_symbol16 *CS16;$/;"	kind:m	class:llvm::object::COFFSymbolRef	typeref:typename:const coff_symbol16 *	access:private
llvm::object::COFFSymbolRef::CS32	COFF.h	/^  const coff_symbol32 *CS32;$/;"	kind:m	class:llvm::object::COFFSymbolRef	typeref:typename:const coff_symbol32 *	access:private
llvm::object::COFFSymbolRef::getBaseType	COFF.h	/^  uint8_t getBaseType() const { return getType() & 0x0F; }$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:uint8_t	access:public	signature:() const
llvm::object::COFFSymbolRef::getComplexType	COFF.h	/^  uint8_t getComplexType() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:uint8_t	access:public	signature:() const
llvm::object::COFFSymbolRef::getGeneric	COFF.h	/^  const coff_symbol_generic *getGeneric() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:const coff_symbol_generic *	access:public	signature:() const
llvm::object::COFFSymbolRef::getNumberOfAuxSymbols	COFF.h	/^  uint8_t getNumberOfAuxSymbols() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:uint8_t	access:public	signature:() const
llvm::object::COFFSymbolRef::getRawPtr	COFF.h	/^  const void *getRawPtr() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:const void *	access:public	signature:() const
llvm::object::COFFSymbolRef::getSectionNumber	COFF.h	/^  int32_t getSectionNumber() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:int32_t	access:public	signature:() const
llvm::object::COFFSymbolRef::getShortName	COFF.h	/^  const char *getShortName() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:const char *	access:public	signature:() const
llvm::object::COFFSymbolRef::getStorageClass	COFF.h	/^  uint8_t getStorageClass() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:uint8_t	access:public	signature:() const
llvm::object::COFFSymbolRef::getStringTableOffset	COFF.h	/^  const StringTableOffset &getStringTableOffset() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:const StringTableOffset &	access:public	signature:() const
llvm::object::COFFSymbolRef::getType	COFF.h	/^  uint16_t getType() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:uint16_t	access:public	signature:() const
llvm::object::COFFSymbolRef::getValue	COFF.h	/^  uint32_t getValue() const { return CS16 ? CS16->Value : CS32->Value; }$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:uint32_t	access:public	signature:() const
llvm::object::COFFSymbolRef::isAbsolute	COFF.h	/^  bool isAbsolute() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:bool	access:public	signature:() const
llvm::object::COFFSymbolRef::isAnyUndefined	COFF.h	/^  bool isAnyUndefined() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:bool	access:public	signature:() const
llvm::object::COFFSymbolRef::isBigObj	COFF.h	/^  bool isBigObj() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:bool	access:public	signature:() const
llvm::object::COFFSymbolRef::isCLRToken	COFF.h	/^  bool isCLRToken() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:bool	access:public	signature:() const
llvm::object::COFFSymbolRef::isCommon	COFF.h	/^  bool isCommon() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:bool	access:public	signature:() const
llvm::object::COFFSymbolRef::isExternal	COFF.h	/^  bool isExternal() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:bool	access:public	signature:() const
llvm::object::COFFSymbolRef::isFileRecord	COFF.h	/^  bool isFileRecord() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:bool	access:public	signature:() const
llvm::object::COFFSymbolRef::isFunctionDefinition	COFF.h	/^  bool isFunctionDefinition() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:bool	access:public	signature:() const
llvm::object::COFFSymbolRef::isFunctionLineInfo	COFF.h	/^  bool isFunctionLineInfo() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:bool	access:public	signature:() const
llvm::object::COFFSymbolRef::isSection	COFF.h	/^  bool isSection() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:bool	access:public	signature:() const
llvm::object::COFFSymbolRef::isSectionDefinition	COFF.h	/^  bool isSectionDefinition() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:bool	access:public	signature:() const
llvm::object::COFFSymbolRef::isSet	COFF.h	/^  bool isSet() const { return CS16 || CS32; }$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:bool	access:private	signature:() const
llvm::object::COFFSymbolRef::isUndefined	COFF.h	/^  bool isUndefined() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:bool	access:public	signature:() const
llvm::object::COFFSymbolRef::isWeakExternal	COFF.h	/^  bool isWeakExternal() const {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:bool	access:public	signature:() const
llvm::object::COFFSymbolRef::operator <	COFF.h	/^  friend bool operator<(COFFSymbolRef A, COFFSymbolRef B) {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:bool	access:public	signature:(COFFSymbolRef A,COFFSymbolRef B)
llvm::object::DataRefImpl	SymbolicFile.h	/^union DataRefImpl {$/;"	kind:u	namespace:llvm::object
llvm::object::DataRefImpl::DataRefImpl	SymbolicFile.h	/^  DataRefImpl() { std::memset(this, 0, sizeof(DataRefImpl)); }$/;"	kind:f	union:llvm::object::DataRefImpl	access:public	signature:()
llvm::object::DataRefImpl::__anone70cca9d0108	SymbolicFile.h	/^  struct {$/;"	kind:s	union:llvm::object::DataRefImpl	access:public
llvm::object::DataRefImpl::__anone70cca9d0108::a	SymbolicFile.h	/^    uint32_t a, b;$/;"	kind:m	struct:llvm::object::DataRefImpl::__anone70cca9d0108	typeref:typename:uint32_t	access:public
llvm::object::DataRefImpl::__anone70cca9d0108::b	SymbolicFile.h	/^    uint32_t a, b;$/;"	kind:m	struct:llvm::object::DataRefImpl::__anone70cca9d0108	typeref:typename:uint32_t	access:public
llvm::object::DataRefImpl::d	SymbolicFile.h	/^  } d;$/;"	kind:m	union:llvm::object::DataRefImpl	typeref:struct:llvm::object::DataRefImpl::__anone70cca9d0108	access:public
llvm::object::DataRefImpl::p	SymbolicFile.h	/^  uintptr_t p;$/;"	kind:m	union:llvm::object::DataRefImpl	typeref:typename:uintptr_t	access:public
llvm::object::DelayImportDirectoryEntryRef	COFF.h	/^class DelayImportDirectoryEntryRef {$/;"	kind:c	namespace:llvm::object
llvm::object::DelayImportDirectoryEntryRef::DelayImportDirectoryEntryRef	COFF.h	/^  DelayImportDirectoryEntryRef() : OwningObject(nullptr) {}$/;"	kind:f	class:llvm::object::DelayImportDirectoryEntryRef	access:public	signature:()
llvm::object::DelayImportDirectoryEntryRef::DelayImportDirectoryEntryRef	COFF.h	/^  DelayImportDirectoryEntryRef(const delay_import_directory_table_entry *T,$/;"	kind:f	class:llvm::object::DelayImportDirectoryEntryRef	access:public	signature:(const delay_import_directory_table_entry * T,uint32_t I,const COFFObjectFile * Owner)
llvm::object::DelayImportDirectoryEntryRef::Index	COFF.h	/^  uint32_t Index;$/;"	kind:m	class:llvm::object::DelayImportDirectoryEntryRef	typeref:typename:uint32_t	access:private
llvm::object::DelayImportDirectoryEntryRef::OwningObject	COFF.h	/^  const COFFObjectFile *OwningObject;$/;"	kind:m	class:llvm::object::DelayImportDirectoryEntryRef	typeref:typename:const COFFObjectFile *	access:private
llvm::object::DelayImportDirectoryEntryRef::Table	COFF.h	/^  const delay_import_directory_table_entry *Table;$/;"	kind:m	class:llvm::object::DelayImportDirectoryEntryRef	typeref:typename:const delay_import_directory_table_entry *	access:private
llvm::object::DelayImportDirectoryEntryRef::getDelayImportTable	COFF.h	/^  std::error_code getDelayImportTable($/;"	kind:p	class:llvm::object::DelayImportDirectoryEntryRef	typeref:typename:std::error_code	access:public	signature:(const delay_import_directory_table_entry * & Result) const
llvm::object::DelayImportDirectoryEntryRef::getImportAddress	COFF.h	/^  std::error_code getImportAddress(int AddrIndex, uint64_t &Result) const;$/;"	kind:p	class:llvm::object::DelayImportDirectoryEntryRef	typeref:typename:std::error_code	access:public	signature:(int AddrIndex,uint64_t & Result) const
llvm::object::DelayImportDirectoryEntryRef::getName	COFF.h	/^  std::error_code getName(StringRef &Result) const;$/;"	kind:p	class:llvm::object::DelayImportDirectoryEntryRef	typeref:typename:std::error_code	access:public	signature:(StringRef & Result) const
llvm::object::DelayImportDirectoryEntryRef::imported_symbol_begin	COFF.h	/^  imported_symbol_iterator imported_symbol_begin() const;$/;"	kind:p	class:llvm::object::DelayImportDirectoryEntryRef	typeref:typename:imported_symbol_iterator	access:public	signature:() const
llvm::object::DelayImportDirectoryEntryRef::imported_symbol_end	COFF.h	/^  imported_symbol_iterator imported_symbol_end() const;$/;"	kind:p	class:llvm::object::DelayImportDirectoryEntryRef	typeref:typename:imported_symbol_iterator	access:public	signature:() const
llvm::object::DelayImportDirectoryEntryRef::imported_symbols	COFF.h	/^  iterator_range<imported_symbol_iterator> imported_symbols() const;$/;"	kind:p	class:llvm::object::DelayImportDirectoryEntryRef	typeref:typename:iterator_range<imported_symbol_iterator>	access:public	signature:() const
llvm::object::DelayImportDirectoryEntryRef::moveNext	COFF.h	/^  void moveNext();$/;"	kind:p	class:llvm::object::DelayImportDirectoryEntryRef	typeref:typename:void	access:public	signature:()
llvm::object::DelayImportDirectoryEntryRef::operator ==	COFF.h	/^  bool operator==(const DelayImportDirectoryEntryRef &Other) const;$/;"	kind:p	class:llvm::object::DelayImportDirectoryEntryRef	typeref:typename:bool	access:public	signature:(const DelayImportDirectoryEntryRef & Other) const
llvm::object::DiceRef	MachO.h	/^class DiceRef {$/;"	kind:c	namespace:llvm::object
llvm::object::DiceRef::DicePimpl	MachO.h	/^  DataRefImpl DicePimpl;$/;"	kind:m	class:llvm::object::DiceRef	typeref:typename:DataRefImpl	access:private
llvm::object::DiceRef::DiceRef	MachO.h	/^  DiceRef() : OwningObject(nullptr) { }$/;"	kind:f	class:llvm::object::DiceRef	access:public	signature:()
llvm::object::DiceRef::DiceRef	MachO.h	/^  DiceRef(DataRefImpl DiceP, const ObjectFile *Owner);$/;"	kind:p	class:llvm::object::DiceRef	access:public	signature:(DataRefImpl DiceP,const ObjectFile * Owner)
llvm::object::DiceRef::DiceRef	MachO.h	/^inline DiceRef::DiceRef(DataRefImpl DiceP, const ObjectFile *Owner)$/;"	kind:f	class:llvm::object::DiceRef	signature:(DataRefImpl DiceP,const ObjectFile * Owner)
llvm::object::DiceRef::OwningObject	MachO.h	/^  const ObjectFile *OwningObject;$/;"	kind:m	class:llvm::object::DiceRef	typeref:typename:const ObjectFile *	access:private
llvm::object::DiceRef::getKind	MachO.h	/^  std::error_code getKind(uint16_t &Result) const;$/;"	kind:p	class:llvm::object::DiceRef	typeref:typename:std::error_code	access:public	signature:(uint16_t & Result) const
llvm::object::DiceRef::getKind	MachO.h	/^inline std::error_code DiceRef::getKind(uint16_t &Result) const {$/;"	kind:f	class:llvm::object::DiceRef	typeref:typename:std::error_code	signature:(uint16_t & Result) const
llvm::object::DiceRef::getLength	MachO.h	/^  std::error_code getLength(uint16_t &Result) const;$/;"	kind:p	class:llvm::object::DiceRef	typeref:typename:std::error_code	access:public	signature:(uint16_t & Result) const
llvm::object::DiceRef::getLength	MachO.h	/^inline std::error_code DiceRef::getLength(uint16_t &Result) const {$/;"	kind:f	class:llvm::object::DiceRef	typeref:typename:std::error_code	signature:(uint16_t & Result) const
llvm::object::DiceRef::getObjectFile	MachO.h	/^  const ObjectFile *getObjectFile() const;$/;"	kind:p	class:llvm::object::DiceRef	typeref:typename:const ObjectFile *	access:public	signature:() const
llvm::object::DiceRef::getObjectFile	MachO.h	/^inline const ObjectFile *DiceRef::getObjectFile() const {$/;"	kind:f	class:llvm::object::DiceRef	typeref:typename:const ObjectFile *	signature:() const
llvm::object::DiceRef::getOffset	MachO.h	/^  std::error_code getOffset(uint32_t &Result) const;$/;"	kind:p	class:llvm::object::DiceRef	typeref:typename:std::error_code	access:public	signature:(uint32_t & Result) const
llvm::object::DiceRef::getOffset	MachO.h	/^inline std::error_code DiceRef::getOffset(uint32_t &Result) const {$/;"	kind:f	class:llvm::object::DiceRef	typeref:typename:std::error_code	signature:(uint32_t & Result) const
llvm::object::DiceRef::getRawDataRefImpl	MachO.h	/^  DataRefImpl getRawDataRefImpl() const;$/;"	kind:p	class:llvm::object::DiceRef	typeref:typename:DataRefImpl	access:public	signature:() const
llvm::object::DiceRef::getRawDataRefImpl	MachO.h	/^inline DataRefImpl DiceRef::getRawDataRefImpl() const {$/;"	kind:f	class:llvm::object::DiceRef	typeref:typename:DataRefImpl	signature:() const
llvm::object::DiceRef::moveNext	MachO.h	/^  void moveNext();$/;"	kind:p	class:llvm::object::DiceRef	typeref:typename:void	access:public	signature:()
llvm::object::DiceRef::moveNext	MachO.h	/^inline void DiceRef::moveNext() {$/;"	kind:f	class:llvm::object::DiceRef	typeref:typename:void	signature:()
llvm::object::DiceRef::operator <	MachO.h	/^  bool operator<(const DiceRef &Other) const;$/;"	kind:p	class:llvm::object::DiceRef	typeref:typename:bool	access:public	signature:(const DiceRef & Other) const
llvm::object::DiceRef::operator <	MachO.h	/^inline bool DiceRef::operator<(const DiceRef &Other) const {$/;"	kind:f	class:llvm::object::DiceRef	typeref:typename:bool	signature:(const DiceRef & Other) const
llvm::object::DiceRef::operator ==	MachO.h	/^  bool operator==(const DiceRef &Other) const;$/;"	kind:p	class:llvm::object::DiceRef	typeref:typename:bool	access:public	signature:(const DiceRef & Other) const
llvm::object::DiceRef::operator ==	MachO.h	/^inline bool DiceRef::operator==(const DiceRef &Other) const {$/;"	kind:f	class:llvm::object::DiceRef	typeref:typename:bool	signature:(const DiceRef & Other) const
llvm::object::ELF32BE	ELFTypes.h	/^typedef ELFType<support::big, false> ELF32BE;$/;"	kind:t	namespace:llvm::object	typeref:typename:ELFType<support::big,false>
llvm::object::ELF32BEFile	ELF.h	/^typedef ELFFile<ELFType<support::big, false>> ELF32BEFile;$/;"	kind:t	namespace:llvm::object	typeref:typename:ELFFile<ELFType<support::big,false>>
llvm::object::ELF32BEObjectFile	ELFObjectFile.h	/^typedef ELFObjectFile<ELFType<support::big, false>> ELF32BEObjectFile;$/;"	kind:t	namespace:llvm::object	typeref:typename:ELFObjectFile<ELFType<support::big,false>>
llvm::object::ELF32LE	ELFTypes.h	/^typedef ELFType<support::little, false> ELF32LE;$/;"	kind:t	namespace:llvm::object	typeref:typename:ELFType<support::little,false>
llvm::object::ELF32LEFile	ELF.h	/^typedef ELFFile<ELFType<support::little, false>> ELF32LEFile;$/;"	kind:t	namespace:llvm::object	typeref:typename:ELFFile<ELFType<support::little,false>>
llvm::object::ELF32LEObjectFile	ELFObjectFile.h	/^typedef ELFObjectFile<ELFType<support::little, false>> ELF32LEObjectFile;$/;"	kind:t	namespace:llvm::object	typeref:typename:ELFObjectFile<ELFType<support::little,false>>
llvm::object::ELF64BE	ELFTypes.h	/^typedef ELFType<support::big, true> ELF64BE;$/;"	kind:t	namespace:llvm::object	typeref:typename:ELFType<support::big,true>
llvm::object::ELF64BEFile	ELF.h	/^typedef ELFFile<ELFType<support::big, true>> ELF64BEFile;$/;"	kind:t	namespace:llvm::object	typeref:typename:ELFFile<ELFType<support::big,true>>
llvm::object::ELF64BEObjectFile	ELFObjectFile.h	/^typedef ELFObjectFile<ELFType<support::big, true>> ELF64BEObjectFile;$/;"	kind:t	namespace:llvm::object	typeref:typename:ELFObjectFile<ELFType<support::big,true>>
llvm::object::ELF64LE	ELFTypes.h	/^typedef ELFType<support::little, true> ELF64LE;$/;"	kind:t	namespace:llvm::object	typeref:typename:ELFType<support::little,true>
llvm::object::ELF64LEFile	ELF.h	/^typedef ELFFile<ELFType<support::little, true>> ELF64LEFile;$/;"	kind:t	namespace:llvm::object	typeref:typename:ELFFile<ELFType<support::little,true>>
llvm::object::ELF64LEObjectFile	ELFObjectFile.h	/^typedef ELFObjectFile<ELFType<support::little, true>> ELF64LEObjectFile;$/;"	kind:t	namespace:llvm::object	typeref:typename:ELFObjectFile<ELFType<support::little,true>>
llvm::object::ELFDataTypeTypedefHelper	ELFTypes.h	/^struct ELFDataTypeTypedefHelper<ELFType<TargetEndianness, false>>$/;"	kind:s	namespace:llvm::object	inherits:ELFDataTypeTypedefHelperCommon<TargetEndianness>
llvm::object::ELFDataTypeTypedefHelper	ELFTypes.h	/^struct ELFDataTypeTypedefHelper<ELFType<TargetEndianness, true>>$/;"	kind:s	namespace:llvm::object	inherits:ELFDataTypeTypedefHelperCommon<TargetEndianness>
llvm::object::ELFDataTypeTypedefHelper::Elf_Addr	ELFTypes.h	/^      value_type, TargetEndianness, 2> Elf_Addr;$/;"	kind:t	struct:llvm::object::ELFDataTypeTypedefHelper	typeref:typename:support::detail::packed_endian_specific_integral<value_type,TargetEndianness,2>	access:public
llvm::object::ELFDataTypeTypedefHelper::Elf_Off	ELFTypes.h	/^      value_type, TargetEndianness, 2> Elf_Off;$/;"	kind:t	struct:llvm::object::ELFDataTypeTypedefHelper	typeref:typename:support::detail::packed_endian_specific_integral<value_type,TargetEndianness,2>	access:public
llvm::object::ELFDataTypeTypedefHelper::value_type	ELFTypes.h	/^  typedef uint32_t value_type;$/;"	kind:t	struct:llvm::object::ELFDataTypeTypedefHelper	typeref:typename:uint32_t	access:public
llvm::object::ELFDataTypeTypedefHelper::value_type	ELFTypes.h	/^  typedef uint64_t value_type;$/;"	kind:t	struct:llvm::object::ELFDataTypeTypedefHelper	typeref:typename:uint64_t	access:public
llvm::object::ELFDataTypeTypedefHelperCommon	ELFTypes.h	/^template <endianness target_endianness> struct ELFDataTypeTypedefHelperCommon {$/;"	kind:s	namespace:llvm::object
llvm::object::ELFDataTypeTypedefHelperCommon::Elf_Half	ELFTypes.h	/^      uint16_t, target_endianness, 2> Elf_Half;$/;"	kind:t	struct:llvm::object::ELFDataTypeTypedefHelperCommon	typeref:typename:support::detail::packed_endian_specific_integral<uint16_t,target_endianness,2>	access:public
llvm::object::ELFDataTypeTypedefHelperCommon::Elf_Sword	ELFTypes.h	/^      int32_t, target_endianness, 2> Elf_Sword;$/;"	kind:t	struct:llvm::object::ELFDataTypeTypedefHelperCommon	typeref:typename:support::detail::packed_endian_specific_integral<int32_t,target_endianness,2>	access:public
llvm::object::ELFDataTypeTypedefHelperCommon::Elf_Sxword	ELFTypes.h	/^      int64_t, target_endianness, 2> Elf_Sxword;$/;"	kind:t	struct:llvm::object::ELFDataTypeTypedefHelperCommon	typeref:typename:support::detail::packed_endian_specific_integral<int64_t,target_endianness,2>	access:public
llvm::object::ELFDataTypeTypedefHelperCommon::Elf_Word	ELFTypes.h	/^      uint32_t, target_endianness, 2> Elf_Word;$/;"	kind:t	struct:llvm::object::ELFDataTypeTypedefHelperCommon	typeref:typename:support::detail::packed_endian_specific_integral<uint32_t,target_endianness,2>	access:public
llvm::object::ELFDataTypeTypedefHelperCommon::Elf_Xword	ELFTypes.h	/^      uint64_t, target_endianness, 2> Elf_Xword;$/;"	kind:t	struct:llvm::object::ELFDataTypeTypedefHelperCommon	typeref:typename:support::detail::packed_endian_specific_integral<uint64_t,target_endianness,2>	access:public
llvm::object::ELFFile	ELF.h	/^class ELFFile {$/;"	kind:c	namespace:llvm::object
llvm::object::ELFFile::Buf	ELF.h	/^  StringRef Buf;$/;"	kind:m	class:llvm::object::ELFFile	typeref:typename:StringRef	access:private
llvm::object::ELFFile::ELFFile	ELF.h	/^  ELFFile(StringRef Object);$/;"	kind:p	class:llvm::object::ELFFile	access:public	signature:(StringRef Object)
llvm::object::ELFFile::ELFFile	ELF.h	/^ELFFile<ELFT>::ELFFile(StringRef Object) : Buf(Object) {$/;"	kind:f	class:llvm::object::ELFFile	signature:(StringRef Object)
llvm::object::ELFFile::Elf_Dyn	ELF.h	/^  typedef typename ELFT::Dyn Elf_Dyn;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::Dyn	access:public
llvm::object::ELFFile::Elf_Dyn_Range	ELF.h	/^  typedef typename ELFT::DynRange Elf_Dyn_Range;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::DynRange	access:public
llvm::object::ELFFile::Elf_Ehdr	ELF.h	/^  typedef typename ELFT::Ehdr Elf_Ehdr;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::Ehdr	access:public
llvm::object::ELFFile::Elf_GnuHash	ELF.h	/^  typedef typename ELFT::GnuHash Elf_GnuHash;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::GnuHash	access:public
llvm::object::ELFFile::Elf_Hash	ELF.h	/^  typedef typename ELFT::Hash Elf_Hash;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::Hash	access:public
llvm::object::ELFFile::Elf_Phdr	ELF.h	/^  typedef typename ELFT::Phdr Elf_Phdr;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::Phdr	access:public
llvm::object::ELFFile::Elf_Phdr_Range	ELF.h	/^  typedef typename ELFT::PhdrRange Elf_Phdr_Range;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::PhdrRange	access:public
llvm::object::ELFFile::Elf_Rel	ELF.h	/^  typedef typename ELFT::Rel Elf_Rel;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::Rel	access:public
llvm::object::ELFFile::Elf_Rel_Range	ELF.h	/^  typedef typename ELFT::RelRange Elf_Rel_Range;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::RelRange	access:public
llvm::object::ELFFile::Elf_Rela	ELF.h	/^  typedef typename ELFT::Rela Elf_Rela;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::Rela	access:public
llvm::object::ELFFile::Elf_Rela_Range	ELF.h	/^  typedef typename ELFT::RelaRange Elf_Rela_Range;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::RelaRange	access:public
llvm::object::ELFFile::Elf_Shdr	ELF.h	/^  typedef typename ELFT::Shdr Elf_Shdr;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::Shdr	access:public
llvm::object::ELFFile::Elf_Shdr_Range	ELF.h	/^  typedef typename ELFT::ShdrRange Elf_Shdr_Range;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::ShdrRange	access:public
llvm::object::ELFFile::Elf_Sym	ELF.h	/^  typedef typename ELFT::Sym Elf_Sym;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::Sym	access:public
llvm::object::ELFFile::Elf_Sym_Range	ELF.h	/^  typedef typename ELFT::SymRange Elf_Sym_Range;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::SymRange	access:public
llvm::object::ELFFile::Elf_Verdaux	ELF.h	/^  typedef typename ELFT::Verdaux Elf_Verdaux;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::Verdaux	access:public
llvm::object::ELFFile::Elf_Verdef	ELF.h	/^  typedef typename ELFT::Verdef Elf_Verdef;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::Verdef	access:public
llvm::object::ELFFile::Elf_Vernaux	ELF.h	/^  typedef typename ELFT::Vernaux Elf_Vernaux;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::Vernaux	access:public
llvm::object::ELFFile::Elf_Verneed	ELF.h	/^  typedef typename ELFT::Verneed Elf_Verneed;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::Verneed	access:public
llvm::object::ELFFile::Elf_Versym	ELF.h	/^  typedef typename ELFT::Versym Elf_Versym;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::Versym	access:public
llvm::object::ELFFile::VerifyStrTab	ELF.h	/^  void VerifyStrTab(const Elf_Shdr *sh) const;$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:void	access:public	signature:(const Elf_Shdr * sh) const
llvm::object::ELFFile::base	ELF.h	/^  const uint8_t *base() const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:const uint8_t *	access:public	signature:() const
llvm::object::ELFFile::getBufSize	ELF.h	/^  size_t getBufSize() const { return Buf.size(); }$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:size_t	access:public	signature:() const
llvm::object::ELFFile::getEntry	ELF.h	/^  Expected<const T *> getEntry(const Elf_Shdr *Section, uint32_t Entry) const;$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<const T * >	access:public	signature:(const Elf_Shdr * Section,uint32_t Entry) const
llvm::object::ELFFile::getEntry	ELF.h	/^  Expected<const T *> getEntry(uint32_t Section, uint32_t Entry) const;$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<const T * >	access:public	signature:(uint32_t Section,uint32_t Entry) const
llvm::object::ELFFile::getEntry	ELF.h	/^Expected<const T *> ELFFile<ELFT>::getEntry(const Elf_Shdr *Section,$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<const T * >	signature:(const Elf_Shdr * Section,uint32_t Entry) const
llvm::object::ELFFile::getEntry	ELF.h	/^Expected<const T *> ELFFile<ELFT>::getEntry(uint32_t Section,$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<const T * >	signature:(uint32_t Section,uint32_t Entry) const
llvm::object::ELFFile::getHeader	ELF.h	/^  const Elf_Ehdr *getHeader() const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:const Elf_Ehdr *	access:public	signature:() const
llvm::object::ELFFile::getRelocationSymbol	ELF.h	/^  Expected<const Elf_Sym *> getRelocationSymbol(const Elf_Rel *Rel,$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<const Elf_Sym * >	access:public	signature:(const Elf_Rel * Rel,const Elf_Shdr * SymTab) const
llvm::object::ELFFile::getRelocationSymbol	ELF.h	/^ELFFile<ELFT>::getRelocationSymbol(const Elf_Rel *Rel,$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<const typename ELFT::Sym * >	signature:(const Elf_Rel * Rel,const Elf_Shdr * SymTab) const
llvm::object::ELFFile::getRelocationTypeName	ELF.h	/^  StringRef getRelocationTypeName(uint32_t Type) const;$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:StringRef	access:public	signature:(uint32_t Type) const
llvm::object::ELFFile::getRelocationTypeName	ELF.h	/^  void getRelocationTypeName(uint32_t Type,$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:void	access:public	signature:(uint32_t Type,SmallVectorImpl<char> & Result) const
llvm::object::ELFFile::getRelocationTypeName	ELF.h	/^StringRef ELFFile<ELFT>::getRelocationTypeName(uint32_t Type) const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:StringRef	signature:(uint32_t Type) const
llvm::object::ELFFile::getRelocationTypeName	ELF.h	/^void ELFFile<ELFT>::getRelocationTypeName(uint32_t Type,$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:void	signature:(uint32_t Type,SmallVectorImpl<char> & Result) const
llvm::object::ELFFile::getSHNDXTable	ELF.h	/^  Expected<ArrayRef<Elf_Word>> getSHNDXTable(const Elf_Shdr &Section) const;$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<ArrayRef<Elf_Word>>	access:public	signature:(const Elf_Shdr & Section) const
llvm::object::ELFFile::getSHNDXTable	ELF.h	/^  Expected<ArrayRef<Elf_Word>> getSHNDXTable(const Elf_Shdr &Section,$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<ArrayRef<Elf_Word>>	access:public	signature:(const Elf_Shdr & Section,Elf_Shdr_Range Sections) const
llvm::object::ELFFile::getSHNDXTable	ELF.h	/^ELFFile<ELFT>::getSHNDXTable(const Elf_Shdr &Section) const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<ArrayRef<typename ELFT::Word>>	signature:(const Elf_Shdr & Section) const
llvm::object::ELFFile::getSHNDXTable	ELF.h	/^ELFFile<ELFT>::getSHNDXTable(const Elf_Shdr &Section,$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<ArrayRef<typename ELFT::Word>>	signature:(const Elf_Shdr & Section,Elf_Shdr_Range Sections) const
llvm::object::ELFFile::getSection	ELF.h	/^  Expected<const Elf_Shdr *> getSection(const Elf_Sym *Sym,$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<const Elf_Shdr * >	access:public	signature:(const Elf_Sym * Sym,Elf_Sym_Range Symtab,ArrayRef<Elf_Word> ShndxTable) const
llvm::object::ELFFile::getSection	ELF.h	/^  Expected<const Elf_Shdr *> getSection(const Elf_Sym *Sym,$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<const Elf_Shdr * >	access:public	signature:(const Elf_Sym * Sym,const Elf_Shdr * SymTab,ArrayRef<Elf_Word> ShndxTable) const
llvm::object::ELFFile::getSection	ELF.h	/^  Expected<const Elf_Shdr *> getSection(uint32_t Index) const;$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<const Elf_Shdr * >	access:public	signature:(uint32_t Index) const
llvm::object::ELFFile::getSection	ELF.h	/^ELFFile<ELFT>::getSection(const Elf_Sym *Sym, Elf_Sym_Range Symbols,$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<const typename ELFT::Shdr * >	signature:(const Elf_Sym * Sym,Elf_Sym_Range Symbols,ArrayRef<Elf_Word> ShndxTable) const
llvm::object::ELFFile::getSection	ELF.h	/^ELFFile<ELFT>::getSection(const Elf_Sym *Sym, const Elf_Shdr *SymTab,$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<const typename ELFT::Shdr * >	signature:(const Elf_Sym * Sym,const Elf_Shdr * SymTab,ArrayRef<Elf_Word> ShndxTable) const
llvm::object::ELFFile::getSection	ELF.h	/^ELFFile<ELFT>::getSection(uint32_t Index) const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<const typename ELFT::Shdr * >	signature:(uint32_t Index) const
llvm::object::ELFFile::getSectionContents	ELF.h	/^  Expected<ArrayRef<uint8_t>> getSectionContents(const Elf_Shdr *Sec) const;$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<ArrayRef<uint8_t>>	access:public	signature:(const Elf_Shdr * Sec) const
llvm::object::ELFFile::getSectionContents	ELF.h	/^ELFFile<ELFT>::getSectionContents(const Elf_Shdr *Sec) const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<ArrayRef<uint8_t>>	signature:(const Elf_Shdr * Sec) const
llvm::object::ELFFile::getSectionContentsAsArray	ELF.h	/^  Expected<ArrayRef<T>> getSectionContentsAsArray(const Elf_Shdr *Sec) const;$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<ArrayRef<T>>	access:public	signature:(const Elf_Shdr * Sec) const
llvm::object::ELFFile::getSectionContentsAsArray	ELF.h	/^ELFFile<ELFT>::getSectionContentsAsArray(const Elf_Shdr *Sec) const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<ArrayRef<T>>	signature:(const Elf_Shdr * Sec) const
llvm::object::ELFFile::getSectionIndex	ELF.h	/^  Expected<uint32_t> getSectionIndex(const Elf_Sym *Sym, Elf_Sym_Range Syms,$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<uint32_t>	access:public	signature:(const Elf_Sym * Sym,Elf_Sym_Range Syms,ArrayRef<Elf_Word> ShndxTable) const
llvm::object::ELFFile::getSectionIndex	ELF.h	/^ELFFile<ELFT>::getSectionIndex(const Elf_Sym *Sym, Elf_Sym_Range Syms,$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<uint32_t>	signature:(const Elf_Sym * Sym,Elf_Sym_Range Syms,ArrayRef<Elf_Word> ShndxTable) const
llvm::object::ELFFile::getSectionName	ELF.h	/^  Expected<StringRef> getSectionName(const Elf_Shdr *Section) const;$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<StringRef>	access:public	signature:(const Elf_Shdr * Section) const
llvm::object::ELFFile::getSectionName	ELF.h	/^  Expected<StringRef> getSectionName(const Elf_Shdr *Section,$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<StringRef>	access:public	signature:(const Elf_Shdr * Section,StringRef DotShstrtab) const
llvm::object::ELFFile::getSectionName	ELF.h	/^ELFFile<ELFT>::getSectionName(const Elf_Shdr *Section) const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<StringRef>	signature:(const Elf_Shdr * Section) const
llvm::object::ELFFile::getSectionName	ELF.h	/^Expected<StringRef> ELFFile<ELFT>::getSectionName(const Elf_Shdr *Section,$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<StringRef>	signature:(const Elf_Shdr * Section,StringRef DotShstrtab) const
llvm::object::ELFFile::getSectionStringTable	ELF.h	/^  Expected<StringRef> getSectionStringTable(Elf_Shdr_Range Sections) const;$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<StringRef>	access:public	signature:(Elf_Shdr_Range Sections) const
llvm::object::ELFFile::getSectionStringTable	ELF.h	/^ELFFile<ELFT>::getSectionStringTable(Elf_Shdr_Range Sections) const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<StringRef>	signature:(Elf_Shdr_Range Sections) const
llvm::object::ELFFile::getStringTable	ELF.h	/^  Expected<StringRef> getStringTable(const Elf_Shdr *Section) const;$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<StringRef>	access:public	signature:(const Elf_Shdr * Section) const
llvm::object::ELFFile::getStringTable	ELF.h	/^ELFFile<ELFT>::getStringTable(const Elf_Shdr *Section) const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<StringRef>	signature:(const Elf_Shdr * Section) const
llvm::object::ELFFile::getStringTableForSymtab	ELF.h	/^  Expected<StringRef> getStringTableForSymtab(const Elf_Shdr &Section) const;$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<StringRef>	access:public	signature:(const Elf_Shdr & Section) const
llvm::object::ELFFile::getStringTableForSymtab	ELF.h	/^  Expected<StringRef> getStringTableForSymtab(const Elf_Shdr &Section,$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<StringRef>	access:public	signature:(const Elf_Shdr & Section,Elf_Shdr_Range Sections) const
llvm::object::ELFFile::getStringTableForSymtab	ELF.h	/^ELFFile<ELFT>::getStringTableForSymtab(const Elf_Shdr &Sec) const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<StringRef>	signature:(const Elf_Shdr & Sec) const
llvm::object::ELFFile::getStringTableForSymtab	ELF.h	/^ELFFile<ELFT>::getStringTableForSymtab(const Elf_Shdr &Sec,$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<StringRef>	signature:(const Elf_Shdr & Sec,Elf_Shdr_Range Sections) const
llvm::object::ELFFile::getSymbol	ELF.h	/^  Expected<const Elf_Sym *> getSymbol(const Elf_Shdr *Sec,$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<const Elf_Sym * >	access:public	signature:(const Elf_Shdr * Sec,uint32_t Index) const
llvm::object::ELFFile::getSymbol	ELF.h	/^ELFFile<ELFT>::getSymbol(const Elf_Shdr *Sec, uint32_t Index) const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<const typename ELFT::Sym * >	signature:(const Elf_Shdr * Sec,uint32_t Index) const
llvm::object::ELFFile::isMips64EL	ELF.h	/^  bool isMips64EL() const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:bool	access:public	signature:() const
llvm::object::ELFFile::isMipsELF64	ELF.h	/^  bool isMipsELF64() const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:bool	access:public	signature:() const
llvm::object::ELFFile::program_headers	ELF.h	/^  Expected<Elf_Phdr_Range> program_headers() const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<Elf_Phdr_Range>	access:public	signature:() const
llvm::object::ELFFile::relas	ELF.h	/^  Expected<Elf_Rela_Range> relas(const Elf_Shdr *Sec) const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<Elf_Rela_Range>	access:public	signature:(const Elf_Shdr * Sec) const
llvm::object::ELFFile::rels	ELF.h	/^  Expected<Elf_Rel_Range> rels(const Elf_Shdr *Sec) const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<Elf_Rel_Range>	access:public	signature:(const Elf_Shdr * Sec) const
llvm::object::ELFFile::sections	ELF.h	/^  Expected<Elf_Shdr_Range> sections() const;$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<Elf_Shdr_Range>	access:public	signature:() const
llvm::object::ELFFile::sections	ELF.h	/^Expected<typename ELFT::ShdrRange> ELFFile<ELFT>::sections() const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<typename ELFT::ShdrRange>	signature:() const
llvm::object::ELFFile::symbols	ELF.h	/^  Expected<Elf_Sym_Range> symbols(const Elf_Shdr *Sec) const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<Elf_Sym_Range>	access:public	signature:(const Elf_Shdr * Sec) const
llvm::object::ELFFile::uintX_t	ELF.h	/^  typedef typename ELFT::uint uintX_t;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::uint	access:public
llvm::object::ELFObjectFile	ELFObjectFile.h	/^template <class ELFT> class ELFObjectFile : public ELFObjectFileBase {$/;"	kind:c	namespace:llvm::object	inherits:ELFObjectFileBase
llvm::object::ELFObjectFile::DotDynSymSec	ELFObjectFile.h	/^  const Elf_Shdr *DotDynSymSec = nullptr; \/\/ Dynamic symbol table section.$/;"	kind:m	class:llvm::object::ELFObjectFile	typeref:typename:const Elf_Shdr *	access:protected
llvm::object::ELFObjectFile::DotSymtabSec	ELFObjectFile.h	/^  const Elf_Shdr *DotSymtabSec = nullptr; \/\/ Symbol table section.$/;"	kind:m	class:llvm::object::ELFObjectFile	typeref:typename:const Elf_Shdr *	access:protected
llvm::object::ELFObjectFile::EF	ELFObjectFile.h	/^  ELFFile<ELFT> EF;$/;"	kind:m	class:llvm::object::ELFObjectFile	typeref:typename:ELFFile<ELFT>	access:protected
llvm::object::ELFObjectFile::ELFObjectFile	ELFObjectFile.h	/^  ELFObjectFile(MemoryBufferRef Object, std::error_code &EC);$/;"	kind:p	class:llvm::object::ELFObjectFile	access:public	signature:(MemoryBufferRef Object,std::error_code & EC)
llvm::object::ELFObjectFile::ELFObjectFile	ELFObjectFile.h	/^ELFObjectFile<ELFT>::ELFObjectFile(MemoryBufferRef Object, std::error_code &EC)$/;"	kind:f	class:llvm::object::ELFObjectFile	signature:(MemoryBufferRef Object,std::error_code & EC)
llvm::object::ELFObjectFile::Elf_Dyn	ELFObjectFile.h	/^  typedef typename ELFFile<ELFT>::Elf_Dyn Elf_Dyn;$/;"	kind:t	class:llvm::object::ELFObjectFile	typeref:typename:ELFFile<ELFT>::Elf_Dyn	access:public
llvm::object::ELFObjectFile::Elf_Ehdr	ELFObjectFile.h	/^  typedef typename ELFFile<ELFT>::Elf_Ehdr Elf_Ehdr;$/;"	kind:t	class:llvm::object::ELFObjectFile	typeref:typename:ELFFile<ELFT>::Elf_Ehdr	access:public
llvm::object::ELFObjectFile::Elf_Rel	ELFObjectFile.h	/^  typedef typename ELFFile<ELFT>::Elf_Rel Elf_Rel;$/;"	kind:t	class:llvm::object::ELFObjectFile	typeref:typename:ELFFile<ELFT>::Elf_Rel	access:public
llvm::object::ELFObjectFile::Elf_Rela	ELFObjectFile.h	/^  typedef typename ELFFile<ELFT>::Elf_Rela Elf_Rela;$/;"	kind:t	class:llvm::object::ELFObjectFile	typeref:typename:ELFFile<ELFT>::Elf_Rela	access:public
llvm::object::ELFObjectFile::Elf_Shdr	ELFObjectFile.h	/^  typedef typename ELFFile<ELFT>::Elf_Shdr Elf_Shdr;$/;"	kind:t	class:llvm::object::ELFObjectFile	typeref:typename:ELFFile<ELFT>::Elf_Shdr	access:public
llvm::object::ELFObjectFile::Elf_Sym	ELFObjectFile.h	/^  typedef typename ELFFile<ELFT>::Elf_Sym Elf_Sym;$/;"	kind:t	class:llvm::object::ELFObjectFile	typeref:typename:ELFFile<ELFT>::Elf_Sym	access:public
llvm::object::ELFObjectFile::ShndxTable	ELFObjectFile.h	/^  ArrayRef<Elf_Word> ShndxTable;$/;"	kind:m	class:llvm::object::ELFObjectFile	typeref:typename:ArrayRef<Elf_Word>	access:protected
llvm::object::ELFObjectFile::classof	ELFObjectFile.h	/^  static inline bool classof(const Binary *v) {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:bool	access:public	signature:(const Binary * v)
llvm::object::ELFObjectFile::dynamic_symbol_begin	ELFObjectFile.h	/^  elf_symbol_iterator dynamic_symbol_begin() const;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:elf_symbol_iterator	access:public	signature:() const
llvm::object::ELFObjectFile::dynamic_symbol_begin	ELFObjectFile.h	/^elf_symbol_iterator ELFObjectFile<ELFT>::dynamic_symbol_begin() const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:elf_symbol_iterator	signature:() const
llvm::object::ELFObjectFile::dynamic_symbol_end	ELFObjectFile.h	/^  elf_symbol_iterator dynamic_symbol_end() const;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:elf_symbol_iterator	access:public	signature:() const
llvm::object::ELFObjectFile::dynamic_symbol_end	ELFObjectFile.h	/^elf_symbol_iterator ELFObjectFile<ELFT>::dynamic_symbol_end() const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:elf_symbol_iterator	signature:() const
llvm::object::ELFObjectFile::getArch	ELFObjectFile.h	/^  unsigned getArch() const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:unsigned	access:public	signature:() const
llvm::object::ELFObjectFile::getArch	ELFObjectFile.h	/^unsigned ELFObjectFile<ELFT>::getArch() const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:unsigned	signature:() const
llvm::object::ELFObjectFile::getBytesInAddress	ELFObjectFile.h	/^  uint8_t getBytesInAddress() const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:uint8_t	access:public	signature:() const
llvm::object::ELFObjectFile::getBytesInAddress	ELFObjectFile.h	/^uint8_t ELFObjectFile<ELFT>::getBytesInAddress() const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:uint8_t	signature:() const
llvm::object::ELFObjectFile::getCommonSymbolSizeImpl	ELFObjectFile.h	/^  uint64_t getCommonSymbolSizeImpl(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Symb) const
llvm::object::ELFObjectFile::getCommonSymbolSizeImpl	ELFObjectFile.h	/^uint64_t ELFObjectFile<ELFT>::getCommonSymbolSizeImpl(DataRefImpl Symb) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	signature:(DataRefImpl Symb) const
llvm::object::ELFObjectFile::getDynamicSymbolIterators	ELFObjectFile.h	/^  elf_symbol_iterator_range getDynamicSymbolIterators() const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:elf_symbol_iterator_range	access:public	signature:() const
llvm::object::ELFObjectFile::getDynamicSymbolIterators	ELFObjectFile.h	/^ELFObjectFile<ELFT>::getDynamicSymbolIterators() const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:ELFObjectFileBase::elf_symbol_iterator_range	signature:() const
llvm::object::ELFObjectFile::getELFFile	ELFObjectFile.h	/^  const ELFFile<ELFT> *getELFFile() const { return &EF; }$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:const ELFFile<ELFT> *	access:public	signature:() const
llvm::object::ELFObjectFile::getEMachine	ELFObjectFile.h	/^  uint16_t getEMachine() const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:uint16_t	access:private	signature:() const
llvm::object::ELFObjectFile::getEMachine	ELFObjectFile.h	/^uint16_t ELFObjectFile<ELFT>::getEMachine() const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:uint16_t	signature:() const
llvm::object::ELFObjectFile::getFileFormatName	ELFObjectFile.h	/^  StringRef getFileFormatName() const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:StringRef	access:public	signature:() const
llvm::object::ELFObjectFile::getFileFormatName	ELFObjectFile.h	/^StringRef ELFObjectFile<ELFT>::getFileFormatName() const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:StringRef	signature:() const
llvm::object::ELFObjectFile::getPlatformFlags	ELFObjectFile.h	/^  std::error_code getPlatformFlags(unsigned &Result) const override {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:std::error_code	access:public	signature:(unsigned & Result) const
llvm::object::ELFObjectFile::getRel	ELFObjectFile.h	/^  const Elf_Rel *getRel(DataRefImpl Rel) const;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:const Elf_Rel *	access:public	signature:(DataRefImpl Rel) const
llvm::object::ELFObjectFile::getRel	ELFObjectFile.h	/^ELFObjectFile<ELFT>::getRel(DataRefImpl Rel) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:const typename ELFObjectFile<ELFT>::Elf_Rel *	signature:(DataRefImpl Rel) const
llvm::object::ELFObjectFile::getRelSection	ELFObjectFile.h	/^  const Elf_Shdr *getRelSection(DataRefImpl Rel) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:const Elf_Shdr *	access:protected	signature:(DataRefImpl Rel) const
llvm::object::ELFObjectFile::getRela	ELFObjectFile.h	/^  const Elf_Rela *getRela(DataRefImpl Rela) const;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:const Elf_Rela *	access:public	signature:(DataRefImpl Rela) const
llvm::object::ELFObjectFile::getRela	ELFObjectFile.h	/^ELFObjectFile<ELFT>::getRela(DataRefImpl Rela) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:const typename ELFObjectFile<ELFT>::Elf_Rela *	signature:(DataRefImpl Rela) const
llvm::object::ELFObjectFile::getRelocatedSection	ELFObjectFile.h	/^  section_iterator getRelocatedSection(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:section_iterator	access:protected	signature:(DataRefImpl Sec) const
llvm::object::ELFObjectFile::getRelocatedSection	ELFObjectFile.h	/^ELFObjectFile<ELFT>::getRelocatedSection(DataRefImpl Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:section_iterator	signature:(DataRefImpl Sec) const
llvm::object::ELFObjectFile::getRelocationAddend	ELFObjectFile.h	/^  ErrorOr<int64_t> getRelocationAddend(DataRefImpl Rel) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:ErrorOr<int64_t>	access:public	signature:(DataRefImpl Rel) const
llvm::object::ELFObjectFile::getRelocationAddend	ELFObjectFile.h	/^ELFObjectFile<ELFT>::getRelocationAddend(DataRefImpl Rel) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:ErrorOr<int64_t>	signature:(DataRefImpl Rel) const
llvm::object::ELFObjectFile::getRelocationOffset	ELFObjectFile.h	/^  uint64_t getRelocationOffset(DataRefImpl Rel) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Rel) const
llvm::object::ELFObjectFile::getRelocationOffset	ELFObjectFile.h	/^uint64_t ELFObjectFile<ELFT>::getRelocationOffset(DataRefImpl Rel) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	signature:(DataRefImpl Rel) const
llvm::object::ELFObjectFile::getRelocationSymbol	ELFObjectFile.h	/^  symbol_iterator getRelocationSymbol(DataRefImpl Rel) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:symbol_iterator	access:protected	signature:(DataRefImpl Rel) const
llvm::object::ELFObjectFile::getRelocationSymbol	ELFObjectFile.h	/^ELFObjectFile<ELFT>::getRelocationSymbol(DataRefImpl Rel) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:symbol_iterator	signature:(DataRefImpl Rel) const
llvm::object::ELFObjectFile::getRelocationType	ELFObjectFile.h	/^  uint64_t getRelocationType(DataRefImpl Rel) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Rel) const
llvm::object::ELFObjectFile::getRelocationType	ELFObjectFile.h	/^uint64_t ELFObjectFile<ELFT>::getRelocationType(DataRefImpl Rel) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	signature:(DataRefImpl Rel) const
llvm::object::ELFObjectFile::getRelocationTypeName	ELFObjectFile.h	/^  StringRef getRelocationTypeName(uint32_t Type) const;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:StringRef	access:protected	signature:(uint32_t Type) const
llvm::object::ELFObjectFile::getRelocationTypeName	ELFObjectFile.h	/^  void getRelocationTypeName(DataRefImpl Rel,$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:void	access:protected	signature:(DataRefImpl Rel,SmallVectorImpl<char> & Result) const
llvm::object::ELFObjectFile::getRelocationTypeName	ELFObjectFile.h	/^StringRef ELFObjectFile<ELFT>::getRelocationTypeName(uint32_t Type) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:StringRef	signature:(uint32_t Type) const
llvm::object::ELFObjectFile::getRelocationTypeName	ELFObjectFile.h	/^void ELFObjectFile<ELFT>::getRelocationTypeName($/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:void	signature:(DataRefImpl Rel,SmallVectorImpl<char> & Result) const
llvm::object::ELFObjectFile::getSection	ELFObjectFile.h	/^  const Elf_Shdr *getSection(DataRefImpl Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:const Elf_Shdr *	access:public	signature:(DataRefImpl Sec) const
llvm::object::ELFObjectFile::getSectionAddress	ELFObjectFile.h	/^  uint64_t getSectionAddress(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Sec) const
llvm::object::ELFObjectFile::getSectionAddress	ELFObjectFile.h	/^uint64_t ELFObjectFile<ELFT>::getSectionAddress(DataRefImpl Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	signature:(DataRefImpl Sec) const
llvm::object::ELFObjectFile::getSectionAlignment	ELFObjectFile.h	/^  uint64_t getSectionAlignment(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Sec) const
llvm::object::ELFObjectFile::getSectionAlignment	ELFObjectFile.h	/^uint64_t ELFObjectFile<ELFT>::getSectionAlignment(DataRefImpl Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	signature:(DataRefImpl Sec) const
llvm::object::ELFObjectFile::getSectionContents	ELFObjectFile.h	/^  std::error_code getSectionContents(DataRefImpl Sec,$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:std::error_code	access:protected	signature:(DataRefImpl Sec,StringRef & Res) const
llvm::object::ELFObjectFile::getSectionContents	ELFObjectFile.h	/^ELFObjectFile<ELFT>::getSectionContents(DataRefImpl Sec,$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:std::error_code	signature:(DataRefImpl Sec,StringRef & Result) const
llvm::object::ELFObjectFile::getSectionFlags	ELFObjectFile.h	/^  uint64_t getSectionFlags(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Sec) const
llvm::object::ELFObjectFile::getSectionFlags	ELFObjectFile.h	/^uint64_t ELFObjectFile<ELFT>::getSectionFlags(DataRefImpl Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	signature:(DataRefImpl Sec) const
llvm::object::ELFObjectFile::getSectionName	ELFObjectFile.h	/^  std::error_code getSectionName(DataRefImpl Sec,$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:std::error_code	access:protected	signature:(DataRefImpl Sec,StringRef & Res) const
llvm::object::ELFObjectFile::getSectionName	ELFObjectFile.h	/^std::error_code ELFObjectFile<ELFT>::getSectionName(DataRefImpl Sec,$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:std::error_code	signature:(DataRefImpl Sec,StringRef & Result) const
llvm::object::ELFObjectFile::getSectionOffset	ELFObjectFile.h	/^  uint64_t getSectionOffset(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Sec) const
llvm::object::ELFObjectFile::getSectionOffset	ELFObjectFile.h	/^uint64_t ELFObjectFile<ELFT>::getSectionOffset(DataRefImpl Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	signature:(DataRefImpl Sec) const
llvm::object::ELFObjectFile::getSectionSize	ELFObjectFile.h	/^  uint64_t getSectionSize(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Sec) const
llvm::object::ELFObjectFile::getSectionSize	ELFObjectFile.h	/^uint64_t ELFObjectFile<ELFT>::getSectionSize(DataRefImpl Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	signature:(DataRefImpl Sec) const
llvm::object::ELFObjectFile::getSectionType	ELFObjectFile.h	/^  uint32_t getSectionType(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:uint32_t	access:protected	signature:(DataRefImpl Sec) const
llvm::object::ELFObjectFile::getSectionType	ELFObjectFile.h	/^uint32_t ELFObjectFile<ELFT>::getSectionType(DataRefImpl Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:uint32_t	signature:(DataRefImpl Sec) const
llvm::object::ELFObjectFile::getSymbol	ELFObjectFile.h	/^  const Elf_Sym *getSymbol(DataRefImpl Sym) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:const Elf_Sym *	access:public	signature:(DataRefImpl Sym) const
llvm::object::ELFObjectFile::getSymbolAddress	ELFObjectFile.h	/^  Expected<uint64_t> getSymbolAddress(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:Expected<uint64_t>	access:protected	signature:(DataRefImpl Symb) const
llvm::object::ELFObjectFile::getSymbolAddress	ELFObjectFile.h	/^ELFObjectFile<ELFT>::getSymbolAddress(DataRefImpl Symb) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:Expected<uint64_t>	signature:(DataRefImpl Symb) const
llvm::object::ELFObjectFile::getSymbolAlignment	ELFObjectFile.h	/^  uint32_t getSymbolAlignment(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:uint32_t	access:protected	signature:(DataRefImpl Symb) const
llvm::object::ELFObjectFile::getSymbolAlignment	ELFObjectFile.h	/^uint32_t ELFObjectFile<ELFT>::getSymbolAlignment(DataRefImpl Symb) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:uint32_t	signature:(DataRefImpl Symb) const
llvm::object::ELFObjectFile::getSymbolELFType	ELFObjectFile.h	/^  uint8_t getSymbolELFType(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:uint8_t	access:protected	signature:(DataRefImpl Symb) const
llvm::object::ELFObjectFile::getSymbolELFType	ELFObjectFile.h	/^uint8_t ELFObjectFile<ELFT>::getSymbolELFType(DataRefImpl Symb) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:uint8_t	signature:(DataRefImpl Symb) const
llvm::object::ELFObjectFile::getSymbolFlags	ELFObjectFile.h	/^  uint32_t getSymbolFlags(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:uint32_t	access:protected	signature:(DataRefImpl Symb) const
llvm::object::ELFObjectFile::getSymbolFlags	ELFObjectFile.h	/^uint32_t ELFObjectFile<ELFT>::getSymbolFlags(DataRefImpl Sym) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:uint32_t	signature:(DataRefImpl Sym) const
llvm::object::ELFObjectFile::getSymbolName	ELFObjectFile.h	/^  Expected<StringRef> getSymbolName(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:Expected<StringRef>	access:protected	signature:(DataRefImpl Symb) const
llvm::object::ELFObjectFile::getSymbolName	ELFObjectFile.h	/^Expected<StringRef> ELFObjectFile<ELFT>::getSymbolName(DataRefImpl Sym) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:Expected<StringRef>	signature:(DataRefImpl Sym) const
llvm::object::ELFObjectFile::getSymbolOther	ELFObjectFile.h	/^  uint8_t getSymbolOther(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:uint8_t	access:protected	signature:(DataRefImpl Symb) const
llvm::object::ELFObjectFile::getSymbolOther	ELFObjectFile.h	/^uint8_t ELFObjectFile<ELFT>::getSymbolOther(DataRefImpl Symb) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:uint8_t	signature:(DataRefImpl Symb) const
llvm::object::ELFObjectFile::getSymbolSection	ELFObjectFile.h	/^  Expected<section_iterator> getSymbolSection(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:Expected<section_iterator>	access:protected	signature:(DataRefImpl Symb) const
llvm::object::ELFObjectFile::getSymbolSection	ELFObjectFile.h	/^  Expected<section_iterator> getSymbolSection(const Elf_Sym *Symb,$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:Expected<section_iterator>	access:protected	signature:(const Elf_Sym * Symb,const Elf_Shdr * SymTab) const
llvm::object::ELFObjectFile::getSymbolSection	ELFObjectFile.h	/^ELFObjectFile<ELFT>::getSymbolSection(DataRefImpl Symb) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:Expected<section_iterator>	signature:(DataRefImpl Symb) const
llvm::object::ELFObjectFile::getSymbolSection	ELFObjectFile.h	/^ELFObjectFile<ELFT>::getSymbolSection(const Elf_Sym *ESym,$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:Expected<section_iterator>	signature:(const Elf_Sym * ESym,const Elf_Shdr * SymTab) const
llvm::object::ELFObjectFile::getSymbolSize	ELFObjectFile.h	/^  uint64_t getSymbolSize(DataRefImpl Sym) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	access:private	signature:(DataRefImpl Sym) const
llvm::object::ELFObjectFile::getSymbolSize	ELFObjectFile.h	/^uint64_t ELFObjectFile<ELFT>::getSymbolSize(DataRefImpl Sym) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	signature:(DataRefImpl Sym) const
llvm::object::ELFObjectFile::getSymbolType	ELFObjectFile.h	/^  Expected<SymbolRef::Type> getSymbolType(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:Expected<SymbolRef::Type>	access:protected	signature:(DataRefImpl Symb) const
llvm::object::ELFObjectFile::getSymbolType	ELFObjectFile.h	/^ELFObjectFile<ELFT>::getSymbolType(DataRefImpl Symb) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:Expected<SymbolRef::Type>	signature:(DataRefImpl Symb) const
llvm::object::ELFObjectFile::getSymbolValueImpl	ELFObjectFile.h	/^  uint64_t getSymbolValueImpl(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Symb) const
llvm::object::ELFObjectFile::getSymbolValueImpl	ELFObjectFile.h	/^uint64_t ELFObjectFile<ELFT>::getSymbolValueImpl(DataRefImpl Symb) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:uint64_t	signature:(DataRefImpl Symb) const
llvm::object::ELFObjectFile::isDyldELFObject	ELFObjectFile.h	/^  bool isDyldELFObject;$/;"	kind:m	class:llvm::object::ELFObjectFile	typeref:typename:bool	access:protected
llvm::object::ELFObjectFile::isDyldType	ELFObjectFile.h	/^  bool isDyldType() const { return isDyldELFObject; }$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:bool	access:public	signature:() const
llvm::object::ELFObjectFile::isExportedToOtherDSO	ELFObjectFile.h	/^  bool isExportedToOtherDSO(const Elf_Sym *ESym) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:bool	access:protected	signature:(const Elf_Sym * ESym) const
llvm::object::ELFObjectFile::isRelocatableObject	ELFObjectFile.h	/^  bool isRelocatableObject() const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:bool	access:public	signature:() const
llvm::object::ELFObjectFile::isRelocatableObject	ELFObjectFile.h	/^template <class ELFT> bool ELFObjectFile<ELFT>::isRelocatableObject() const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:bool	signature:() const
llvm::object::ELFObjectFile::isSectionBSS	ELFObjectFile.h	/^  bool isSectionBSS(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:bool	access:protected	signature:(DataRefImpl Sec) const
llvm::object::ELFObjectFile::isSectionBSS	ELFObjectFile.h	/^bool ELFObjectFile<ELFT>::isSectionBSS(DataRefImpl Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:bool	signature:(DataRefImpl Sec) const
llvm::object::ELFObjectFile::isSectionCompressed	ELFObjectFile.h	/^  bool isSectionCompressed(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:bool	access:protected	signature:(DataRefImpl Sec) const
llvm::object::ELFObjectFile::isSectionCompressed	ELFObjectFile.h	/^bool ELFObjectFile<ELFT>::isSectionCompressed(DataRefImpl Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:bool	signature:(DataRefImpl Sec) const
llvm::object::ELFObjectFile::isSectionData	ELFObjectFile.h	/^  bool isSectionData(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:bool	access:protected	signature:(DataRefImpl Sec) const
llvm::object::ELFObjectFile::isSectionData	ELFObjectFile.h	/^bool ELFObjectFile<ELFT>::isSectionData(DataRefImpl Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:bool	signature:(DataRefImpl Sec) const
llvm::object::ELFObjectFile::isSectionText	ELFObjectFile.h	/^  bool isSectionText(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:bool	access:protected	signature:(DataRefImpl Sec) const
llvm::object::ELFObjectFile::isSectionText	ELFObjectFile.h	/^bool ELFObjectFile<ELFT>::isSectionText(DataRefImpl Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:bool	signature:(DataRefImpl Sec) const
llvm::object::ELFObjectFile::isSectionVirtual	ELFObjectFile.h	/^  bool isSectionVirtual(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:bool	access:protected	signature:(DataRefImpl Sec) const
llvm::object::ELFObjectFile::isSectionVirtual	ELFObjectFile.h	/^bool ELFObjectFile<ELFT>::isSectionVirtual(DataRefImpl Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:bool	signature:(DataRefImpl Sec) const
llvm::object::ELFObjectFile::moveRelocationNext	ELFObjectFile.h	/^  void moveRelocationNext(DataRefImpl &Rel) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:void	access:protected	signature:(DataRefImpl & Rel) const
llvm::object::ELFObjectFile::moveRelocationNext	ELFObjectFile.h	/^void ELFObjectFile<ELFT>::moveRelocationNext(DataRefImpl &Rel) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:void	signature:(DataRefImpl & Rel) const
llvm::object::ELFObjectFile::moveSectionNext	ELFObjectFile.h	/^  void moveSectionNext(DataRefImpl &Sec) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:void	access:protected	signature:(DataRefImpl & Sec) const
llvm::object::ELFObjectFile::moveSectionNext	ELFObjectFile.h	/^void ELFObjectFile<ELFT>::moveSectionNext(DataRefImpl &Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:void	signature:(DataRefImpl & Sec) const
llvm::object::ELFObjectFile::moveSymbolNext	ELFObjectFile.h	/^  void moveSymbolNext(DataRefImpl &Symb) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:void	access:protected	signature:(DataRefImpl & Symb) const
llvm::object::ELFObjectFile::moveSymbolNext	ELFObjectFile.h	/^void ELFObjectFile<ELFT>::moveSymbolNext(DataRefImpl &Sym) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:void	signature:(DataRefImpl & Sym) const
llvm::object::ELFObjectFile::section_begin	ELFObjectFile.h	/^  section_iterator section_begin() const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:section_iterator	access:public	signature:() const
llvm::object::ELFObjectFile::section_begin	ELFObjectFile.h	/^section_iterator ELFObjectFile<ELFT>::section_begin() const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:section_iterator	signature:() const
llvm::object::ELFObjectFile::section_end	ELFObjectFile.h	/^  section_iterator section_end() const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:section_iterator	access:public	signature:() const
llvm::object::ELFObjectFile::section_end	ELFObjectFile.h	/^section_iterator ELFObjectFile<ELFT>::section_end() const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:section_iterator	signature:() const
llvm::object::ELFObjectFile::section_rel_begin	ELFObjectFile.h	/^  relocation_iterator section_rel_begin(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:relocation_iterator	access:protected	signature:(DataRefImpl Sec) const
llvm::object::ELFObjectFile::section_rel_begin	ELFObjectFile.h	/^ELFObjectFile<ELFT>::section_rel_begin(DataRefImpl Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:relocation_iterator	signature:(DataRefImpl Sec) const
llvm::object::ELFObjectFile::section_rel_end	ELFObjectFile.h	/^  relocation_iterator section_rel_end(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:relocation_iterator	access:protected	signature:(DataRefImpl Sec) const
llvm::object::ELFObjectFile::section_rel_end	ELFObjectFile.h	/^ELFObjectFile<ELFT>::section_rel_end(DataRefImpl Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:relocation_iterator	signature:(DataRefImpl Sec) const
llvm::object::ELFObjectFile::symbol_begin	ELFObjectFile.h	/^  basic_symbol_iterator symbol_begin() const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:basic_symbol_iterator	access:public	signature:() const
llvm::object::ELFObjectFile::symbol_begin	ELFObjectFile.h	/^basic_symbol_iterator ELFObjectFile<ELFT>::symbol_begin() const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:basic_symbol_iterator	signature:() const
llvm::object::ELFObjectFile::symbol_end	ELFObjectFile.h	/^  basic_symbol_iterator symbol_end() const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:basic_symbol_iterator	access:public	signature:() const
llvm::object::ELFObjectFile::symbol_end	ELFObjectFile.h	/^basic_symbol_iterator ELFObjectFile<ELFT>::symbol_end() const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:basic_symbol_iterator	signature:() const
llvm::object::ELFObjectFile::toDRI	ELFObjectFile.h	/^  DataRefImpl toDRI(const Elf_Dyn *Dyn) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:DataRefImpl	access:protected	signature:(const Elf_Dyn * Dyn) const
llvm::object::ELFObjectFile::toDRI	ELFObjectFile.h	/^  DataRefImpl toDRI(const Elf_Shdr *Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:DataRefImpl	access:protected	signature:(const Elf_Shdr * Sec) const
llvm::object::ELFObjectFile::toDRI	ELFObjectFile.h	/^  DataRefImpl toDRI(const Elf_Shdr *SymTable, unsigned SymbolNum) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:DataRefImpl	access:protected	signature:(const Elf_Shdr * SymTable,unsigned SymbolNum) const
llvm::object::ELFObjectFile::toELFShdrIter	ELFObjectFile.h	/^  const Elf_Shdr *toELFShdrIter(DataRefImpl Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:const Elf_Shdr *	access:protected	signature:(DataRefImpl Sec) const
llvm::object::ELFObjectFile::uintX_t	ELFObjectFile.h	/^  typedef typename ELFFile<ELFT>::uintX_t uintX_t;$/;"	kind:t	class:llvm::object::ELFObjectFile	typeref:typename:ELFFile<ELFT>::uintX_t	access:public
llvm::object::ELFObjectFileBase	ELFObjectFile.h	/^class ELFObjectFileBase : public ObjectFile {$/;"	kind:c	namespace:llvm::object	inherits:ObjectFile
llvm::object::ELFObjectFileBase::ELFObjectFileBase	ELFObjectFile.h	/^  ELFObjectFileBase(unsigned int Type, MemoryBufferRef Source);$/;"	kind:p	class:llvm::object::ELFObjectFileBase	access:protected	signature:(unsigned int Type,MemoryBufferRef Source)
llvm::object::ELFObjectFileBase::classof	ELFObjectFile.h	/^  static inline bool classof(const Binary *v) { return v->isELF(); }$/;"	kind:f	class:llvm::object::ELFObjectFileBase	typeref:typename:bool	access:public	signature:(const Binary * v)
llvm::object::ELFObjectFileBase::elf_symbol_iterator_range	ELFObjectFile.h	/^  typedef iterator_range<elf_symbol_iterator> elf_symbol_iterator_range;$/;"	kind:t	class:llvm::object::ELFObjectFileBase	typeref:typename:iterator_range<elf_symbol_iterator>	access:public
llvm::object::ELFObjectFileBase::getDynamicSymbolIterators	ELFObjectFile.h	/^  virtual elf_symbol_iterator_range getDynamicSymbolIterators() const = 0;$/;"	kind:p	class:llvm::object::ELFObjectFileBase	typeref:typename:elf_symbol_iterator_range	access:public	signature:() const
llvm::object::ELFObjectFileBase::getEMachine	ELFObjectFile.h	/^  virtual uint16_t getEMachine() const = 0;$/;"	kind:p	class:llvm::object::ELFObjectFileBase	typeref:typename:uint16_t	access:protected	signature:() const
llvm::object::ELFObjectFileBase::getFeatures	ELFObjectFile.h	/^  SubtargetFeatures getFeatures() const override;$/;"	kind:p	class:llvm::object::ELFObjectFileBase	typeref:typename:SubtargetFeatures	access:public	signature:() const
llvm::object::ELFObjectFileBase::getRelocationAddend	ELFObjectFile.h	/^  virtual ErrorOr<int64_t> getRelocationAddend(DataRefImpl Rel) const = 0;$/;"	kind:p	class:llvm::object::ELFObjectFileBase	typeref:typename:ErrorOr<int64_t>	access:protected	signature:(DataRefImpl Rel) const
llvm::object::ELFObjectFileBase::getSectionFlags	ELFObjectFile.h	/^  virtual uint64_t getSectionFlags(DataRefImpl Sec) const = 0;$/;"	kind:p	class:llvm::object::ELFObjectFileBase	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Sec) const
llvm::object::ELFObjectFileBase::getSectionOffset	ELFObjectFile.h	/^  virtual uint64_t getSectionOffset(DataRefImpl Sec) const = 0;$/;"	kind:p	class:llvm::object::ELFObjectFileBase	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Sec) const
llvm::object::ELFObjectFileBase::getSectionType	ELFObjectFile.h	/^  virtual uint32_t getSectionType(DataRefImpl Sec) const = 0;$/;"	kind:p	class:llvm::object::ELFObjectFileBase	typeref:typename:uint32_t	access:protected	signature:(DataRefImpl Sec) const
llvm::object::ELFObjectFileBase::getSymbolELFType	ELFObjectFile.h	/^  virtual uint8_t getSymbolELFType(DataRefImpl Symb) const = 0;$/;"	kind:p	class:llvm::object::ELFObjectFileBase	typeref:typename:uint8_t	access:protected	signature:(DataRefImpl Symb) const
llvm::object::ELFObjectFileBase::getSymbolOther	ELFObjectFile.h	/^  virtual uint8_t getSymbolOther(DataRefImpl Symb) const = 0;$/;"	kind:p	class:llvm::object::ELFObjectFileBase	typeref:typename:uint8_t	access:protected	signature:(DataRefImpl Symb) const
llvm::object::ELFObjectFileBase::getSymbolSize	ELFObjectFile.h	/^  virtual uint64_t getSymbolSize(DataRefImpl Symb) const = 0;$/;"	kind:p	class:llvm::object::ELFObjectFileBase	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Symb) const
llvm::object::ELFObjectFileBase::symbols	ELFObjectFile.h	/^  elf_symbol_iterator_range symbols() const;$/;"	kind:p	class:llvm::object::ELFObjectFileBase	typeref:typename:elf_symbol_iterator_range	access:public	signature:() const
llvm::object::ELFObjectFileBase::symbols	ELFObjectFile.h	/^ELFObjectFileBase::symbols() const {$/;"	kind:f	class:llvm::object::ELFObjectFileBase	typeref:typename:ELFObjectFileBase::elf_symbol_iterator_range	signature:() const
llvm::object::ELFRelocationRef	ELFObjectFile.h	/^class ELFRelocationRef : public RelocationRef {$/;"	kind:c	namespace:llvm::object	inherits:RelocationRef
llvm::object::ELFRelocationRef::ELFRelocationRef	ELFObjectFile.h	/^  ELFRelocationRef(const RelocationRef &B) : RelocationRef(B) {$/;"	kind:f	class:llvm::object::ELFRelocationRef	access:public	signature:(const RelocationRef & B)
llvm::object::ELFRelocationRef::getAddend	ELFObjectFile.h	/^  ErrorOr<int64_t> getAddend() const {$/;"	kind:f	class:llvm::object::ELFRelocationRef	typeref:typename:ErrorOr<int64_t>	access:public	signature:() const
llvm::object::ELFRelocationRef::getObject	ELFObjectFile.h	/^  const ELFObjectFileBase *getObject() const {$/;"	kind:f	class:llvm::object::ELFRelocationRef	typeref:typename:const ELFObjectFileBase *	access:public	signature:() const
llvm::object::ELFSectionRef	ELFObjectFile.h	/^class ELFSectionRef : public SectionRef {$/;"	kind:c	namespace:llvm::object	inherits:SectionRef
llvm::object::ELFSectionRef::ELFSectionRef	ELFObjectFile.h	/^  ELFSectionRef(const SectionRef &B) : SectionRef(B) {$/;"	kind:f	class:llvm::object::ELFSectionRef	access:public	signature:(const SectionRef & B)
llvm::object::ELFSectionRef::getFlags	ELFObjectFile.h	/^  uint64_t getFlags() const {$/;"	kind:f	class:llvm::object::ELFSectionRef	typeref:typename:uint64_t	access:public	signature:() const
llvm::object::ELFSectionRef::getObject	ELFObjectFile.h	/^  const ELFObjectFileBase *getObject() const {$/;"	kind:f	class:llvm::object::ELFSectionRef	typeref:typename:const ELFObjectFileBase *	access:public	signature:() const
llvm::object::ELFSectionRef::getOffset	ELFObjectFile.h	/^  uint64_t getOffset() const {$/;"	kind:f	class:llvm::object::ELFSectionRef	typeref:typename:uint64_t	access:public	signature:() const
llvm::object::ELFSectionRef::getType	ELFObjectFile.h	/^  uint32_t getType() const {$/;"	kind:f	class:llvm::object::ELFSectionRef	typeref:typename:uint32_t	access:public	signature:() const
llvm::object::ELFSymbolRef	ELFObjectFile.h	/^class ELFSymbolRef : public SymbolRef {$/;"	kind:c	namespace:llvm::object	inherits:SymbolRef
llvm::object::ELFSymbolRef::ELFSymbolRef	ELFObjectFile.h	/^  ELFSymbolRef(const SymbolRef &B) : SymbolRef(B) {$/;"	kind:f	class:llvm::object::ELFSymbolRef	access:public	signature:(const SymbolRef & B)
llvm::object::ELFSymbolRef::getELFType	ELFObjectFile.h	/^  uint8_t getELFType() const {$/;"	kind:f	class:llvm::object::ELFSymbolRef	typeref:typename:uint8_t	access:public	signature:() const
llvm::object::ELFSymbolRef::getObject	ELFObjectFile.h	/^  const ELFObjectFileBase *getObject() const {$/;"	kind:f	class:llvm::object::ELFSymbolRef	typeref:typename:const ELFObjectFileBase *	access:public	signature:() const
llvm::object::ELFSymbolRef::getOther	ELFObjectFile.h	/^  uint8_t getOther() const {$/;"	kind:f	class:llvm::object::ELFSymbolRef	typeref:typename:uint8_t	access:public	signature:() const
llvm::object::ELFSymbolRef::getSize	ELFObjectFile.h	/^  uint64_t getSize() const {$/;"	kind:f	class:llvm::object::ELFSymbolRef	typeref:typename:uint64_t	access:public	signature:() const
llvm::object::ELFType	ELFTypes.h	/^template <endianness E, bool Is64> struct ELFType {$/;"	kind:s	namespace:llvm::object
llvm::object::ELFType::Addr	ELFTypes.h	/^  typedef packed<uint> Addr;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:packed<uint>	access:public
llvm::object::ELFType::Chdr	ELFTypes.h	/^  typedef Elf_Chdr_Impl<ELFType<E, Is64>> Chdr;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:Elf_Chdr_Impl<ELFType<E,Is64>>	access:public
llvm::object::ELFType::Dyn	ELFTypes.h	/^  typedef Elf_Dyn_Impl<ELFType<E, Is64>> Dyn;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:Elf_Dyn_Impl<ELFType<E,Is64>>	access:public
llvm::object::ELFType::DynRange	ELFTypes.h	/^  typedef ArrayRef<Dyn> DynRange;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:ArrayRef<Dyn>	access:public
llvm::object::ELFType::Ehdr	ELFTypes.h	/^  typedef Elf_Ehdr_Impl<ELFType<E, Is64>> Ehdr;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:Elf_Ehdr_Impl<ELFType<E,Is64>>	access:public
llvm::object::ELFType::GnuHash	ELFTypes.h	/^  typedef Elf_GnuHash_Impl<ELFType<E, Is64>> GnuHash;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:Elf_GnuHash_Impl<ELFType<E,Is64>>	access:public
llvm::object::ELFType::Half	ELFTypes.h	/^  typedef packed<uint16_t> Half;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:packed<uint16_t>	access:public
llvm::object::ELFType::Hash	ELFTypes.h	/^  typedef Elf_Hash_Impl<ELFType<E, Is64>> Hash;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:Elf_Hash_Impl<ELFType<E,Is64>>	access:public
llvm::object::ELFType::Is64Bits	ELFTypes.h	/^  static const bool Is64Bits = Is64;$/;"	kind:m	struct:llvm::object::ELFType	typeref:typename:const bool	access:public
llvm::object::ELFType::Off	ELFTypes.h	/^  typedef packed<uint> Off;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:packed<uint>	access:public
llvm::object::ELFType::Phdr	ELFTypes.h	/^  typedef Elf_Phdr_Impl<ELFType<E, Is64>> Phdr;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:Elf_Phdr_Impl<ELFType<E,Is64>>	access:public
llvm::object::ELFType::PhdrRange	ELFTypes.h	/^  typedef ArrayRef<Phdr> PhdrRange;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:ArrayRef<Phdr>	access:public
llvm::object::ELFType::Rel	ELFTypes.h	/^  typedef Elf_Rel_Impl<ELFType<E, Is64>, false> Rel;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:Elf_Rel_Impl<ELFType<E,Is64>,false>	access:public
llvm::object::ELFType::RelRange	ELFTypes.h	/^  typedef ArrayRef<Rel> RelRange;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:ArrayRef<Rel>	access:public
llvm::object::ELFType::Rela	ELFTypes.h	/^  typedef Elf_Rel_Impl<ELFType<E, Is64>, true> Rela;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:Elf_Rel_Impl<ELFType<E,Is64>,true>	access:public
llvm::object::ELFType::RelaRange	ELFTypes.h	/^  typedef ArrayRef<Rela> RelaRange;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:ArrayRef<Rela>	access:public
llvm::object::ELFType::Shdr	ELFTypes.h	/^  typedef Elf_Shdr_Impl<ELFType<E, Is64>> Shdr;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:Elf_Shdr_Impl<ELFType<E,Is64>>	access:public
llvm::object::ELFType::ShdrRange	ELFTypes.h	/^  typedef ArrayRef<Shdr> ShdrRange;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:ArrayRef<Shdr>	access:public
llvm::object::ELFType::Sword	ELFTypes.h	/^  typedef packed<int32_t> Sword;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:packed<int32_t>	access:public
llvm::object::ELFType::Sxword	ELFTypes.h	/^  typedef packed<int64_t> Sxword;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:packed<int64_t>	access:public
llvm::object::ELFType::Sym	ELFTypes.h	/^  typedef Elf_Sym_Impl<ELFType<E, Is64>> Sym;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:Elf_Sym_Impl<ELFType<E,Is64>>	access:public
llvm::object::ELFType::SymRange	ELFTypes.h	/^  typedef ArrayRef<Sym> SymRange;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:ArrayRef<Sym>	access:public
llvm::object::ELFType::TargetEndianness	ELFTypes.h	/^  static const endianness TargetEndianness = E;$/;"	kind:m	struct:llvm::object::ELFType	typeref:typename:const endianness	access:public
llvm::object::ELFType::Verdaux	ELFTypes.h	/^  typedef Elf_Verdaux_Impl<ELFType<E, Is64>> Verdaux;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:Elf_Verdaux_Impl<ELFType<E,Is64>>	access:public
llvm::object::ELFType::Verdef	ELFTypes.h	/^  typedef Elf_Verdef_Impl<ELFType<E, Is64>> Verdef;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:Elf_Verdef_Impl<ELFType<E,Is64>>	access:public
llvm::object::ELFType::Vernaux	ELFTypes.h	/^  typedef Elf_Vernaux_Impl<ELFType<E, Is64>> Vernaux;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:Elf_Vernaux_Impl<ELFType<E,Is64>>	access:public
llvm::object::ELFType::Verneed	ELFTypes.h	/^  typedef Elf_Verneed_Impl<ELFType<E, Is64>> Verneed;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:Elf_Verneed_Impl<ELFType<E,Is64>>	access:public
llvm::object::ELFType::Versym	ELFTypes.h	/^  typedef Elf_Versym_Impl<ELFType<E, Is64>> Versym;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:Elf_Versym_Impl<ELFType<E,Is64>>	access:public
llvm::object::ELFType::Word	ELFTypes.h	/^  typedef packed<uint32_t> Word;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:packed<uint32_t>	access:public
llvm::object::ELFType::Xword	ELFTypes.h	/^  typedef packed<uint64_t> Xword;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:packed<uint64_t>	access:public
llvm::object::ELFType::packed	ELFTypes.h	/^  using packed = support::detail::packed_endian_specific_integral<Ty, E, 2>;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:support::detail::packed_endian_specific_integral<Ty,E,2>	access:private
llvm::object::ELFType::uint	ELFTypes.h	/^  typedef typename std::conditional<Is64, uint64_t, uint32_t>::type uint;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:std::conditional<Is64,uint64_t,uint32_t>::type	access:public
llvm::object::Elf_Chdr_Impl	ELFTypes.h	/^struct Elf_Chdr_Impl<ELFType<TargetEndianness, false>> {$/;"	kind:s	namespace:llvm::object
llvm::object::Elf_Chdr_Impl	ELFTypes.h	/^struct Elf_Chdr_Impl<ELFType<TargetEndianness, true>> {$/;"	kind:s	namespace:llvm::object
llvm::object::Elf_Chdr_Impl::LLVM_ELF_IMPORT_TYPES	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES(TargetEndianness, false)$/;"	kind:p	struct:llvm::object::Elf_Chdr_Impl	access:public	signature:(TargetEndianness,false)
llvm::object::Elf_Chdr_Impl::LLVM_ELF_IMPORT_TYPES	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES(TargetEndianness, true)$/;"	kind:p	struct:llvm::object::Elf_Chdr_Impl	access:public	signature:(TargetEndianness,true)
llvm::object::Elf_Chdr_Impl::ch_addralign	ELFTypes.h	/^  Elf_Word ch_addralign;$/;"	kind:m	struct:llvm::object::Elf_Chdr_Impl	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Chdr_Impl::ch_addralign	ELFTypes.h	/^  Elf_Xword ch_addralign;$/;"	kind:m	struct:llvm::object::Elf_Chdr_Impl	typeref:typename:Elf_Xword	access:public
llvm::object::Elf_Chdr_Impl::ch_reserved	ELFTypes.h	/^  Elf_Word ch_reserved;$/;"	kind:m	struct:llvm::object::Elf_Chdr_Impl	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Chdr_Impl::ch_size	ELFTypes.h	/^  Elf_Word ch_size;$/;"	kind:m	struct:llvm::object::Elf_Chdr_Impl	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Chdr_Impl::ch_size	ELFTypes.h	/^  Elf_Xword ch_size;$/;"	kind:m	struct:llvm::object::Elf_Chdr_Impl	typeref:typename:Elf_Xword	access:public
llvm::object::Elf_Dyn_Base	ELFTypes.h	/^struct Elf_Dyn_Base<ELFType<TargetEndianness, false>> {$/;"	kind:s	namespace:llvm::object
llvm::object::Elf_Dyn_Base	ELFTypes.h	/^struct Elf_Dyn_Base<ELFType<TargetEndianness, true>> {$/;"	kind:s	namespace:llvm::object
llvm::object::Elf_Dyn_Base::LLVM_ELF_IMPORT_TYPES	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES(TargetEndianness, false)$/;"	kind:p	struct:llvm::object::Elf_Dyn_Base	access:public	signature:(TargetEndianness,false)
llvm::object::Elf_Dyn_Base::LLVM_ELF_IMPORT_TYPES	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES(TargetEndianness, true)$/;"	kind:p	struct:llvm::object::Elf_Dyn_Base	access:public	signature:(TargetEndianness,true)
llvm::object::Elf_Dyn_Base::__anondff8eca7010a	ELFTypes.h	/^  union {$/;"	kind:u	struct:llvm::object::Elf_Dyn_Base	access:public
llvm::object::Elf_Dyn_Base::__anondff8eca7010a::d_ptr	ELFTypes.h	/^    Elf_Addr d_ptr;$/;"	kind:m	union:llvm::object::Elf_Dyn_Base::__anondff8eca7010a	typeref:typename:Elf_Addr	access:public
llvm::object::Elf_Dyn_Base::__anondff8eca7010a::d_val	ELFTypes.h	/^    Elf_Word d_val;$/;"	kind:m	union:llvm::object::Elf_Dyn_Base::__anondff8eca7010a	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Dyn_Base::__anondff8eca7020a	ELFTypes.h	/^  union {$/;"	kind:u	struct:llvm::object::Elf_Dyn_Base	access:public
llvm::object::Elf_Dyn_Base::__anondff8eca7020a::d_ptr	ELFTypes.h	/^    Elf_Addr d_ptr;$/;"	kind:m	union:llvm::object::Elf_Dyn_Base::__anondff8eca7020a	typeref:typename:Elf_Addr	access:public
llvm::object::Elf_Dyn_Base::__anondff8eca7020a::d_val	ELFTypes.h	/^    Elf_Xword d_val;$/;"	kind:m	union:llvm::object::Elf_Dyn_Base::__anondff8eca7020a	typeref:typename:Elf_Xword	access:public
llvm::object::Elf_Dyn_Base::d_un	ELFTypes.h	/^  } d_un;$/;"	kind:m	struct:llvm::object::Elf_Dyn_Base	typeref:union:llvm::object::Elf_Dyn_Base::__anondff8eca7010a	access:public
llvm::object::Elf_Dyn_Base::d_un	ELFTypes.h	/^  } d_un;$/;"	kind:m	struct:llvm::object::Elf_Dyn_Base	typeref:union:llvm::object::Elf_Dyn_Base::__anondff8eca7020a	access:public
llvm::object::Elf_Dyn_Impl	ELFTypes.h	/^struct Elf_Dyn_Impl : Elf_Dyn_Base<ELFT> {$/;"	kind:s	namespace:llvm::object	inherits:Elf_Dyn_Base<ELFT>
llvm::object::Elf_Dyn_Impl::getPtr	ELFTypes.h	/^  uintX_t getPtr() const { return d_un.d_ptr; }$/;"	kind:f	struct:llvm::object::Elf_Dyn_Impl	typeref:typename:uintX_t	access:public	signature:() const
llvm::object::Elf_Dyn_Impl::getTag	ELFTypes.h	/^  intX_t getTag() const { return d_tag; }$/;"	kind:f	struct:llvm::object::Elf_Dyn_Impl	typeref:typename:intX_t	access:public	signature:() const
llvm::object::Elf_Dyn_Impl::getVal	ELFTypes.h	/^  uintX_t getVal() const { return d_un.d_val; }$/;"	kind:f	struct:llvm::object::Elf_Dyn_Impl	typeref:typename:uintX_t	access:public	signature:() const
llvm::object::Elf_Dyn_Impl::intX_t	ELFTypes.h	/^                                    int64_t, int32_t>::type intX_t;$/;"	kind:t	struct:llvm::object::Elf_Dyn_Impl	typeref:typename:std::conditional<ELFT::Is64Bits,int64_t,int32_t>::type	access:public
llvm::object::Elf_Dyn_Impl::uintX_t	ELFTypes.h	/^                                    uint64_t, uint32_t>::type uintX_t;$/;"	kind:t	struct:llvm::object::Elf_Dyn_Impl	typeref:typename:std::conditional<ELFT::Is64Bits,uint64_t,uint32_t>::type	access:public
llvm::object::Elf_Ehdr_Impl	ELFTypes.h	/^struct Elf_Ehdr_Impl {$/;"	kind:s	namespace:llvm::object
llvm::object::Elf_Ehdr_Impl::LLVM_ELF_IMPORT_TYPES_ELFT	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES_ELFT(ELFT)$/;"	kind:p	struct:llvm::object::Elf_Ehdr_Impl	access:public	signature:(ELFT)
llvm::object::Elf_Ehdr_Impl::checkMagic	ELFTypes.h	/^  bool checkMagic() const {$/;"	kind:f	struct:llvm::object::Elf_Ehdr_Impl	typeref:typename:bool	access:public	signature:() const
llvm::object::Elf_Ehdr_Impl::e_ehsize	ELFTypes.h	/^  Elf_Half e_ehsize;    \/\/ Size of ELF header, in bytes$/;"	kind:m	struct:llvm::object::Elf_Ehdr_Impl	typeref:typename:Elf_Half	access:public
llvm::object::Elf_Ehdr_Impl::e_entry	ELFTypes.h	/^  Elf_Addr e_entry;     \/\/ Address to jump to in order to start program$/;"	kind:m	struct:llvm::object::Elf_Ehdr_Impl	typeref:typename:Elf_Addr	access:public
llvm::object::Elf_Ehdr_Impl::e_flags	ELFTypes.h	/^  Elf_Word e_flags;     \/\/ Processor-specific flags$/;"	kind:m	struct:llvm::object::Elf_Ehdr_Impl	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Ehdr_Impl::e_machine	ELFTypes.h	/^  Elf_Half e_machine;   \/\/ Required architecture for this file (see EM_*)$/;"	kind:m	struct:llvm::object::Elf_Ehdr_Impl	typeref:typename:Elf_Half	access:public
llvm::object::Elf_Ehdr_Impl::e_phentsize	ELFTypes.h	/^  Elf_Half e_phentsize; \/\/ Size of an entry in the program header table$/;"	kind:m	struct:llvm::object::Elf_Ehdr_Impl	typeref:typename:Elf_Half	access:public
llvm::object::Elf_Ehdr_Impl::e_phnum	ELFTypes.h	/^  Elf_Half e_phnum;     \/\/ Number of entries in the program header table$/;"	kind:m	struct:llvm::object::Elf_Ehdr_Impl	typeref:typename:Elf_Half	access:public
llvm::object::Elf_Ehdr_Impl::e_phoff	ELFTypes.h	/^  Elf_Off e_phoff;      \/\/ Program header table's file offset, in bytes$/;"	kind:m	struct:llvm::object::Elf_Ehdr_Impl	typeref:typename:Elf_Off	access:public
llvm::object::Elf_Ehdr_Impl::e_shentsize	ELFTypes.h	/^  Elf_Half e_shentsize; \/\/ Size of an entry in the section header table$/;"	kind:m	struct:llvm::object::Elf_Ehdr_Impl	typeref:typename:Elf_Half	access:public
llvm::object::Elf_Ehdr_Impl::e_shnum	ELFTypes.h	/^  Elf_Half e_shnum;     \/\/ Number of entries in the section header table$/;"	kind:m	struct:llvm::object::Elf_Ehdr_Impl	typeref:typename:Elf_Half	access:public
llvm::object::Elf_Ehdr_Impl::e_shoff	ELFTypes.h	/^  Elf_Off e_shoff;      \/\/ Section header table's file offset, in bytes$/;"	kind:m	struct:llvm::object::Elf_Ehdr_Impl	typeref:typename:Elf_Off	access:public
llvm::object::Elf_Ehdr_Impl::e_shstrndx	ELFTypes.h	/^  Elf_Half e_shstrndx;  \/\/ Section header table index of section name$/;"	kind:m	struct:llvm::object::Elf_Ehdr_Impl	typeref:typename:Elf_Half	access:public
llvm::object::Elf_Ehdr_Impl::e_type	ELFTypes.h	/^  Elf_Half e_type;                       \/\/ Type of file (see ET_*)$/;"	kind:m	struct:llvm::object::Elf_Ehdr_Impl	typeref:typename:Elf_Half	access:public
llvm::object::Elf_Ehdr_Impl::e_version	ELFTypes.h	/^  Elf_Word e_version;   \/\/ Must be equal to 1$/;"	kind:m	struct:llvm::object::Elf_Ehdr_Impl	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Ehdr_Impl::getDataEncoding	ELFTypes.h	/^  unsigned char getDataEncoding() const { return e_ident[ELF::EI_DATA]; }$/;"	kind:f	struct:llvm::object::Elf_Ehdr_Impl	typeref:typename:unsigned char	access:public	signature:() const
llvm::object::Elf_Ehdr_Impl::getFileClass	ELFTypes.h	/^  unsigned char getFileClass() const { return e_ident[ELF::EI_CLASS]; }$/;"	kind:f	struct:llvm::object::Elf_Ehdr_Impl	typeref:typename:unsigned char	access:public	signature:() const
llvm::object::Elf_GnuHash_Impl	ELFTypes.h	/^struct Elf_GnuHash_Impl {$/;"	kind:s	namespace:llvm::object
llvm::object::Elf_GnuHash_Impl::LLVM_ELF_IMPORT_TYPES_ELFT	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES_ELFT(ELFT)$/;"	kind:p	struct:llvm::object::Elf_GnuHash_Impl	access:public	signature:(ELFT)
llvm::object::Elf_GnuHash_Impl::buckets	ELFTypes.h	/^  ArrayRef<Elf_Word> buckets() const {$/;"	kind:f	struct:llvm::object::Elf_GnuHash_Impl	typeref:typename:ArrayRef<Elf_Word>	access:public	signature:() const
llvm::object::Elf_GnuHash_Impl::filter	ELFTypes.h	/^  ArrayRef<Elf_Off> filter() const {$/;"	kind:f	struct:llvm::object::Elf_GnuHash_Impl	typeref:typename:ArrayRef<Elf_Off>	access:public	signature:() const
llvm::object::Elf_GnuHash_Impl::maskwords	ELFTypes.h	/^  Elf_Word maskwords;$/;"	kind:m	struct:llvm::object::Elf_GnuHash_Impl	typeref:typename:Elf_Word	access:public
llvm::object::Elf_GnuHash_Impl::shift2	ELFTypes.h	/^  Elf_Word shift2;$/;"	kind:m	struct:llvm::object::Elf_GnuHash_Impl	typeref:typename:Elf_Word	access:public
llvm::object::Elf_GnuHash_Impl::symndx	ELFTypes.h	/^  Elf_Word symndx;$/;"	kind:m	struct:llvm::object::Elf_GnuHash_Impl	typeref:typename:Elf_Word	access:public
llvm::object::Elf_GnuHash_Impl::values	ELFTypes.h	/^  ArrayRef<Elf_Word> values(unsigned DynamicSymCount) const {$/;"	kind:f	struct:llvm::object::Elf_GnuHash_Impl	typeref:typename:ArrayRef<Elf_Word>	access:public	signature:(unsigned DynamicSymCount) const
llvm::object::Elf_Hash_Impl	ELFTypes.h	/^struct Elf_Hash_Impl {$/;"	kind:s	namespace:llvm::object
llvm::object::Elf_Hash_Impl::LLVM_ELF_IMPORT_TYPES_ELFT	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES_ELFT(ELFT)$/;"	kind:p	struct:llvm::object::Elf_Hash_Impl	access:public	signature:(ELFT)
llvm::object::Elf_Hash_Impl::buckets	ELFTypes.h	/^  ArrayRef<Elf_Word> buckets() const {$/;"	kind:f	struct:llvm::object::Elf_Hash_Impl	typeref:typename:ArrayRef<Elf_Word>	access:public	signature:() const
llvm::object::Elf_Hash_Impl::chains	ELFTypes.h	/^  ArrayRef<Elf_Word> chains() const {$/;"	kind:f	struct:llvm::object::Elf_Hash_Impl	typeref:typename:ArrayRef<Elf_Word>	access:public	signature:() const
llvm::object::Elf_Hash_Impl::nchain	ELFTypes.h	/^  Elf_Word nchain;$/;"	kind:m	struct:llvm::object::Elf_Hash_Impl	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Mips_ABIFlags	ELFTypes.h	/^template <class ELFT> struct Elf_Mips_ABIFlags {$/;"	kind:s	namespace:llvm::object
llvm::object::Elf_Mips_ABIFlags::LLVM_ELF_IMPORT_TYPES_ELFT	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES_ELFT(ELFT)$/;"	kind:p	struct:llvm::object::Elf_Mips_ABIFlags	access:public	signature:(ELFT)
llvm::object::Elf_Mips_ABIFlags::ases	ELFTypes.h	/^  Elf_Word ases;     \/\/ ASEs flags$/;"	kind:m	struct:llvm::object::Elf_Mips_ABIFlags	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Mips_ABIFlags::cpr1_size	ELFTypes.h	/^  uint8_t cpr1_size; \/\/ Co-processor 1 registers size$/;"	kind:m	struct:llvm::object::Elf_Mips_ABIFlags	typeref:typename:uint8_t	access:public
llvm::object::Elf_Mips_ABIFlags::cpr2_size	ELFTypes.h	/^  uint8_t cpr2_size; \/\/ Co-processor 2 registers size$/;"	kind:m	struct:llvm::object::Elf_Mips_ABIFlags	typeref:typename:uint8_t	access:public
llvm::object::Elf_Mips_ABIFlags::flags1	ELFTypes.h	/^  Elf_Word flags1;   \/\/ General flags$/;"	kind:m	struct:llvm::object::Elf_Mips_ABIFlags	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Mips_ABIFlags::flags2	ELFTypes.h	/^  Elf_Word flags2;   \/\/ General flags$/;"	kind:m	struct:llvm::object::Elf_Mips_ABIFlags	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Mips_ABIFlags::fp_abi	ELFTypes.h	/^  uint8_t fp_abi;    \/\/ Floating-point ABI flag$/;"	kind:m	struct:llvm::object::Elf_Mips_ABIFlags	typeref:typename:uint8_t	access:public
llvm::object::Elf_Mips_ABIFlags::gpr_size	ELFTypes.h	/^  uint8_t gpr_size;  \/\/ General purpose registers size$/;"	kind:m	struct:llvm::object::Elf_Mips_ABIFlags	typeref:typename:uint8_t	access:public
llvm::object::Elf_Mips_ABIFlags::isa_ext	ELFTypes.h	/^  Elf_Word isa_ext;  \/\/ Processor-specific extension$/;"	kind:m	struct:llvm::object::Elf_Mips_ABIFlags	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Mips_ABIFlags::isa_level	ELFTypes.h	/^  uint8_t isa_level; \/\/ ISA level: 1-5, 32, and 64$/;"	kind:m	struct:llvm::object::Elf_Mips_ABIFlags	typeref:typename:uint8_t	access:public
llvm::object::Elf_Mips_ABIFlags::isa_rev	ELFTypes.h	/^  uint8_t isa_rev;   \/\/ ISA revision (0 for MIPS I - MIPS V)$/;"	kind:m	struct:llvm::object::Elf_Mips_ABIFlags	typeref:typename:uint8_t	access:public
llvm::object::Elf_Mips_Options	ELFTypes.h	/^template <class ELFT> struct Elf_Mips_Options {$/;"	kind:s	namespace:llvm::object
llvm::object::Elf_Mips_Options::LLVM_ELF_IMPORT_TYPES_ELFT	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES_ELFT(ELFT)$/;"	kind:p	struct:llvm::object::Elf_Mips_Options	access:public	signature:(ELFT)
llvm::object::Elf_Mips_Options::getRegInfo	ELFTypes.h	/^  Elf_Mips_RegInfo<ELFT> &getRegInfo() {$/;"	kind:f	struct:llvm::object::Elf_Mips_Options	typeref:typename:Elf_Mips_RegInfo<ELFT> &	access:public	signature:()
llvm::object::Elf_Mips_Options::getRegInfo	ELFTypes.h	/^  const Elf_Mips_RegInfo<ELFT> &getRegInfo() const {$/;"	kind:f	struct:llvm::object::Elf_Mips_Options	typeref:typename:const Elf_Mips_RegInfo<ELFT> &	access:public	signature:() const
llvm::object::Elf_Mips_Options::info	ELFTypes.h	/^  Elf_Word info;    \/\/ Kind-specific information$/;"	kind:m	struct:llvm::object::Elf_Mips_Options	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Mips_Options::section	ELFTypes.h	/^  Elf_Half section; \/\/ Section header index of section affected,$/;"	kind:m	struct:llvm::object::Elf_Mips_Options	typeref:typename:Elf_Half	access:public
llvm::object::Elf_Mips_Options::size	ELFTypes.h	/^  uint8_t size;     \/\/ Byte size of descriptor, including this header$/;"	kind:m	struct:llvm::object::Elf_Mips_Options	typeref:typename:uint8_t	access:public
llvm::object::Elf_Mips_RegInfo	ELFTypes.h	/^struct Elf_Mips_RegInfo<ELFType<TargetEndianness, false>> {$/;"	kind:s	namespace:llvm::object
llvm::object::Elf_Mips_RegInfo	ELFTypes.h	/^struct Elf_Mips_RegInfo<ELFType<TargetEndianness, true>> {$/;"	kind:s	namespace:llvm::object
llvm::object::Elf_Mips_RegInfo::LLVM_ELF_IMPORT_TYPES	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES(TargetEndianness, false)$/;"	kind:p	struct:llvm::object::Elf_Mips_RegInfo	access:public	signature:(TargetEndianness,false)
llvm::object::Elf_Mips_RegInfo::LLVM_ELF_IMPORT_TYPES	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES(TargetEndianness, true)$/;"	kind:p	struct:llvm::object::Elf_Mips_RegInfo	access:public	signature:(TargetEndianness,true)
llvm::object::Elf_Mips_RegInfo::ri_cprmask	ELFTypes.h	/^  Elf_Word ri_cprmask[4];  \/\/ bit-mask of used co-processor registers$/;"	kind:m	struct:llvm::object::Elf_Mips_RegInfo	typeref:typename:Elf_Word[4]	access:public
llvm::object::Elf_Mips_RegInfo::ri_gp_value	ELFTypes.h	/^  Elf_Addr ri_gp_value;    \/\/ gp register value$/;"	kind:m	struct:llvm::object::Elf_Mips_RegInfo	typeref:typename:Elf_Addr	access:public
llvm::object::Elf_Mips_RegInfo::ri_pad	ELFTypes.h	/^  Elf_Word ri_pad;         \/\/ unused padding field$/;"	kind:m	struct:llvm::object::Elf_Mips_RegInfo	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Phdr_Impl	ELFTypes.h	/^struct Elf_Phdr_Impl<ELFType<TargetEndianness, false>> {$/;"	kind:s	namespace:llvm::object
llvm::object::Elf_Phdr_Impl	ELFTypes.h	/^struct Elf_Phdr_Impl<ELFType<TargetEndianness, true>> {$/;"	kind:s	namespace:llvm::object
llvm::object::Elf_Phdr_Impl::LLVM_ELF_IMPORT_TYPES	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES(TargetEndianness, false)$/;"	kind:p	struct:llvm::object::Elf_Phdr_Impl	access:public	signature:(TargetEndianness,false)
llvm::object::Elf_Phdr_Impl::LLVM_ELF_IMPORT_TYPES	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES(TargetEndianness, true)$/;"	kind:p	struct:llvm::object::Elf_Phdr_Impl	access:public	signature:(TargetEndianness,true)
llvm::object::Elf_Phdr_Impl::p_align	ELFTypes.h	/^  Elf_Word p_align;  \/\/ Segment alignment constraint$/;"	kind:m	struct:llvm::object::Elf_Phdr_Impl	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Phdr_Impl::p_align	ELFTypes.h	/^  Elf_Xword p_align;  \/\/ Segment alignment constraint$/;"	kind:m	struct:llvm::object::Elf_Phdr_Impl	typeref:typename:Elf_Xword	access:public
llvm::object::Elf_Phdr_Impl::p_filesz	ELFTypes.h	/^  Elf_Word p_filesz; \/\/ Num. of bytes in file image of segment (may be zero)$/;"	kind:m	struct:llvm::object::Elf_Phdr_Impl	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Phdr_Impl::p_filesz	ELFTypes.h	/^  Elf_Xword p_filesz; \/\/ Num. of bytes in file image of segment (may be zero)$/;"	kind:m	struct:llvm::object::Elf_Phdr_Impl	typeref:typename:Elf_Xword	access:public
llvm::object::Elf_Phdr_Impl::p_flags	ELFTypes.h	/^  Elf_Word p_flags;   \/\/ Segment flags$/;"	kind:m	struct:llvm::object::Elf_Phdr_Impl	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Phdr_Impl::p_flags	ELFTypes.h	/^  Elf_Word p_flags;  \/\/ Segment flags$/;"	kind:m	struct:llvm::object::Elf_Phdr_Impl	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Phdr_Impl::p_memsz	ELFTypes.h	/^  Elf_Word p_memsz;  \/\/ Num. of bytes in mem image of segment (may be zero)$/;"	kind:m	struct:llvm::object::Elf_Phdr_Impl	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Phdr_Impl::p_memsz	ELFTypes.h	/^  Elf_Xword p_memsz;  \/\/ Num. of bytes in mem image of segment (may be zero)$/;"	kind:m	struct:llvm::object::Elf_Phdr_Impl	typeref:typename:Elf_Xword	access:public
llvm::object::Elf_Phdr_Impl::p_offset	ELFTypes.h	/^  Elf_Off p_offset;   \/\/ FileOffset where segment is located, in bytes$/;"	kind:m	struct:llvm::object::Elf_Phdr_Impl	typeref:typename:Elf_Off	access:public
llvm::object::Elf_Phdr_Impl::p_offset	ELFTypes.h	/^  Elf_Off p_offset;  \/\/ FileOffset where segment is located, in bytes$/;"	kind:m	struct:llvm::object::Elf_Phdr_Impl	typeref:typename:Elf_Off	access:public
llvm::object::Elf_Phdr_Impl::p_paddr	ELFTypes.h	/^  Elf_Addr p_paddr;   \/\/ Physical address of beginning of segment (OS-specific)$/;"	kind:m	struct:llvm::object::Elf_Phdr_Impl	typeref:typename:Elf_Addr	access:public
llvm::object::Elf_Phdr_Impl::p_paddr	ELFTypes.h	/^  Elf_Addr p_paddr;  \/\/ Physical address of beginning of segment (OS-specific)$/;"	kind:m	struct:llvm::object::Elf_Phdr_Impl	typeref:typename:Elf_Addr	access:public
llvm::object::Elf_Phdr_Impl::p_vaddr	ELFTypes.h	/^  Elf_Addr p_vaddr;   \/\/ Virtual Address of beginning of segment$/;"	kind:m	struct:llvm::object::Elf_Phdr_Impl	typeref:typename:Elf_Addr	access:public
llvm::object::Elf_Phdr_Impl::p_vaddr	ELFTypes.h	/^  Elf_Addr p_vaddr;  \/\/ Virtual Address of beginning of segment$/;"	kind:m	struct:llvm::object::Elf_Phdr_Impl	typeref:typename:Elf_Addr	access:public
llvm::object::Elf_Rel_Impl	ELFTypes.h	/^struct Elf_Rel_Impl<ELFType<TargetEndianness, false>, false> {$/;"	kind:s	namespace:llvm::object
llvm::object::Elf_Rel_Impl	ELFTypes.h	/^struct Elf_Rel_Impl<ELFType<TargetEndianness, false>, true>$/;"	kind:s	namespace:llvm::object	inherits:Elf_Rel_Impl<ELFType<TargetEndianness,false>,false>
llvm::object::Elf_Rel_Impl	ELFTypes.h	/^struct Elf_Rel_Impl<ELFType<TargetEndianness, true>, false> {$/;"	kind:s	namespace:llvm::object
llvm::object::Elf_Rel_Impl	ELFTypes.h	/^struct Elf_Rel_Impl<ELFType<TargetEndianness, true>, true>$/;"	kind:s	namespace:llvm::object	inherits:Elf_Rel_Impl<ELFType<TargetEndianness,true>,false>
llvm::object::Elf_Rel_Impl::LLVM_ELF_IMPORT_TYPES	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES(TargetEndianness, false)$/;"	kind:p	struct:llvm::object::Elf_Rel_Impl	access:public	signature:(TargetEndianness,false) const
llvm::object::Elf_Rel_Impl::LLVM_ELF_IMPORT_TYPES	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES(TargetEndianness, true)$/;"	kind:p	struct:llvm::object::Elf_Rel_Impl	access:public	signature:(TargetEndianness,true) const
llvm::object::Elf_Rel_Impl::getRInfo	ELFTypes.h	/^  uint32_t getRInfo(bool isMips64EL) const {$/;"	kind:f	struct:llvm::object::Elf_Rel_Impl	typeref:typename:uint32_t	access:public	signature:(bool isMips64EL) const
llvm::object::Elf_Rel_Impl::getRInfo	ELFTypes.h	/^  uint64_t getRInfo(bool isMips64EL) const {$/;"	kind:f	struct:llvm::object::Elf_Rel_Impl	typeref:typename:uint64_t	access:public	signature:(bool isMips64EL) const
llvm::object::Elf_Rel_Impl::getSymbol	ELFTypes.h	/^  uint32_t getSymbol(bool isMips64EL) const {$/;"	kind:f	struct:llvm::object::Elf_Rel_Impl	typeref:typename:uint32_t	access:public	signature:(bool isMips64EL) const
llvm::object::Elf_Rel_Impl::getType	ELFTypes.h	/^  uint32_t getType(bool isMips64EL) const {$/;"	kind:f	struct:llvm::object::Elf_Rel_Impl	typeref:typename:uint32_t	access:public	signature:(bool isMips64EL) const
llvm::object::Elf_Rel_Impl::getType	ELFTypes.h	/^  unsigned char getType(bool isMips64EL) const {$/;"	kind:f	struct:llvm::object::Elf_Rel_Impl	typeref:typename:unsigned char	access:public	signature:(bool isMips64EL) const
llvm::object::Elf_Rel_Impl::r_addend	ELFTypes.h	/^  Elf_Sword r_addend; \/\/ Compute value for relocatable field by adding this$/;"	kind:m	struct:llvm::object::Elf_Rel_Impl	typeref:typename:Elf_Sword	access:public
llvm::object::Elf_Rel_Impl::r_addend	ELFTypes.h	/^  Elf_Sxword r_addend; \/\/ Compute value for relocatable field by adding this.$/;"	kind:m	struct:llvm::object::Elf_Rel_Impl	typeref:typename:Elf_Sxword	access:public
llvm::object::Elf_Rel_Impl::r_info	ELFTypes.h	/^  Elf_Word r_info;   \/\/ Symbol table index and type of relocation to apply$/;"	kind:m	struct:llvm::object::Elf_Rel_Impl	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Rel_Impl::r_info	ELFTypes.h	/^  Elf_Xword r_info;  \/\/ Symbol table index and type of relocation to apply$/;"	kind:m	struct:llvm::object::Elf_Rel_Impl	typeref:typename:Elf_Xword	access:public
llvm::object::Elf_Rel_Impl::r_offset	ELFTypes.h	/^  Elf_Addr r_offset; \/\/ Location (file byte offset, or program virtual addr)$/;"	kind:m	struct:llvm::object::Elf_Rel_Impl	typeref:typename:Elf_Addr	access:public
llvm::object::Elf_Rel_Impl::setRInfo	ELFTypes.h	/^  void setRInfo(uint32_t R, bool IsMips64EL) {$/;"	kind:f	struct:llvm::object::Elf_Rel_Impl	typeref:typename:void	access:public	signature:(uint32_t R,bool IsMips64EL)
llvm::object::Elf_Rel_Impl::setRInfo	ELFTypes.h	/^  void setRInfo(uint64_t R, bool IsMips64EL) {$/;"	kind:f	struct:llvm::object::Elf_Rel_Impl	typeref:typename:void	access:public	signature:(uint64_t R,bool IsMips64EL)
llvm::object::Elf_Rel_Impl::setSymbol	ELFTypes.h	/^  void setSymbol(uint32_t s, bool IsMips64EL) {$/;"	kind:f	struct:llvm::object::Elf_Rel_Impl	typeref:typename:void	access:public	signature:(uint32_t s,bool IsMips64EL)
llvm::object::Elf_Rel_Impl::setSymbolAndType	ELFTypes.h	/^  void setSymbolAndType(uint32_t s, uint32_t t, bool IsMips64EL) {$/;"	kind:f	struct:llvm::object::Elf_Rel_Impl	typeref:typename:void	access:public	signature:(uint32_t s,uint32_t t,bool IsMips64EL)
llvm::object::Elf_Rel_Impl::setSymbolAndType	ELFTypes.h	/^  void setSymbolAndType(uint32_t s, unsigned char t, bool IsMips64EL) {$/;"	kind:f	struct:llvm::object::Elf_Rel_Impl	typeref:typename:void	access:public	signature:(uint32_t s,unsigned char t,bool IsMips64EL)
llvm::object::Elf_Rel_Impl::setType	ELFTypes.h	/^  void setType(uint32_t t, bool IsMips64EL) {$/;"	kind:f	struct:llvm::object::Elf_Rel_Impl	typeref:typename:void	access:public	signature:(uint32_t t,bool IsMips64EL)
llvm::object::Elf_Rel_Impl::setType	ELFTypes.h	/^  void setType(unsigned char t, bool IsMips64EL) {$/;"	kind:f	struct:llvm::object::Elf_Rel_Impl	typeref:typename:void	access:public	signature:(unsigned char t,bool IsMips64EL)
llvm::object::Elf_Shdr_Base	ELFTypes.h	/^struct Elf_Shdr_Base<ELFType<TargetEndianness, false>> {$/;"	kind:s	namespace:llvm::object
llvm::object::Elf_Shdr_Base	ELFTypes.h	/^struct Elf_Shdr_Base<ELFType<TargetEndianness, true>> {$/;"	kind:s	namespace:llvm::object
llvm::object::Elf_Shdr_Base::LLVM_ELF_IMPORT_TYPES	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES(TargetEndianness, false)$/;"	kind:p	struct:llvm::object::Elf_Shdr_Base	access:public	signature:(TargetEndianness,false)
llvm::object::Elf_Shdr_Base::LLVM_ELF_IMPORT_TYPES	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES(TargetEndianness, true)$/;"	kind:p	struct:llvm::object::Elf_Shdr_Base	access:public	signature:(TargetEndianness,true)
llvm::object::Elf_Shdr_Base::sh_addr	ELFTypes.h	/^  Elf_Addr sh_addr;       \/\/ Address where section is to be loaded$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Addr	access:public
llvm::object::Elf_Shdr_Base::sh_addr	ELFTypes.h	/^  Elf_Addr sh_addr;      \/\/ Address where section is to be loaded$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Addr	access:public
llvm::object::Elf_Shdr_Base::sh_addralign	ELFTypes.h	/^  Elf_Word sh_addralign; \/\/ Section address alignment$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Shdr_Base::sh_addralign	ELFTypes.h	/^  Elf_Xword sh_addralign; \/\/ Section address alignment$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Xword	access:public
llvm::object::Elf_Shdr_Base::sh_entsize	ELFTypes.h	/^  Elf_Word sh_entsize;   \/\/ Size of records contained within the section$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Shdr_Base::sh_entsize	ELFTypes.h	/^  Elf_Xword sh_entsize;   \/\/ Size of records contained within the section$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Xword	access:public
llvm::object::Elf_Shdr_Base::sh_flags	ELFTypes.h	/^  Elf_Word sh_flags;     \/\/ Section flags (SHF_*)$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Shdr_Base::sh_flags	ELFTypes.h	/^  Elf_Xword sh_flags;     \/\/ Section flags (SHF_*)$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Xword	access:public
llvm::object::Elf_Shdr_Base::sh_info	ELFTypes.h	/^  Elf_Word sh_info;       \/\/ Section type-specific extra information$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Shdr_Base::sh_info	ELFTypes.h	/^  Elf_Word sh_info;      \/\/ Section type-specific extra information$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Shdr_Base::sh_link	ELFTypes.h	/^  Elf_Word sh_link;       \/\/ Section type-specific header table index link$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Shdr_Base::sh_link	ELFTypes.h	/^  Elf_Word sh_link;      \/\/ Section type-specific header table index link$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Shdr_Base::sh_offset	ELFTypes.h	/^  Elf_Off sh_offset;      \/\/ File offset of section data, in bytes$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Off	access:public
llvm::object::Elf_Shdr_Base::sh_offset	ELFTypes.h	/^  Elf_Off sh_offset;     \/\/ File offset of section data, in bytes$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Off	access:public
llvm::object::Elf_Shdr_Base::sh_size	ELFTypes.h	/^  Elf_Word sh_size;      \/\/ Size of section, in bytes$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Shdr_Base::sh_size	ELFTypes.h	/^  Elf_Xword sh_size;      \/\/ Size of section, in bytes$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Xword	access:public
llvm::object::Elf_Shdr_Base::sh_type	ELFTypes.h	/^  Elf_Word sh_type;       \/\/ Section type (SHT_*)$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Shdr_Base::sh_type	ELFTypes.h	/^  Elf_Word sh_type;      \/\/ Section type (SHT_*)$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Shdr_Impl	ELFTypes.h	/^struct Elf_Shdr_Impl : Elf_Shdr_Base<ELFT> {$/;"	kind:s	namespace:llvm::object	inherits:Elf_Shdr_Base<ELFT>
llvm::object::Elf_Shdr_Impl::getEntityCount	ELFTypes.h	/^  unsigned getEntityCount() const {$/;"	kind:f	struct:llvm::object::Elf_Shdr_Impl	typeref:typename:unsigned	access:public	signature:() const
llvm::object::Elf_Sym_Base	ELFTypes.h	/^struct Elf_Sym_Base<ELFType<TargetEndianness, false>> {$/;"	kind:s	namespace:llvm::object
llvm::object::Elf_Sym_Base	ELFTypes.h	/^struct Elf_Sym_Base<ELFType<TargetEndianness, true>> {$/;"	kind:s	namespace:llvm::object
llvm::object::Elf_Sym_Base::LLVM_ELF_IMPORT_TYPES	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES(TargetEndianness, false)$/;"	kind:p	struct:llvm::object::Elf_Sym_Base	access:public	signature:(TargetEndianness,false)
llvm::object::Elf_Sym_Base::LLVM_ELF_IMPORT_TYPES	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES(TargetEndianness, true)$/;"	kind:p	struct:llvm::object::Elf_Sym_Base	access:public	signature:(TargetEndianness,true)
llvm::object::Elf_Sym_Base::st_info	ELFTypes.h	/^  unsigned char st_info;  \/\/ Symbol's type and binding attributes$/;"	kind:m	struct:llvm::object::Elf_Sym_Base	typeref:typename:unsigned char	access:public
llvm::object::Elf_Sym_Base::st_other	ELFTypes.h	/^  unsigned char st_other; \/\/ Must be zero; reserved$/;"	kind:m	struct:llvm::object::Elf_Sym_Base	typeref:typename:unsigned char	access:public
llvm::object::Elf_Sym_Base::st_shndx	ELFTypes.h	/^  Elf_Half st_shndx;      \/\/ Which section (header table index) it's defined in$/;"	kind:m	struct:llvm::object::Elf_Sym_Base	typeref:typename:Elf_Half	access:public
llvm::object::Elf_Sym_Base::st_size	ELFTypes.h	/^  Elf_Word st_size;       \/\/ Size of the symbol$/;"	kind:m	struct:llvm::object::Elf_Sym_Base	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Sym_Base::st_size	ELFTypes.h	/^  Elf_Xword st_size;      \/\/ Size of the symbol$/;"	kind:m	struct:llvm::object::Elf_Sym_Base	typeref:typename:Elf_Xword	access:public
llvm::object::Elf_Sym_Base::st_value	ELFTypes.h	/^  Elf_Addr st_value;      \/\/ Value or address associated with the symbol$/;"	kind:m	struct:llvm::object::Elf_Sym_Base	typeref:typename:Elf_Addr	access:public
llvm::object::Elf_Sym_Impl	ELFTypes.h	/^struct Elf_Sym_Impl : Elf_Sym_Base<ELFT> {$/;"	kind:s	namespace:llvm::object	inherits:Elf_Sym_Base<ELFT>
llvm::object::Elf_Sym_Impl::getBinding	ELFTypes.h	/^  unsigned char getBinding() const { return st_info >> 4; }$/;"	kind:f	struct:llvm::object::Elf_Sym_Impl	typeref:typename:unsigned char	access:public	signature:() const
llvm::object::Elf_Sym_Impl::getName	ELFTypes.h	/^  Expected<StringRef> getName(StringRef StrTab) const;$/;"	kind:p	struct:llvm::object::Elf_Sym_Impl	typeref:typename:Expected<StringRef>	access:public	signature:(StringRef StrTab) const
llvm::object::Elf_Sym_Impl::getName	ELFTypes.h	/^Expected<StringRef> Elf_Sym_Impl<ELFT>::getName(StringRef StrTab) const {$/;"	kind:f	class:llvm::object::Elf_Sym_Impl	typeref:typename:Expected<StringRef>	signature:(StringRef StrTab) const
llvm::object::Elf_Sym_Impl::getType	ELFTypes.h	/^  unsigned char getType() const { return st_info & 0x0f; }$/;"	kind:f	struct:llvm::object::Elf_Sym_Impl	typeref:typename:unsigned char	access:public	signature:() const
llvm::object::Elf_Sym_Impl::getValue	ELFTypes.h	/^  uint64_t getValue() const { return st_value; }$/;"	kind:f	struct:llvm::object::Elf_Sym_Impl	typeref:typename:uint64_t	access:public	signature:() const
llvm::object::Elf_Sym_Impl::getVisibility	ELFTypes.h	/^  unsigned char getVisibility() const { return st_other & 0x3; }$/;"	kind:f	struct:llvm::object::Elf_Sym_Impl	typeref:typename:unsigned char	access:public	signature:() const
llvm::object::Elf_Sym_Impl::isAbsolute	ELFTypes.h	/^  bool isAbsolute() const { return st_shndx == ELF::SHN_ABS; }$/;"	kind:f	struct:llvm::object::Elf_Sym_Impl	typeref:typename:bool	access:public	signature:() const
llvm::object::Elf_Sym_Impl::isCommon	ELFTypes.h	/^  bool isCommon() const {$/;"	kind:f	struct:llvm::object::Elf_Sym_Impl	typeref:typename:bool	access:public	signature:() const
llvm::object::Elf_Sym_Impl::isDefined	ELFTypes.h	/^  bool isDefined() const { return !isUndefined(); }$/;"	kind:f	struct:llvm::object::Elf_Sym_Impl	typeref:typename:bool	access:public	signature:() const
llvm::object::Elf_Sym_Impl::isExternal	ELFTypes.h	/^  bool isExternal() const {$/;"	kind:f	struct:llvm::object::Elf_Sym_Impl	typeref:typename:bool	access:public	signature:() const
llvm::object::Elf_Sym_Impl::isOSSpecific	ELFTypes.h	/^  bool isOSSpecific() const {$/;"	kind:f	struct:llvm::object::Elf_Sym_Impl	typeref:typename:bool	access:public	signature:() const
llvm::object::Elf_Sym_Impl::isProcessorSpecific	ELFTypes.h	/^  bool isProcessorSpecific() const {$/;"	kind:f	struct:llvm::object::Elf_Sym_Impl	typeref:typename:bool	access:public	signature:() const
llvm::object::Elf_Sym_Impl::isReserved	ELFTypes.h	/^  bool isReserved() const {$/;"	kind:f	struct:llvm::object::Elf_Sym_Impl	typeref:typename:bool	access:public	signature:() const
llvm::object::Elf_Sym_Impl::isUndefined	ELFTypes.h	/^  bool isUndefined() const { return st_shndx == ELF::SHN_UNDEF; }$/;"	kind:f	struct:llvm::object::Elf_Sym_Impl	typeref:typename:bool	access:public	signature:() const
llvm::object::Elf_Sym_Impl::setBinding	ELFTypes.h	/^  void setBinding(unsigned char b) { setBindingAndType(b, getType()); }$/;"	kind:f	struct:llvm::object::Elf_Sym_Impl	typeref:typename:void	access:public	signature:(unsigned char b)
llvm::object::Elf_Sym_Impl::setBindingAndType	ELFTypes.h	/^  void setBindingAndType(unsigned char b, unsigned char t) {$/;"	kind:f	struct:llvm::object::Elf_Sym_Impl	typeref:typename:void	access:public	signature:(unsigned char b,unsigned char t)
llvm::object::Elf_Sym_Impl::setType	ELFTypes.h	/^  void setType(unsigned char t) { setBindingAndType(getBinding(), t); }$/;"	kind:f	struct:llvm::object::Elf_Sym_Impl	typeref:typename:void	access:public	signature:(unsigned char t)
llvm::object::Elf_Sym_Impl::setVisibility	ELFTypes.h	/^  void setVisibility(unsigned char v) {$/;"	kind:f	struct:llvm::object::Elf_Sym_Impl	typeref:typename:void	access:public	signature:(unsigned char v)
llvm::object::Elf_Verdaux_Impl	ELFTypes.h	/^struct Elf_Verdaux_Impl {$/;"	kind:s	namespace:llvm::object
llvm::object::Elf_Verdaux_Impl::LLVM_ELF_IMPORT_TYPES_ELFT	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES_ELFT(ELFT)$/;"	kind:p	struct:llvm::object::Elf_Verdaux_Impl	access:public	signature:(ELFT)
llvm::object::Elf_Verdaux_Impl::vda_next	ELFTypes.h	/^  Elf_Word vda_next; \/\/ Offset to next Verdaux entry (in bytes)$/;"	kind:m	struct:llvm::object::Elf_Verdaux_Impl	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Verdef_Impl	ELFTypes.h	/^struct Elf_Verdef_Impl {$/;"	kind:s	namespace:llvm::object
llvm::object::Elf_Verdef_Impl::Elf_Verdaux	ELFTypes.h	/^  typedef Elf_Verdaux_Impl<ELFT> Elf_Verdaux;$/;"	kind:t	struct:llvm::object::Elf_Verdef_Impl	typeref:typename:Elf_Verdaux_Impl<ELFT>	access:public
llvm::object::Elf_Verdef_Impl::getAux	ELFTypes.h	/^  const Elf_Verdaux *getAux() const {$/;"	kind:f	struct:llvm::object::Elf_Verdef_Impl	typeref:typename:const Elf_Verdaux *	access:public	signature:() const
llvm::object::Elf_Verdef_Impl::vd_aux	ELFTypes.h	/^  Elf_Word vd_aux;     \/\/ Offset to the first Verdaux entry (in bytes)$/;"	kind:m	struct:llvm::object::Elf_Verdef_Impl	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Verdef_Impl::vd_cnt	ELFTypes.h	/^  Elf_Half vd_cnt;     \/\/ Number of Verdaux entries$/;"	kind:m	struct:llvm::object::Elf_Verdef_Impl	typeref:typename:Elf_Half	access:public
llvm::object::Elf_Verdef_Impl::vd_flags	ELFTypes.h	/^  Elf_Half vd_flags;   \/\/ Bitwise flags (VER_DEF_*)$/;"	kind:m	struct:llvm::object::Elf_Verdef_Impl	typeref:typename:Elf_Half	access:public
llvm::object::Elf_Verdef_Impl::vd_hash	ELFTypes.h	/^  Elf_Word vd_hash;    \/\/ Hash of name$/;"	kind:m	struct:llvm::object::Elf_Verdef_Impl	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Verdef_Impl::vd_ndx	ELFTypes.h	/^  Elf_Half vd_ndx;     \/\/ Version index, used in .gnu.version entries$/;"	kind:m	struct:llvm::object::Elf_Verdef_Impl	typeref:typename:Elf_Half	access:public
llvm::object::Elf_Verdef_Impl::vd_next	ELFTypes.h	/^  Elf_Word vd_next;    \/\/ Offset to the next Verdef entry (in bytes)$/;"	kind:m	struct:llvm::object::Elf_Verdef_Impl	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Verdef_Impl::vd_version	ELFTypes.h	/^  Elf_Half vd_version; \/\/ Version of this structure (e.g. VER_DEF_CURRENT)$/;"	kind:m	struct:llvm::object::Elf_Verdef_Impl	typeref:typename:Elf_Half	access:public
llvm::object::Elf_Vernaux_Impl	ELFTypes.h	/^struct Elf_Vernaux_Impl {$/;"	kind:s	namespace:llvm::object
llvm::object::Elf_Vernaux_Impl::LLVM_ELF_IMPORT_TYPES_ELFT	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES_ELFT(ELFT)$/;"	kind:p	struct:llvm::object::Elf_Vernaux_Impl	access:public	signature:(ELFT)
llvm::object::Elf_Vernaux_Impl::vna_flags	ELFTypes.h	/^  Elf_Half vna_flags; \/\/ Bitwise Flags (VER_FLAG_*)$/;"	kind:m	struct:llvm::object::Elf_Vernaux_Impl	typeref:typename:Elf_Half	access:public
llvm::object::Elf_Vernaux_Impl::vna_name	ELFTypes.h	/^  Elf_Word vna_name;  \/\/ Dependency name$/;"	kind:m	struct:llvm::object::Elf_Vernaux_Impl	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Vernaux_Impl::vna_next	ELFTypes.h	/^  Elf_Word vna_next;  \/\/ Offset to next Vernaux entry (in bytes)$/;"	kind:m	struct:llvm::object::Elf_Vernaux_Impl	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Vernaux_Impl::vna_other	ELFTypes.h	/^  Elf_Half vna_other; \/\/ Version index, used in .gnu.version entries$/;"	kind:m	struct:llvm::object::Elf_Vernaux_Impl	typeref:typename:Elf_Half	access:public
llvm::object::Elf_Verneed_Impl	ELFTypes.h	/^struct Elf_Verneed_Impl {$/;"	kind:s	namespace:llvm::object
llvm::object::Elf_Verneed_Impl::LLVM_ELF_IMPORT_TYPES_ELFT	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES_ELFT(ELFT)$/;"	kind:p	struct:llvm::object::Elf_Verneed_Impl	access:public	signature:(ELFT)
llvm::object::Elf_Verneed_Impl::vn_aux	ELFTypes.h	/^  Elf_Word vn_aux;     \/\/ Offset to first Vernaux entry (in bytes)$/;"	kind:m	struct:llvm::object::Elf_Verneed_Impl	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Verneed_Impl::vn_cnt	ELFTypes.h	/^  Elf_Half vn_cnt;     \/\/ Number of associated Vernaux entries$/;"	kind:m	struct:llvm::object::Elf_Verneed_Impl	typeref:typename:Elf_Half	access:public
llvm::object::Elf_Verneed_Impl::vn_file	ELFTypes.h	/^  Elf_Word vn_file;    \/\/ Library name (string table offset)$/;"	kind:m	struct:llvm::object::Elf_Verneed_Impl	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Verneed_Impl::vn_next	ELFTypes.h	/^  Elf_Word vn_next;    \/\/ Offset to next Verneed entry (in bytes)$/;"	kind:m	struct:llvm::object::Elf_Verneed_Impl	typeref:typename:Elf_Word	access:public
llvm::object::Elf_Versym_Impl	ELFTypes.h	/^struct Elf_Versym_Impl {$/;"	kind:s	namespace:llvm::object
llvm::object::Elf_Versym_Impl::LLVM_ELF_IMPORT_TYPES_ELFT	ELFTypes.h	/^  LLVM_ELF_IMPORT_TYPES_ELFT(ELFT)$/;"	kind:p	struct:llvm::object::Elf_Versym_Impl	access:public	signature:(ELFT)
llvm::object::ExportDirectoryEntryRef	COFF.h	/^class ExportDirectoryEntryRef {$/;"	kind:c	namespace:llvm::object
llvm::object::ExportDirectoryEntryRef::ExportDirectoryEntryRef	COFF.h	/^  ExportDirectoryEntryRef() : OwningObject(nullptr) {}$/;"	kind:f	class:llvm::object::ExportDirectoryEntryRef	access:public	signature:()
llvm::object::ExportDirectoryEntryRef::ExportDirectoryEntryRef	COFF.h	/^  ExportDirectoryEntryRef(const export_directory_table_entry *Table, uint32_t I,$/;"	kind:f	class:llvm::object::ExportDirectoryEntryRef	access:public	signature:(const export_directory_table_entry * Table,uint32_t I,const COFFObjectFile * Owner)
llvm::object::ExportDirectoryEntryRef::ExportTable	COFF.h	/^  const export_directory_table_entry *ExportTable;$/;"	kind:m	class:llvm::object::ExportDirectoryEntryRef	typeref:typename:const export_directory_table_entry *	access:private
llvm::object::ExportDirectoryEntryRef::Index	COFF.h	/^  uint32_t Index;$/;"	kind:m	class:llvm::object::ExportDirectoryEntryRef	typeref:typename:uint32_t	access:private
llvm::object::ExportDirectoryEntryRef::OwningObject	COFF.h	/^  const COFFObjectFile *OwningObject;$/;"	kind:m	class:llvm::object::ExportDirectoryEntryRef	typeref:typename:const COFFObjectFile *	access:private
llvm::object::ExportDirectoryEntryRef::getDllName	COFF.h	/^  std::error_code getDllName(StringRef &Result) const;$/;"	kind:p	class:llvm::object::ExportDirectoryEntryRef	typeref:typename:std::error_code	access:public	signature:(StringRef & Result) const
llvm::object::ExportDirectoryEntryRef::getExportRVA	COFF.h	/^  std::error_code getExportRVA(uint32_t &Result) const;$/;"	kind:p	class:llvm::object::ExportDirectoryEntryRef	typeref:typename:std::error_code	access:public	signature:(uint32_t & Result) const
llvm::object::ExportDirectoryEntryRef::getForwardTo	COFF.h	/^  std::error_code getForwardTo(StringRef &Result) const;$/;"	kind:p	class:llvm::object::ExportDirectoryEntryRef	typeref:typename:std::error_code	access:public	signature:(StringRef & Result) const
llvm::object::ExportDirectoryEntryRef::getOrdinal	COFF.h	/^  std::error_code getOrdinal(uint32_t &Result) const;$/;"	kind:p	class:llvm::object::ExportDirectoryEntryRef	typeref:typename:std::error_code	access:public	signature:(uint32_t & Result) const
llvm::object::ExportDirectoryEntryRef::getOrdinalBase	COFF.h	/^  std::error_code getOrdinalBase(uint32_t &Result) const;$/;"	kind:p	class:llvm::object::ExportDirectoryEntryRef	typeref:typename:std::error_code	access:public	signature:(uint32_t & Result) const
llvm::object::ExportDirectoryEntryRef::getSymbolName	COFF.h	/^  std::error_code getSymbolName(StringRef &Result) const;$/;"	kind:p	class:llvm::object::ExportDirectoryEntryRef	typeref:typename:std::error_code	access:public	signature:(StringRef & Result) const
llvm::object::ExportDirectoryEntryRef::isForwarder	COFF.h	/^  std::error_code isForwarder(bool &Result) const;$/;"	kind:p	class:llvm::object::ExportDirectoryEntryRef	typeref:typename:std::error_code	access:public	signature:(bool & Result) const
llvm::object::ExportDirectoryEntryRef::moveNext	COFF.h	/^  void moveNext();$/;"	kind:p	class:llvm::object::ExportDirectoryEntryRef	typeref:typename:void	access:public	signature:()
llvm::object::ExportDirectoryEntryRef::operator ==	COFF.h	/^  bool operator==(const ExportDirectoryEntryRef &Other) const;$/;"	kind:p	class:llvm::object::ExportDirectoryEntryRef	typeref:typename:bool	access:public	signature:(const ExportDirectoryEntryRef & Other) const
llvm::object::ExportEntry	MachO.h	/^class ExportEntry {$/;"	kind:c	namespace:llvm::object
llvm::object::ExportEntry::CumulativeString	MachO.h	/^  SmallString<256> CumulativeString;$/;"	kind:m	class:llvm::object::ExportEntry	typeref:typename:SmallString<256>	access:private
llvm::object::ExportEntry::Done	MachO.h	/^  bool Done;$/;"	kind:m	class:llvm::object::ExportEntry	typeref:typename:bool	access:private
llvm::object::ExportEntry::ExportEntry	MachO.h	/^  ExportEntry(ArrayRef<uint8_t> Trie);$/;"	kind:p	class:llvm::object::ExportEntry	access:public	signature:(ArrayRef<uint8_t> Trie)
llvm::object::ExportEntry::Malformed	MachO.h	/^  bool Malformed;$/;"	kind:m	class:llvm::object::ExportEntry	typeref:typename:bool	access:private
llvm::object::ExportEntry::NodeState	MachO.h	/^  struct NodeState {$/;"	kind:s	class:llvm::object::ExportEntry	access:private
llvm::object::ExportEntry::NodeState::Address	MachO.h	/^    uint64_t Address;$/;"	kind:m	struct:llvm::object::ExportEntry::NodeState	typeref:typename:uint64_t	access:public
llvm::object::ExportEntry::NodeState::ChildCount	MachO.h	/^    unsigned ChildCount;$/;"	kind:m	struct:llvm::object::ExportEntry::NodeState	typeref:typename:unsigned	access:public
llvm::object::ExportEntry::NodeState::Current	MachO.h	/^    const uint8_t *Current;$/;"	kind:m	struct:llvm::object::ExportEntry::NodeState	typeref:typename:const uint8_t *	access:public
llvm::object::ExportEntry::NodeState::Flags	MachO.h	/^    uint64_t Flags;$/;"	kind:m	struct:llvm::object::ExportEntry::NodeState	typeref:typename:uint64_t	access:public
llvm::object::ExportEntry::NodeState::ImportName	MachO.h	/^    const char *ImportName;$/;"	kind:m	struct:llvm::object::ExportEntry::NodeState	typeref:typename:const char *	access:public
llvm::object::ExportEntry::NodeState::IsExportNode	MachO.h	/^    bool IsExportNode;$/;"	kind:m	struct:llvm::object::ExportEntry::NodeState	typeref:typename:bool	access:public
llvm::object::ExportEntry::NodeState::NextChildIndex	MachO.h	/^    unsigned NextChildIndex;$/;"	kind:m	struct:llvm::object::ExportEntry::NodeState	typeref:typename:unsigned	access:public
llvm::object::ExportEntry::NodeState::NodeState	MachO.h	/^    NodeState(const uint8_t *Ptr);$/;"	kind:p	struct:llvm::object::ExportEntry::NodeState	access:public	signature:(const uint8_t * Ptr)
llvm::object::ExportEntry::NodeState::Other	MachO.h	/^    uint64_t Other;$/;"	kind:m	struct:llvm::object::ExportEntry::NodeState	typeref:typename:uint64_t	access:public
llvm::object::ExportEntry::NodeState::ParentStringLength	MachO.h	/^    unsigned ParentStringLength;$/;"	kind:m	struct:llvm::object::ExportEntry::NodeState	typeref:typename:unsigned	access:public
llvm::object::ExportEntry::NodeState::Start	MachO.h	/^    const uint8_t *Start;$/;"	kind:m	struct:llvm::object::ExportEntry::NodeState	typeref:typename:const uint8_t *	access:public
llvm::object::ExportEntry::Stack	MachO.h	/^  SmallVector<NodeState, 16> Stack;$/;"	kind:m	class:llvm::object::ExportEntry	typeref:typename:SmallVector<NodeState,16>	access:private
llvm::object::ExportEntry::Trie	MachO.h	/^  ArrayRef<uint8_t> Trie;$/;"	kind:m	class:llvm::object::ExportEntry	typeref:typename:ArrayRef<uint8_t>	access:private
llvm::object::ExportEntry::address	MachO.h	/^  uint64_t address() const;$/;"	kind:p	class:llvm::object::ExportEntry	typeref:typename:uint64_t	access:public	signature:() const
llvm::object::ExportEntry::flags	MachO.h	/^  uint64_t flags() const;$/;"	kind:p	class:llvm::object::ExportEntry	typeref:typename:uint64_t	access:public	signature:() const
llvm::object::ExportEntry::moveNext	MachO.h	/^  void moveNext();$/;"	kind:p	class:llvm::object::ExportEntry	typeref:typename:void	access:public	signature:()
llvm::object::ExportEntry::moveToEnd	MachO.h	/^  void moveToEnd();$/;"	kind:p	class:llvm::object::ExportEntry	typeref:typename:void	access:private	signature:()
llvm::object::ExportEntry::moveToFirst	MachO.h	/^  void moveToFirst();$/;"	kind:p	class:llvm::object::ExportEntry	typeref:typename:void	access:private	signature:()
llvm::object::ExportEntry::name	MachO.h	/^  StringRef name() const;$/;"	kind:p	class:llvm::object::ExportEntry	typeref:typename:StringRef	access:public	signature:() const
llvm::object::ExportEntry::nodeOffset	MachO.h	/^  uint32_t nodeOffset() const;$/;"	kind:p	class:llvm::object::ExportEntry	typeref:typename:uint32_t	access:public	signature:() const
llvm::object::ExportEntry::operator ==	MachO.h	/^  bool operator==(const ExportEntry &) const;$/;"	kind:p	class:llvm::object::ExportEntry	typeref:typename:bool	access:public	signature:(const ExportEntry &) const
llvm::object::ExportEntry::other	MachO.h	/^  uint64_t other() const;$/;"	kind:p	class:llvm::object::ExportEntry	typeref:typename:uint64_t	access:public	signature:() const
llvm::object::ExportEntry::otherName	MachO.h	/^  StringRef otherName() const;$/;"	kind:p	class:llvm::object::ExportEntry	typeref:typename:StringRef	access:public	signature:() const
llvm::object::ExportEntry::pushDownUntilBottom	MachO.h	/^  void pushDownUntilBottom();$/;"	kind:p	class:llvm::object::ExportEntry	typeref:typename:void	access:private	signature:()
llvm::object::ExportEntry::pushNode	MachO.h	/^  void pushNode(uint64_t Offset);$/;"	kind:p	class:llvm::object::ExportEntry	typeref:typename:void	access:private	signature:(uint64_t Offset)
llvm::object::ExportEntry::readULEB128	MachO.h	/^  uint64_t readULEB128(const uint8_t *&p);$/;"	kind:p	class:llvm::object::ExportEntry	typeref:typename:uint64_t	access:private	signature:(const uint8_t * & p)
llvm::object::FpoData	COFF.h	/^struct FpoData {$/;"	kind:s	namespace:llvm::object
llvm::object::FpoData::Attributes	COFF.h	/^  support::ulittle16_t Attributes;$/;"	kind:m	struct:llvm::object::FpoData	typeref:typename:support::ulittle16_t	access:public
llvm::object::FpoData::NumLocals	COFF.h	/^  support::ulittle32_t NumLocals; \/\/ cdwLocals: # bytes in locals\/4$/;"	kind:m	struct:llvm::object::FpoData	typeref:typename:support::ulittle32_t	access:public
llvm::object::FpoData::NumParams	COFF.h	/^  support::ulittle16_t NumParams; \/\/ cdwParams: # bytes in params\/4$/;"	kind:m	struct:llvm::object::FpoData	typeref:typename:support::ulittle16_t	access:public
llvm::object::FpoData::Offset	COFF.h	/^  support::ulittle32_t Offset; \/\/ ulOffStart: Offset 1st byte of function code$/;"	kind:m	struct:llvm::object::FpoData	typeref:typename:support::ulittle32_t	access:public
llvm::object::FpoData::Size	COFF.h	/^  support::ulittle32_t Size;   \/\/ cbProcSize: # bytes in function$/;"	kind:m	struct:llvm::object::FpoData	typeref:typename:support::ulittle32_t	access:public
llvm::object::FpoData::getFP	COFF.h	/^  int getFP() const { return Attributes >> 14; }$/;"	kind:f	struct:llvm::object::FpoData	typeref:typename:int	access:public	signature:() const
llvm::object::FpoData::getNumSavedRegs	COFF.h	/^  int getNumSavedRegs() const { return (Attributes >> 8) & 0x7; }$/;"	kind:f	struct:llvm::object::FpoData	typeref:typename:int	access:public	signature:() const
llvm::object::FpoData::getPrologSize	COFF.h	/^  int getPrologSize() const { return Attributes & 0xF; }$/;"	kind:f	struct:llvm::object::FpoData	typeref:typename:int	access:public	signature:() const
llvm::object::FpoData::hasSEH	COFF.h	/^  bool hasSEH() const { return (Attributes >> 9) & 1; }$/;"	kind:f	struct:llvm::object::FpoData	typeref:typename:bool	access:public	signature:() const
llvm::object::FpoData::useBP	COFF.h	/^  bool useBP() const { return (Attributes >> 10) & 1; }$/;"	kind:f	struct:llvm::object::FpoData	typeref:typename:bool	access:public	signature:() const
llvm::object::GenericBinaryError	Error.h	/^class GenericBinaryError : public ErrorInfo<GenericBinaryError, BinaryError> {$/;"	kind:c	namespace:llvm::object	inherits:ErrorInfo<GenericBinaryError,BinaryError>
llvm::object::GenericBinaryError::GenericBinaryError	Error.h	/^  GenericBinaryError(Twine Msg);$/;"	kind:p	class:llvm::object::GenericBinaryError	access:public	signature:(Twine Msg)
llvm::object::GenericBinaryError::GenericBinaryError	Error.h	/^  GenericBinaryError(Twine Msg, object_error ECOverride);$/;"	kind:p	class:llvm::object::GenericBinaryError	access:public	signature:(Twine Msg,object_error ECOverride)
llvm::object::GenericBinaryError::ID	Error.h	/^  static char ID;$/;"	kind:m	class:llvm::object::GenericBinaryError	typeref:typename:char	access:public
llvm::object::GenericBinaryError::Msg	Error.h	/^  std::string Msg;$/;"	kind:m	class:llvm::object::GenericBinaryError	typeref:typename:std::string	access:private
llvm::object::GenericBinaryError::getMessage	Error.h	/^  const std::string &getMessage() const { return Msg; }$/;"	kind:f	class:llvm::object::GenericBinaryError	typeref:typename:const std::string &	access:public	signature:() const
llvm::object::GenericBinaryError::log	Error.h	/^  void log(raw_ostream &OS) const override;$/;"	kind:p	class:llvm::object::GenericBinaryError	typeref:typename:void	access:public	signature:(raw_ostream & OS) const
llvm::object::IRObjectFile	IRObjectFile.h	/^class IRObjectFile : public SymbolicFile {$/;"	kind:c	namespace:llvm::object	inherits:SymbolicFile
llvm::object::IRObjectFile::AsmSymbol	IRObjectFile.h	/^  typedef std::pair<std::string, uint32_t> AsmSymbol;$/;"	kind:t	class:llvm::object::IRObjectFile	typeref:typename:std::pair<std::string,uint32_t>	access:private
llvm::object::IRObjectFile::AsmSymbols	IRObjectFile.h	/^  SpecificBumpPtrAllocator<AsmSymbol> AsmSymbols;$/;"	kind:m	class:llvm::object::IRObjectFile	typeref:typename:SpecificBumpPtrAllocator<AsmSymbol>	access:private
llvm::object::IRObjectFile::CollectAsmUndefinedRefs	IRObjectFile.h	/^  static void CollectAsmUndefinedRefs($/;"	kind:p	class:llvm::object::IRObjectFile	typeref:typename:void	access:public	signature:(const Triple & TheTriple,StringRef InlineAsm,function_ref<void (StringRef,BasicSymbolRef::Flags)> AsmUndefinedRefs)
llvm::object::IRObjectFile::IRObjectFile	IRObjectFile.h	/^  IRObjectFile(MemoryBufferRef Object, std::unique_ptr<Module> M);$/;"	kind:p	class:llvm::object::IRObjectFile	access:public	signature:(MemoryBufferRef Object,std::unique_ptr<Module> M)
llvm::object::IRObjectFile::M	IRObjectFile.h	/^  std::unique_ptr<Module> M;$/;"	kind:m	class:llvm::object::IRObjectFile	typeref:typename:std::unique_ptr<Module>	access:private
llvm::object::IRObjectFile::Mang	IRObjectFile.h	/^  std::unique_ptr<Mangler> Mang;$/;"	kind:m	class:llvm::object::IRObjectFile	typeref:typename:std::unique_ptr<Mangler>	access:private
llvm::object::IRObjectFile::Sym	IRObjectFile.h	/^  typedef PointerUnion<GlobalValue *, AsmSymbol *> Sym;$/;"	kind:t	class:llvm::object::IRObjectFile	typeref:typename:PointerUnion<GlobalValue *,AsmSymbol * >	access:private
llvm::object::IRObjectFile::SymTab	IRObjectFile.h	/^  std::vector<Sym> SymTab;$/;"	kind:m	class:llvm::object::IRObjectFile	typeref:typename:std::vector<Sym>	access:private
llvm::object::IRObjectFile::classof	IRObjectFile.h	/^  static inline bool classof(const Binary *v) {$/;"	kind:f	class:llvm::object::IRObjectFile	typeref:typename:bool	access:public	signature:(const Binary * v)
llvm::object::IRObjectFile::create	IRObjectFile.h	/^  static Expected<std::unique_ptr<IRObjectFile>> create(MemoryBufferRef Object,$/;"	kind:p	class:llvm::object::IRObjectFile	typeref:typename:Expected<std::unique_ptr<IRObjectFile>>	access:public	signature:(MemoryBufferRef Object,LLVMContext & Context)
llvm::object::IRObjectFile::findBitcodeInMemBuffer	IRObjectFile.h	/^  findBitcodeInMemBuffer(MemoryBufferRef Object);$/;"	kind:p	class:llvm::object::IRObjectFile	typeref:typename:ErrorOr<MemoryBufferRef>	access:public	signature:(MemoryBufferRef Object)
llvm::object::IRObjectFile::findBitcodeInObject	IRObjectFile.h	/^  static ErrorOr<MemoryBufferRef> findBitcodeInObject(const ObjectFile &Obj);$/;"	kind:p	class:llvm::object::IRObjectFile	typeref:typename:ErrorOr<MemoryBufferRef>	access:public	signature:(const ObjectFile & Obj)
llvm::object::IRObjectFile::getModule	IRObjectFile.h	/^  Module &getModule() {$/;"	kind:f	class:llvm::object::IRObjectFile	typeref:typename:Module &	access:public	signature:()
llvm::object::IRObjectFile::getModule	IRObjectFile.h	/^  const Module &getModule() const {$/;"	kind:f	class:llvm::object::IRObjectFile	typeref:typename:const Module &	access:public	signature:() const
llvm::object::IRObjectFile::getSym	IRObjectFile.h	/^  static Sym getSym(DataRefImpl &Symb) {$/;"	kind:f	class:llvm::object::IRObjectFile	typeref:typename:Sym	access:private	signature:(DataRefImpl & Symb)
llvm::object::IRObjectFile::getSymbolFlags	IRObjectFile.h	/^  uint32_t getSymbolFlags(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::IRObjectFile	typeref:typename:uint32_t	access:public	signature:(DataRefImpl Symb) const
llvm::object::IRObjectFile::getSymbolGV	IRObjectFile.h	/^  GlobalValue *getSymbolGV(DataRefImpl Symb);$/;"	kind:p	class:llvm::object::IRObjectFile	typeref:typename:GlobalValue *	access:public	signature:(DataRefImpl Symb)
llvm::object::IRObjectFile::getSymbolGV	IRObjectFile.h	/^  const GlobalValue *getSymbolGV(DataRefImpl Symb) const {$/;"	kind:f	class:llvm::object::IRObjectFile	typeref:typename:const GlobalValue *	access:public	signature:(DataRefImpl Symb) const
llvm::object::IRObjectFile::getTargetTriple	IRObjectFile.h	/^  StringRef getTargetTriple() const;$/;"	kind:p	class:llvm::object::IRObjectFile	typeref:typename:StringRef	access:public	signature:() const
llvm::object::IRObjectFile::moveSymbolNext	IRObjectFile.h	/^  void moveSymbolNext(DataRefImpl &Symb) const override;$/;"	kind:p	class:llvm::object::IRObjectFile	typeref:typename:void	access:public	signature:(DataRefImpl & Symb) const
llvm::object::IRObjectFile::printSymbolName	IRObjectFile.h	/^  std::error_code printSymbolName(raw_ostream &OS,$/;"	kind:p	class:llvm::object::IRObjectFile	typeref:typename:std::error_code	access:public	signature:(raw_ostream & OS,DataRefImpl Symb) const
llvm::object::IRObjectFile::symbol_begin	IRObjectFile.h	/^  basic_symbol_iterator symbol_begin() const override;$/;"	kind:p	class:llvm::object::IRObjectFile	typeref:typename:basic_symbol_iterator	access:public	signature:() const
llvm::object::IRObjectFile::symbol_end	IRObjectFile.h	/^  basic_symbol_iterator symbol_end() const override;$/;"	kind:p	class:llvm::object::IRObjectFile	typeref:typename:basic_symbol_iterator	access:public	signature:() const
llvm::object::IRObjectFile::takeModule	IRObjectFile.h	/^  std::unique_ptr<Module> takeModule();$/;"	kind:p	class:llvm::object::IRObjectFile	typeref:typename:std::unique_ptr<Module>	access:public	signature:()
llvm::object::IRObjectFile::~IRObjectFile	IRObjectFile.h	/^  ~IRObjectFile() override;$/;"	kind:p	class:llvm::object::IRObjectFile	access:public	signature:()
llvm::object::ImportDirectoryEntryRef	COFF.h	/^class ImportDirectoryEntryRef {$/;"	kind:c	namespace:llvm::object
llvm::object::ImportDirectoryEntryRef::ImportDirectoryEntryRef	COFF.h	/^  ImportDirectoryEntryRef() : OwningObject(nullptr) {}$/;"	kind:f	class:llvm::object::ImportDirectoryEntryRef	access:public	signature:()
llvm::object::ImportDirectoryEntryRef::ImportDirectoryEntryRef	COFF.h	/^  ImportDirectoryEntryRef(const coff_import_directory_table_entry *Table,$/;"	kind:f	class:llvm::object::ImportDirectoryEntryRef	access:public	signature:(const coff_import_directory_table_entry * Table,uint32_t I,const COFFObjectFile * Owner)
llvm::object::ImportDirectoryEntryRef::ImportTable	COFF.h	/^  const coff_import_directory_table_entry *ImportTable;$/;"	kind:m	class:llvm::object::ImportDirectoryEntryRef	typeref:typename:const coff_import_directory_table_entry *	access:private
llvm::object::ImportDirectoryEntryRef::Index	COFF.h	/^  uint32_t Index;$/;"	kind:m	class:llvm::object::ImportDirectoryEntryRef	typeref:typename:uint32_t	access:private
llvm::object::ImportDirectoryEntryRef::OwningObject	COFF.h	/^  const COFFObjectFile *OwningObject;$/;"	kind:m	class:llvm::object::ImportDirectoryEntryRef	typeref:typename:const COFFObjectFile *	access:private
llvm::object::ImportDirectoryEntryRef::getImportAddressTableRVA	COFF.h	/^  std::error_code getImportAddressTableRVA(uint32_t &Result) const;$/;"	kind:p	class:llvm::object::ImportDirectoryEntryRef	typeref:typename:std::error_code	access:public	signature:(uint32_t & Result) const
llvm::object::ImportDirectoryEntryRef::getImportLookupTableRVA	COFF.h	/^  std::error_code getImportLookupTableRVA(uint32_t &Result) const;$/;"	kind:p	class:llvm::object::ImportDirectoryEntryRef	typeref:typename:std::error_code	access:public	signature:(uint32_t & Result) const
llvm::object::ImportDirectoryEntryRef::getImportTableEntry	COFF.h	/^  getImportTableEntry(const coff_import_directory_table_entry *&Result) const;$/;"	kind:p	class:llvm::object::ImportDirectoryEntryRef	typeref:typename:std::error_code	access:public	signature:(const coff_import_directory_table_entry * & Result) const
llvm::object::ImportDirectoryEntryRef::getName	COFF.h	/^  std::error_code getName(StringRef &Result) const;$/;"	kind:p	class:llvm::object::ImportDirectoryEntryRef	typeref:typename:std::error_code	access:public	signature:(StringRef & Result) const
llvm::object::ImportDirectoryEntryRef::imported_symbol_begin	COFF.h	/^  imported_symbol_iterator imported_symbol_begin() const;$/;"	kind:p	class:llvm::object::ImportDirectoryEntryRef	typeref:typename:imported_symbol_iterator	access:public	signature:() const
llvm::object::ImportDirectoryEntryRef::imported_symbol_end	COFF.h	/^  imported_symbol_iterator imported_symbol_end() const;$/;"	kind:p	class:llvm::object::ImportDirectoryEntryRef	typeref:typename:imported_symbol_iterator	access:public	signature:() const
llvm::object::ImportDirectoryEntryRef::imported_symbols	COFF.h	/^  iterator_range<imported_symbol_iterator> imported_symbols() const;$/;"	kind:p	class:llvm::object::ImportDirectoryEntryRef	typeref:typename:iterator_range<imported_symbol_iterator>	access:public	signature:() const
llvm::object::ImportDirectoryEntryRef::lookup_table_begin	COFF.h	/^  imported_symbol_iterator lookup_table_begin() const;$/;"	kind:p	class:llvm::object::ImportDirectoryEntryRef	typeref:typename:imported_symbol_iterator	access:public	signature:() const
llvm::object::ImportDirectoryEntryRef::lookup_table_end	COFF.h	/^  imported_symbol_iterator lookup_table_end() const;$/;"	kind:p	class:llvm::object::ImportDirectoryEntryRef	typeref:typename:imported_symbol_iterator	access:public	signature:() const
llvm::object::ImportDirectoryEntryRef::lookup_table_symbols	COFF.h	/^  iterator_range<imported_symbol_iterator> lookup_table_symbols() const;$/;"	kind:p	class:llvm::object::ImportDirectoryEntryRef	typeref:typename:iterator_range<imported_symbol_iterator>	access:public	signature:() const
llvm::object::ImportDirectoryEntryRef::moveNext	COFF.h	/^  void moveNext();$/;"	kind:p	class:llvm::object::ImportDirectoryEntryRef	typeref:typename:void	access:public	signature:()
llvm::object::ImportDirectoryEntryRef::operator ==	COFF.h	/^  bool operator==(const ImportDirectoryEntryRef &Other) const;$/;"	kind:p	class:llvm::object::ImportDirectoryEntryRef	typeref:typename:bool	access:public	signature:(const ImportDirectoryEntryRef & Other) const
llvm::object::ImportedSymbolRef	COFF.h	/^class ImportedSymbolRef {$/;"	kind:c	namespace:llvm::object
llvm::object::ImportedSymbolRef::Entry32	COFF.h	/^  const import_lookup_table_entry32 *Entry32;$/;"	kind:m	class:llvm::object::ImportedSymbolRef	typeref:typename:const import_lookup_table_entry32 *	access:private
llvm::object::ImportedSymbolRef::Entry64	COFF.h	/^  const import_lookup_table_entry64 *Entry64;$/;"	kind:m	class:llvm::object::ImportedSymbolRef	typeref:typename:const import_lookup_table_entry64 *	access:private
llvm::object::ImportedSymbolRef::ImportedSymbolRef	COFF.h	/^  ImportedSymbolRef() : OwningObject(nullptr) {}$/;"	kind:f	class:llvm::object::ImportedSymbolRef	access:public	signature:()
llvm::object::ImportedSymbolRef::ImportedSymbolRef	COFF.h	/^  ImportedSymbolRef(const import_lookup_table_entry32 *Entry, uint32_t I,$/;"	kind:f	class:llvm::object::ImportedSymbolRef	access:public	signature:(const import_lookup_table_entry32 * Entry,uint32_t I,const COFFObjectFile * Owner)
llvm::object::ImportedSymbolRef::ImportedSymbolRef	COFF.h	/^  ImportedSymbolRef(const import_lookup_table_entry64 *Entry, uint32_t I,$/;"	kind:f	class:llvm::object::ImportedSymbolRef	access:public	signature:(const import_lookup_table_entry64 * Entry,uint32_t I,const COFFObjectFile * Owner)
llvm::object::ImportedSymbolRef::Index	COFF.h	/^  uint32_t Index;$/;"	kind:m	class:llvm::object::ImportedSymbolRef	typeref:typename:uint32_t	access:private
llvm::object::ImportedSymbolRef::OwningObject	COFF.h	/^  const COFFObjectFile *OwningObject;$/;"	kind:m	class:llvm::object::ImportedSymbolRef	typeref:typename:const COFFObjectFile *	access:private
llvm::object::ImportedSymbolRef::getHintNameRVA	COFF.h	/^  std::error_code getHintNameRVA(uint32_t &Result) const;$/;"	kind:p	class:llvm::object::ImportedSymbolRef	typeref:typename:std::error_code	access:public	signature:(uint32_t & Result) const
llvm::object::ImportedSymbolRef::getOrdinal	COFF.h	/^  std::error_code getOrdinal(uint16_t &Result) const;$/;"	kind:p	class:llvm::object::ImportedSymbolRef	typeref:typename:std::error_code	access:public	signature:(uint16_t & Result) const
llvm::object::ImportedSymbolRef::getSymbolName	COFF.h	/^  std::error_code getSymbolName(StringRef &Result) const;$/;"	kind:p	class:llvm::object::ImportedSymbolRef	typeref:typename:std::error_code	access:public	signature:(StringRef & Result) const
llvm::object::ImportedSymbolRef::isOrdinal	COFF.h	/^  std::error_code isOrdinal(bool &Result) const;$/;"	kind:p	class:llvm::object::ImportedSymbolRef	typeref:typename:std::error_code	access:public	signature:(bool & Result) const
llvm::object::ImportedSymbolRef::moveNext	COFF.h	/^  void moveNext();$/;"	kind:p	class:llvm::object::ImportedSymbolRef	typeref:typename:void	access:public	signature:()
llvm::object::ImportedSymbolRef::operator ==	COFF.h	/^  bool operator==(const ImportedSymbolRef &Other) const;$/;"	kind:p	class:llvm::object::ImportedSymbolRef	typeref:typename:bool	access:public	signature:(const ImportedSymbolRef & Other) const
llvm::object::MachOBindEntry	MachO.h	/^class MachOBindEntry {$/;"	kind:c	namespace:llvm::object
llvm::object::MachOBindEntry::Addend	MachO.h	/^  int64_t  Addend;$/;"	kind:m	class:llvm::object::MachOBindEntry	typeref:typename:int64_t	access:private
llvm::object::MachOBindEntry::AdvanceAmount	MachO.h	/^  uint64_t AdvanceAmount;$/;"	kind:m	class:llvm::object::MachOBindEntry	typeref:typename:uint64_t	access:private
llvm::object::MachOBindEntry::BindType	MachO.h	/^  uint8_t  BindType;$/;"	kind:m	class:llvm::object::MachOBindEntry	typeref:typename:uint8_t	access:private
llvm::object::MachOBindEntry::Done	MachO.h	/^  bool     Done;$/;"	kind:m	class:llvm::object::MachOBindEntry	typeref:typename:bool	access:private
llvm::object::MachOBindEntry::Flags	MachO.h	/^  uint32_t Flags;$/;"	kind:m	class:llvm::object::MachOBindEntry	typeref:typename:uint32_t	access:private
llvm::object::MachOBindEntry::Kind	MachO.h	/^  enum class Kind { Regular, Lazy, Weak };$/;"	kind:g	class:llvm::object::MachOBindEntry	access:public
llvm::object::MachOBindEntry::MachOBindEntry	MachO.h	/^  MachOBindEntry(ArrayRef<uint8_t> Opcodes, bool is64Bit, MachOBindEntry::Kind);$/;"	kind:p	class:llvm::object::MachOBindEntry	access:public	signature:(ArrayRef<uint8_t> Opcodes,bool is64Bit,MachOBindEntry::Kind)
llvm::object::MachOBindEntry::Malformed	MachO.h	/^  bool     Malformed;$/;"	kind:m	class:llvm::object::MachOBindEntry	typeref:typename:bool	access:private
llvm::object::MachOBindEntry::Opcodes	MachO.h	/^  ArrayRef<uint8_t> Opcodes;$/;"	kind:m	class:llvm::object::MachOBindEntry	typeref:typename:ArrayRef<uint8_t>	access:private
llvm::object::MachOBindEntry::Ordinal	MachO.h	/^  int      Ordinal;$/;"	kind:m	class:llvm::object::MachOBindEntry	typeref:typename:int	access:private
llvm::object::MachOBindEntry::PointerSize	MachO.h	/^  uint8_t  PointerSize;$/;"	kind:m	class:llvm::object::MachOBindEntry	typeref:typename:uint8_t	access:private
llvm::object::MachOBindEntry::Ptr	MachO.h	/^  const uint8_t *Ptr;$/;"	kind:m	class:llvm::object::MachOBindEntry	typeref:typename:const uint8_t *	access:private
llvm::object::MachOBindEntry::RemainingLoopCount	MachO.h	/^  uint64_t RemainingLoopCount;$/;"	kind:m	class:llvm::object::MachOBindEntry	typeref:typename:uint64_t	access:private
llvm::object::MachOBindEntry::SegmentIndex	MachO.h	/^  uint32_t SegmentIndex;$/;"	kind:m	class:llvm::object::MachOBindEntry	typeref:typename:uint32_t	access:private
llvm::object::MachOBindEntry::SegmentOffset	MachO.h	/^  uint64_t SegmentOffset;$/;"	kind:m	class:llvm::object::MachOBindEntry	typeref:typename:uint64_t	access:private
llvm::object::MachOBindEntry::SymbolName	MachO.h	/^  StringRef SymbolName;$/;"	kind:m	class:llvm::object::MachOBindEntry	typeref:typename:StringRef	access:private
llvm::object::MachOBindEntry::TableKind	MachO.h	/^  Kind     TableKind;$/;"	kind:m	class:llvm::object::MachOBindEntry	typeref:typename:Kind	access:private
llvm::object::MachOBindEntry::addend	MachO.h	/^  int64_t addend() const;$/;"	kind:p	class:llvm::object::MachOBindEntry	typeref:typename:int64_t	access:public	signature:() const
llvm::object::MachOBindEntry::flags	MachO.h	/^  uint32_t flags() const;$/;"	kind:p	class:llvm::object::MachOBindEntry	typeref:typename:uint32_t	access:public	signature:() const
llvm::object::MachOBindEntry::moveNext	MachO.h	/^  void moveNext();$/;"	kind:p	class:llvm::object::MachOBindEntry	typeref:typename:void	access:public	signature:()
llvm::object::MachOBindEntry::moveToEnd	MachO.h	/^  void moveToEnd();$/;"	kind:p	class:llvm::object::MachOBindEntry	typeref:typename:void	access:private	signature:()
llvm::object::MachOBindEntry::moveToFirst	MachO.h	/^  void moveToFirst();$/;"	kind:p	class:llvm::object::MachOBindEntry	typeref:typename:void	access:private	signature:()
llvm::object::MachOBindEntry::operator ==	MachO.h	/^  bool operator==(const MachOBindEntry &) const;$/;"	kind:p	class:llvm::object::MachOBindEntry	typeref:typename:bool	access:public	signature:(const MachOBindEntry &) const
llvm::object::MachOBindEntry::ordinal	MachO.h	/^  int ordinal() const;$/;"	kind:p	class:llvm::object::MachOBindEntry	typeref:typename:int	access:public	signature:() const
llvm::object::MachOBindEntry::readSLEB128	MachO.h	/^  int64_t readSLEB128();$/;"	kind:p	class:llvm::object::MachOBindEntry	typeref:typename:int64_t	access:private	signature:()
llvm::object::MachOBindEntry::readULEB128	MachO.h	/^  uint64_t readULEB128();$/;"	kind:p	class:llvm::object::MachOBindEntry	typeref:typename:uint64_t	access:private	signature:()
llvm::object::MachOBindEntry::segmentIndex	MachO.h	/^  uint32_t segmentIndex() const;$/;"	kind:p	class:llvm::object::MachOBindEntry	typeref:typename:uint32_t	access:public	signature:() const
llvm::object::MachOBindEntry::segmentOffset	MachO.h	/^  uint64_t segmentOffset() const;$/;"	kind:p	class:llvm::object::MachOBindEntry	typeref:typename:uint64_t	access:public	signature:() const
llvm::object::MachOBindEntry::symbolName	MachO.h	/^  StringRef symbolName() const;$/;"	kind:p	class:llvm::object::MachOBindEntry	typeref:typename:StringRef	access:public	signature:() const
llvm::object::MachOBindEntry::typeName	MachO.h	/^  StringRef typeName() const;$/;"	kind:p	class:llvm::object::MachOBindEntry	typeref:typename:StringRef	access:public	signature:() const
llvm::object::MachOObjectFile	MachO.h	/^class MachOObjectFile : public ObjectFile {$/;"	kind:c	namespace:llvm::object	inherits:ObjectFile
llvm::object::MachOObjectFile::DataInCodeLoadCmd	MachO.h	/^  const char *DataInCodeLoadCmd;$/;"	kind:m	class:llvm::object::MachOObjectFile	typeref:typename:const char *	access:private
llvm::object::MachOObjectFile::DyldInfoLoadCmd	MachO.h	/^  const char *DyldInfoLoadCmd;$/;"	kind:m	class:llvm::object::MachOObjectFile	typeref:typename:const char *	access:private
llvm::object::MachOObjectFile::DysymtabLoadCmd	MachO.h	/^  const char *DysymtabLoadCmd;$/;"	kind:m	class:llvm::object::MachOObjectFile	typeref:typename:const char *	access:private
llvm::object::MachOObjectFile::HasPageZeroSegment	MachO.h	/^  bool HasPageZeroSegment;$/;"	kind:m	class:llvm::object::MachOObjectFile	typeref:typename:bool	access:private
llvm::object::MachOObjectFile::Libraries	MachO.h	/^  LibraryList Libraries;$/;"	kind:m	class:llvm::object::MachOObjectFile	typeref:typename:LibraryList	access:private
llvm::object::MachOObjectFile::LibrariesShortNames	MachO.h	/^  mutable LibraryShortName LibrariesShortNames;$/;"	kind:m	class:llvm::object::MachOObjectFile	typeref:typename:LibraryShortName	access:private
llvm::object::MachOObjectFile::LibraryList	MachO.h	/^  typedef SmallVector<const char*, 1> LibraryList;$/;"	kind:t	class:llvm::object::MachOObjectFile	typeref:typename:SmallVector<const char *,1>	access:private
llvm::object::MachOObjectFile::LibraryShortName	MachO.h	/^  typedef SmallVector<StringRef, 1> LibraryShortName;$/;"	kind:t	class:llvm::object::MachOObjectFile	typeref:typename:SmallVector<StringRef,1>	access:private
llvm::object::MachOObjectFile::LinkOptHintsLoadCmd	MachO.h	/^  const char *LinkOptHintsLoadCmd;$/;"	kind:m	class:llvm::object::MachOObjectFile	typeref:typename:const char *	access:private
llvm::object::MachOObjectFile::LoadCommandInfo	MachO.h	/^  struct LoadCommandInfo {$/;"	kind:s	class:llvm::object::MachOObjectFile	access:public
llvm::object::MachOObjectFile::LoadCommandInfo::C	MachO.h	/^    MachO::load_command C; \/\/ The command itself.$/;"	kind:m	struct:llvm::object::MachOObjectFile::LoadCommandInfo	typeref:typename:MachO::load_command	access:public
llvm::object::MachOObjectFile::LoadCommandInfo::Ptr	MachO.h	/^    const char *Ptr;      \/\/ Where in memory the load command is.$/;"	kind:m	struct:llvm::object::MachOObjectFile::LoadCommandInfo	typeref:typename:const char *	access:public
llvm::object::MachOObjectFile::LoadCommandList	MachO.h	/^  typedef SmallVector<LoadCommandInfo, 4> LoadCommandList;$/;"	kind:t	class:llvm::object::MachOObjectFile	typeref:typename:SmallVector<LoadCommandInfo,4>	access:public
llvm::object::MachOObjectFile::LoadCommands	MachO.h	/^  LoadCommandList LoadCommands;$/;"	kind:m	class:llvm::object::MachOObjectFile	typeref:typename:LoadCommandList	access:private
llvm::object::MachOObjectFile::MachOObjectFile	MachO.h	/^  MachOObjectFile(MemoryBufferRef Object, bool IsLittleEndian, bool Is64Bits,$/;"	kind:p	class:llvm::object::MachOObjectFile	access:private	signature:(MemoryBufferRef Object,bool IsLittleEndian,bool Is64Bits,Error & Err,uint32_t UniversalCputype=0,uint32_t UniversalIndex=0)
llvm::object::MachOObjectFile::ReadULEB128s	MachO.h	/^  void ReadULEB128s(uint64_t Index, SmallVectorImpl<uint64_t> &Out) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:void	access:public	signature:(uint64_t Index,SmallVectorImpl<uint64_t> & Out) const
llvm::object::MachOObjectFile::SectionList	MachO.h	/^  typedef SmallVector<const char*, 1> SectionList;$/;"	kind:t	class:llvm::object::MachOObjectFile	typeref:typename:SmallVector<const char *,1>	access:private
llvm::object::MachOObjectFile::Sections	MachO.h	/^  SectionList Sections;$/;"	kind:m	class:llvm::object::MachOObjectFile	typeref:typename:SectionList	access:private
llvm::object::MachOObjectFile::SymtabLoadCmd	MachO.h	/^  const char *SymtabLoadCmd;$/;"	kind:m	class:llvm::object::MachOObjectFile	typeref:typename:const char *	access:private
llvm::object::MachOObjectFile::UuidLoadCmd	MachO.h	/^  const char *UuidLoadCmd;$/;"	kind:m	class:llvm::object::MachOObjectFile	typeref:typename:const char *	access:private
llvm::object::MachOObjectFile::__anon14822023010a	MachO.h	/^  union {$/;"	kind:u	class:llvm::object::MachOObjectFile	access:private
llvm::object::MachOObjectFile::__anon14822023010a::Header	MachO.h	/^    MachO::mach_header Header;$/;"	kind:m	union:llvm::object::MachOObjectFile::__anon14822023010a	typeref:typename:MachO::mach_header	access:public
llvm::object::MachOObjectFile::__anon14822023010a::Header64	MachO.h	/^    MachO::mach_header_64 Header64;$/;"	kind:m	union:llvm::object::MachOObjectFile::__anon14822023010a	typeref:typename:MachO::mach_header_64	access:public
llvm::object::MachOObjectFile::begin_dices	MachO.h	/^  dice_iterator begin_dices() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:dice_iterator	access:public	signature:() const
llvm::object::MachOObjectFile::begin_load_commands	MachO.h	/^  load_command_iterator begin_load_commands() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:load_command_iterator	access:public	signature:() const
llvm::object::MachOObjectFile::bindTable	MachO.h	/^  iterator_range<bind_iterator> bindTable() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:iterator_range<bind_iterator>	access:public	signature:() const
llvm::object::MachOObjectFile::bindTable	MachO.h	/^  static iterator_range<bind_iterator> bindTable(ArrayRef<uint8_t> Opcodes,$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:iterator_range<bind_iterator>	access:public	signature:(ArrayRef<uint8_t> Opcodes,bool is64,MachOBindEntry::Kind)
llvm::object::MachOObjectFile::checkSymbolTable	MachO.h	/^  Error checkSymbolTable() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:Error	access:public	signature:() const
llvm::object::MachOObjectFile::classof	MachO.h	/^  static bool classof(const Binary *v) {$/;"	kind:f	class:llvm::object::MachOObjectFile	typeref:typename:bool	access:public	signature:(const Binary * v)
llvm::object::MachOObjectFile::create	MachO.h	/^  create(MemoryBufferRef Object, bool IsLittleEndian, bool Is64Bits,$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:Expected<std::unique_ptr<MachOObjectFile>>	access:public	signature:(MemoryBufferRef Object,bool IsLittleEndian,bool Is64Bits,uint32_t UniversalCputype=0,uint32_t UniversalIndex=0)
llvm::object::MachOObjectFile::end_dices	MachO.h	/^  dice_iterator end_dices() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:dice_iterator	access:public	signature:() const
llvm::object::MachOObjectFile::end_load_commands	MachO.h	/^  load_command_iterator end_load_commands() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:load_command_iterator	access:public	signature:() const
llvm::object::MachOObjectFile::exports	MachO.h	/^  iterator_range<export_iterator> exports() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:iterator_range<export_iterator>	access:public	signature:() const
llvm::object::MachOObjectFile::exports	MachO.h	/^  static iterator_range<export_iterator> exports(ArrayRef<uint8_t> Trie);$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:iterator_range<export_iterator>	access:public	signature:(ArrayRef<uint8_t> Trie)
llvm::object::MachOObjectFile::getAnyRelocationAddress	MachO.h	/^  unsigned getAnyRelocationAddress(const MachO::any_relocation_info &RE) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:unsigned	access:public	signature:(const MachO::any_relocation_info & RE) const
llvm::object::MachOObjectFile::getAnyRelocationLength	MachO.h	/^  unsigned getAnyRelocationLength(const MachO::any_relocation_info &RE) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:unsigned	access:public	signature:(const MachO::any_relocation_info & RE) const
llvm::object::MachOObjectFile::getAnyRelocationPCRel	MachO.h	/^  unsigned getAnyRelocationPCRel(const MachO::any_relocation_info &RE) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:unsigned	access:public	signature:(const MachO::any_relocation_info & RE) const
llvm::object::MachOObjectFile::getAnyRelocationSection	MachO.h	/^  SectionRef getAnyRelocationSection(const MachO::any_relocation_info &RE) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:SectionRef	access:public	signature:(const MachO::any_relocation_info & RE) const
llvm::object::MachOObjectFile::getAnyRelocationType	MachO.h	/^  unsigned getAnyRelocationType(const MachO::any_relocation_info &RE) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:unsigned	access:public	signature:(const MachO::any_relocation_info & RE) const
llvm::object::MachOObjectFile::getArch	MachO.h	/^  static Triple::ArchType getArch(uint32_t CPUType);$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:Triple::ArchType	access:public	signature:(uint32_t CPUType)
llvm::object::MachOObjectFile::getArch	MachO.h	/^  unsigned getArch() const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:unsigned	access:public	signature:() const
llvm::object::MachOObjectFile::getArchTriple	MachO.h	/^  Triple getArchTriple(const char **McpuDefault = nullptr) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:Triple	access:public	signature:(const char ** McpuDefault=nullptr) const
llvm::object::MachOObjectFile::getArchTriple	MachO.h	/^  static Triple getArchTriple(uint32_t CPUType, uint32_t CPUSubType,$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:Triple	access:public	signature:(uint32_t CPUType,uint32_t CPUSubType,const char ** McpuDefault=nullptr)
llvm::object::MachOObjectFile::getBytesInAddress	MachO.h	/^  uint8_t getBytesInAddress() const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:uint8_t	access:public	signature:() const
llvm::object::MachOObjectFile::getCommonSymbolSizeImpl	MachO.h	/^  uint64_t getCommonSymbolSizeImpl(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:uint64_t	access:public	signature:(DataRefImpl Symb) const
llvm::object::MachOObjectFile::getDataInCodeLoadCommand	MachO.h	/^  MachO::linkedit_data_command getDataInCodeLoadCommand() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::linkedit_data_command	access:public	signature:() const
llvm::object::MachOObjectFile::getDataInCodeTableEntry	MachO.h	/^  MachO::data_in_code_entry getDataInCodeTableEntry(uint32_t DataOffset,$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::data_in_code_entry	access:public	signature:(uint32_t DataOffset,unsigned Index) const
llvm::object::MachOObjectFile::getDice	MachO.h	/^  MachO::data_in_code_entry getDice(DataRefImpl Rel) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::data_in_code_entry	access:public	signature:(DataRefImpl Rel) const
llvm::object::MachOObjectFile::getDyldInfoBindOpcodes	MachO.h	/^  ArrayRef<uint8_t> getDyldInfoBindOpcodes() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:ArrayRef<uint8_t>	access:public	signature:() const
llvm::object::MachOObjectFile::getDyldInfoExportsTrie	MachO.h	/^  ArrayRef<uint8_t> getDyldInfoExportsTrie() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:ArrayRef<uint8_t>	access:public	signature:() const
llvm::object::MachOObjectFile::getDyldInfoLazyBindOpcodes	MachO.h	/^  ArrayRef<uint8_t> getDyldInfoLazyBindOpcodes() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:ArrayRef<uint8_t>	access:public	signature:() const
llvm::object::MachOObjectFile::getDyldInfoLoadCommand	MachO.h	/^  getDyldInfoLoadCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::dyld_info_command	access:public	signature:(const LoadCommandInfo & L) const
llvm::object::MachOObjectFile::getDyldInfoRebaseOpcodes	MachO.h	/^  ArrayRef<uint8_t> getDyldInfoRebaseOpcodes() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:ArrayRef<uint8_t>	access:public	signature:() const
llvm::object::MachOObjectFile::getDyldInfoWeakBindOpcodes	MachO.h	/^  ArrayRef<uint8_t> getDyldInfoWeakBindOpcodes() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:ArrayRef<uint8_t>	access:public	signature:() const
llvm::object::MachOObjectFile::getDylibIDLoadCommand	MachO.h	/^  getDylibIDLoadCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::dylib_command	access:public	signature:(const LoadCommandInfo & L) const
llvm::object::MachOObjectFile::getDylinkerCommand	MachO.h	/^  getDylinkerCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::dylinker_command	access:public	signature:(const LoadCommandInfo & L) const
llvm::object::MachOObjectFile::getDysymtabLoadCommand	MachO.h	/^  MachO::dysymtab_command getDysymtabLoadCommand() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::dysymtab_command	access:public	signature:() const
llvm::object::MachOObjectFile::getEncryptionInfoCommand	MachO.h	/^  getEncryptionInfoCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::encryption_info_command	access:public	signature:(const LoadCommandInfo & L) const
llvm::object::MachOObjectFile::getEncryptionInfoCommand64	MachO.h	/^  getEncryptionInfoCommand64(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::encryption_info_command_64	access:public	signature:(const LoadCommandInfo & L) const
llvm::object::MachOObjectFile::getEntryPointCommand	MachO.h	/^  getEntryPointCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::entry_point_command	access:public	signature:(const LoadCommandInfo & L) const
llvm::object::MachOObjectFile::getFeatures	MachO.h	/^  SubtargetFeatures getFeatures() const override { return SubtargetFeatures(); }$/;"	kind:f	class:llvm::object::MachOObjectFile	typeref:typename:SubtargetFeatures	access:public	signature:() const
llvm::object::MachOObjectFile::getFileFormatName	MachO.h	/^  StringRef getFileFormatName() const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:StringRef	access:public	signature:() const
llvm::object::MachOObjectFile::getHeader	MachO.h	/^  const MachO::mach_header &getHeader() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:const MachO::mach_header &	access:public	signature:() const
llvm::object::MachOObjectFile::getHeader64	MachO.h	/^  const MachO::mach_header_64 &getHeader64() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:const MachO::mach_header_64 &	access:public	signature:() const
llvm::object::MachOObjectFile::getHostArch	MachO.h	/^  static Triple getHostArch();$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:Triple	access:public	signature:()
llvm::object::MachOObjectFile::getIndirectName	MachO.h	/^  std::error_code getIndirectName(DataRefImpl Symb, StringRef &Res) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:std::error_code	access:public	signature:(DataRefImpl Symb,StringRef & Res) const
llvm::object::MachOObjectFile::getIndirectSymbolTableEntry	MachO.h	/^  getIndirectSymbolTableEntry(const MachO::dysymtab_command &DLC,$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:uint32_t	access:public	signature:(const MachO::dysymtab_command & DLC,unsigned Index) const
llvm::object::MachOObjectFile::getLibraryShortNameByIndex	MachO.h	/^  std::error_code getLibraryShortNameByIndex(unsigned Index, StringRef &) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:std::error_code	access:public	signature:(unsigned Index,StringRef &) const
llvm::object::MachOObjectFile::getLinkOptHintsLoadCommand	MachO.h	/^  MachO::linkedit_data_command getLinkOptHintsLoadCommand() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::linkedit_data_command	access:public	signature:() const
llvm::object::MachOObjectFile::getLinkeditDataLoadCommand	MachO.h	/^  getLinkeditDataLoadCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::linkedit_data_command	access:public	signature:(const LoadCommandInfo & L) const
llvm::object::MachOObjectFile::getLinkerOptionLoadCommand	MachO.h	/^  getLinkerOptionLoadCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::linker_option_command	access:public	signature:(const LoadCommandInfo & L) const
llvm::object::MachOObjectFile::getNValue	MachO.h	/^  uint64_t getNValue(DataRefImpl Sym) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:uint64_t	access:public	signature:(DataRefImpl Sym) const
llvm::object::MachOObjectFile::getPlainRelocationExternal	MachO.h	/^  bool getPlainRelocationExternal(const MachO::any_relocation_info &RE) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:bool	access:public	signature:(const MachO::any_relocation_info & RE) const
llvm::object::MachOObjectFile::getPlainRelocationSymbolNum	MachO.h	/^  unsigned getPlainRelocationSymbolNum($/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:unsigned	access:public	signature:(const MachO::any_relocation_info & RE) const
llvm::object::MachOObjectFile::getRelocation	MachO.h	/^  MachO::any_relocation_info getRelocation(DataRefImpl Rel) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::any_relocation_info	access:public	signature:(DataRefImpl Rel) const
llvm::object::MachOObjectFile::getRelocationLength	MachO.h	/^  uint8_t getRelocationLength(DataRefImpl Rel) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:uint8_t	access:public	signature:(DataRefImpl Rel) const
llvm::object::MachOObjectFile::getRelocationOffset	MachO.h	/^  uint64_t getRelocationOffset(DataRefImpl Rel) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:uint64_t	access:public	signature:(DataRefImpl Rel) const
llvm::object::MachOObjectFile::getRelocationRelocatedSection	MachO.h	/^  section_iterator getRelocationRelocatedSection(relocation_iterator Rel) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:section_iterator	access:public	signature:(relocation_iterator Rel) const
llvm::object::MachOObjectFile::getRelocationSection	MachO.h	/^  section_iterator getRelocationSection(DataRefImpl Rel) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:section_iterator	access:public	signature:(DataRefImpl Rel) const
llvm::object::MachOObjectFile::getRelocationSymbol	MachO.h	/^  symbol_iterator getRelocationSymbol(DataRefImpl Rel) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:symbol_iterator	access:public	signature:(DataRefImpl Rel) const
llvm::object::MachOObjectFile::getRelocationType	MachO.h	/^  uint64_t getRelocationType(DataRefImpl Rel) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:uint64_t	access:public	signature:(DataRefImpl Rel) const
llvm::object::MachOObjectFile::getRelocationTypeName	MachO.h	/^  void getRelocationTypeName(DataRefImpl Rel,$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:void	access:public	signature:(DataRefImpl Rel,SmallVectorImpl<char> & Result) const
llvm::object::MachOObjectFile::getRoutinesCommand	MachO.h	/^  getRoutinesCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::routines_command	access:public	signature:(const LoadCommandInfo & L) const
llvm::object::MachOObjectFile::getRoutinesCommand64	MachO.h	/^  getRoutinesCommand64(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::routines_command_64	access:public	signature:(const LoadCommandInfo & L) const
llvm::object::MachOObjectFile::getRpathCommand	MachO.h	/^  getRpathCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::rpath_command	access:public	signature:(const LoadCommandInfo & L) const
llvm::object::MachOObjectFile::getScatteredRelocationScattered	MachO.h	/^  bool getScatteredRelocationScattered($/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:bool	access:public	signature:(const MachO::any_relocation_info & RE) const
llvm::object::MachOObjectFile::getScatteredRelocationType	MachO.h	/^  uint32_t getScatteredRelocationType($/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:uint32_t	access:public	signature:(const MachO::any_relocation_info & RE) const
llvm::object::MachOObjectFile::getScatteredRelocationValue	MachO.h	/^  uint32_t getScatteredRelocationValue($/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:uint32_t	access:public	signature:(const MachO::any_relocation_info & RE) const
llvm::object::MachOObjectFile::getSection	MachO.h	/^  MachO::section getSection(DataRefImpl DRI) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::section	access:public	signature:(DataRefImpl DRI) const
llvm::object::MachOObjectFile::getSection	MachO.h	/^  MachO::section getSection(const LoadCommandInfo &L, unsigned Index) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::section	access:public	signature:(const LoadCommandInfo & L,unsigned Index) const
llvm::object::MachOObjectFile::getSection64	MachO.h	/^  MachO::section_64 getSection64(DataRefImpl DRI) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::section_64	access:public	signature:(DataRefImpl DRI) const
llvm::object::MachOObjectFile::getSection64	MachO.h	/^  MachO::section_64 getSection64(const LoadCommandInfo &L,unsigned Index) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::section_64	access:public	signature:(const LoadCommandInfo & L,unsigned Index) const
llvm::object::MachOObjectFile::getSectionAddress	MachO.h	/^  uint64_t getSectionAddress(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:uint64_t	access:public	signature:(DataRefImpl Sec) const
llvm::object::MachOObjectFile::getSectionAlignment	MachO.h	/^  uint64_t getSectionAlignment(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:uint64_t	access:public	signature:(DataRefImpl Sec) const
llvm::object::MachOObjectFile::getSectionContents	MachO.h	/^  std::error_code getSectionContents(DataRefImpl Sec,$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:std::error_code	access:public	signature:(DataRefImpl Sec,StringRef & Res) const
llvm::object::MachOObjectFile::getSectionFinalSegmentName	MachO.h	/^  StringRef getSectionFinalSegmentName(DataRefImpl Sec) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:StringRef	access:public	signature:(DataRefImpl Sec) const
llvm::object::MachOObjectFile::getSectionID	MachO.h	/^  unsigned getSectionID(SectionRef Sec) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:unsigned	access:public	signature:(SectionRef Sec) const
llvm::object::MachOObjectFile::getSectionName	MachO.h	/^  std::error_code getSectionName(DataRefImpl Sec,$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:std::error_code	access:public	signature:(DataRefImpl Sec,StringRef & Res) const
llvm::object::MachOObjectFile::getSectionRawFinalSegmentName	MachO.h	/^  ArrayRef<char> getSectionRawFinalSegmentName(DataRefImpl Sec) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:ArrayRef<char>	access:public	signature:(DataRefImpl Sec) const
llvm::object::MachOObjectFile::getSectionRawName	MachO.h	/^  ArrayRef<char> getSectionRawName(DataRefImpl Sec) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:ArrayRef<char>	access:public	signature:(DataRefImpl Sec) const
llvm::object::MachOObjectFile::getSectionSize	MachO.h	/^  uint64_t getSectionSize(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:uint64_t	access:public	signature:(DataRefImpl Sec) const
llvm::object::MachOObjectFile::getSectionType	MachO.h	/^  unsigned getSectionType(SectionRef Sec) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:unsigned	access:public	signature:(SectionRef Sec) const
llvm::object::MachOObjectFile::getSegment64LoadCommand	MachO.h	/^  getSegment64LoadCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::segment_command_64	access:public	signature:(const LoadCommandInfo & L) const
llvm::object::MachOObjectFile::getSegmentLoadCommand	MachO.h	/^  getSegmentLoadCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::segment_command	access:public	signature:(const LoadCommandInfo & L) const
llvm::object::MachOObjectFile::getSourceVersionCommand	MachO.h	/^  getSourceVersionCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::source_version_command	access:public	signature:(const LoadCommandInfo & L) const
llvm::object::MachOObjectFile::getStringTableData	MachO.h	/^  StringRef getStringTableData() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:StringRef	access:public	signature:() const
llvm::object::MachOObjectFile::getSubClientCommand	MachO.h	/^  getSubClientCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::sub_client_command	access:public	signature:(const LoadCommandInfo & L) const
llvm::object::MachOObjectFile::getSubFrameworkCommand	MachO.h	/^  getSubFrameworkCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::sub_framework_command	access:public	signature:(const LoadCommandInfo & L) const
llvm::object::MachOObjectFile::getSubLibraryCommand	MachO.h	/^  getSubLibraryCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::sub_library_command	access:public	signature:(const LoadCommandInfo & L) const
llvm::object::MachOObjectFile::getSubUmbrellaCommand	MachO.h	/^  getSubUmbrellaCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::sub_umbrella_command	access:public	signature:(const LoadCommandInfo & L) const
llvm::object::MachOObjectFile::getSymbol64TableEntry	MachO.h	/^  MachO::nlist_64 getSymbol64TableEntry(DataRefImpl DRI) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::nlist_64	access:public	signature:(DataRefImpl DRI) const
llvm::object::MachOObjectFile::getSymbolAddress	MachO.h	/^  Expected<uint64_t> getSymbolAddress(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:Expected<uint64_t>	access:public	signature:(DataRefImpl Symb) const
llvm::object::MachOObjectFile::getSymbolAlignment	MachO.h	/^  uint32_t getSymbolAlignment(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:uint32_t	access:public	signature:(DataRefImpl Symb) const
llvm::object::MachOObjectFile::getSymbolByIndex	MachO.h	/^  basic_symbol_iterator getSymbolByIndex(unsigned Index) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:basic_symbol_iterator	access:public	signature:(unsigned Index) const
llvm::object::MachOObjectFile::getSymbolFlags	MachO.h	/^  uint32_t getSymbolFlags(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:uint32_t	access:public	signature:(DataRefImpl Symb) const
llvm::object::MachOObjectFile::getSymbolIndex	MachO.h	/^  uint64_t getSymbolIndex(DataRefImpl Symb) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:uint64_t	access:public	signature:(DataRefImpl Symb) const
llvm::object::MachOObjectFile::getSymbolName	MachO.h	/^  Expected<StringRef> getSymbolName(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:Expected<StringRef>	access:public	signature:(DataRefImpl Symb) const
llvm::object::MachOObjectFile::getSymbolSection	MachO.h	/^  Expected<section_iterator> getSymbolSection(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:Expected<section_iterator>	access:public	signature:(DataRefImpl Symb) const
llvm::object::MachOObjectFile::getSymbolSectionID	MachO.h	/^  unsigned getSymbolSectionID(SymbolRef Symb) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:unsigned	access:public	signature:(SymbolRef Symb) const
llvm::object::MachOObjectFile::getSymbolTableEntry	MachO.h	/^  MachO::nlist getSymbolTableEntry(DataRefImpl DRI) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::nlist	access:public	signature:(DataRefImpl DRI) const
llvm::object::MachOObjectFile::getSymbolType	MachO.h	/^  Expected<SymbolRef::Type> getSymbolType(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:Expected<SymbolRef::Type>	access:public	signature:(DataRefImpl Symb) const
llvm::object::MachOObjectFile::getSymbolValueImpl	MachO.h	/^  uint64_t getSymbolValueImpl(DataRefImpl Symb) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:uint64_t	access:private	signature:(DataRefImpl Symb) const
llvm::object::MachOObjectFile::getSymtabLoadCommand	MachO.h	/^  MachO::symtab_command getSymtabLoadCommand() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::symtab_command	access:public	signature:() const
llvm::object::MachOObjectFile::getThreadCommand	MachO.h	/^  getThreadCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::thread_command	access:public	signature:(const LoadCommandInfo & L) const
llvm::object::MachOObjectFile::getUuid	MachO.h	/^  ArrayRef<uint8_t> getUuid() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:ArrayRef<uint8_t>	access:public	signature:() const
llvm::object::MachOObjectFile::getUuidCommand	MachO.h	/^  getUuidCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::uuid_command	access:public	signature:(const LoadCommandInfo & L) const
llvm::object::MachOObjectFile::getVersionMinLoadCommand	MachO.h	/^  getVersionMinLoadCommand(const LoadCommandInfo &L) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:MachO::version_min_command	access:public	signature:(const LoadCommandInfo & L) const
llvm::object::MachOObjectFile::getVersionMinMajor	MachO.h	/^  getVersionMinMajor(MachO::version_min_command &C, bool SDK) {$/;"	kind:f	class:llvm::object::MachOObjectFile	typeref:typename:uint32_t	access:public	signature:(MachO::version_min_command & C,bool SDK)
llvm::object::MachOObjectFile::getVersionMinMinor	MachO.h	/^  getVersionMinMinor(MachO::version_min_command &C, bool SDK) {$/;"	kind:f	class:llvm::object::MachOObjectFile	typeref:typename:uint32_t	access:public	signature:(MachO::version_min_command & C,bool SDK)
llvm::object::MachOObjectFile::getVersionMinUpdate	MachO.h	/^  getVersionMinUpdate(MachO::version_min_command &C, bool SDK) {$/;"	kind:f	class:llvm::object::MachOObjectFile	typeref:typename:uint32_t	access:public	signature:(MachO::version_min_command & C,bool SDK)
llvm::object::MachOObjectFile::guessLibraryShortName	MachO.h	/^  static StringRef guessLibraryShortName(StringRef Name, bool &isFramework,$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:StringRef	access:public	signature:(StringRef Name,bool & isFramework,StringRef & Suffix)
llvm::object::MachOObjectFile::hasPageZeroSegment	MachO.h	/^  bool hasPageZeroSegment() const { return HasPageZeroSegment; }$/;"	kind:f	class:llvm::object::MachOObjectFile	typeref:typename:bool	access:public	signature:() const
llvm::object::MachOObjectFile::is64Bit	MachO.h	/^  bool is64Bit() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:bool	access:public	signature:() const
llvm::object::MachOObjectFile::isRelocatableObject	MachO.h	/^  bool isRelocatableObject() const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:bool	access:public	signature:() const
llvm::object::MachOObjectFile::isRelocationScattered	MachO.h	/^  bool isRelocationScattered(const MachO::any_relocation_info &RE) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:bool	access:public	signature:(const MachO::any_relocation_info & RE) const
llvm::object::MachOObjectFile::isSectionBSS	MachO.h	/^  bool isSectionBSS(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:bool	access:public	signature:(DataRefImpl Sec) const
llvm::object::MachOObjectFile::isSectionBitcode	MachO.h	/^  bool isSectionBitcode(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:bool	access:public	signature:(DataRefImpl Sec) const
llvm::object::MachOObjectFile::isSectionCompressed	MachO.h	/^  bool isSectionCompressed(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:bool	access:public	signature:(DataRefImpl Sec) const
llvm::object::MachOObjectFile::isSectionData	MachO.h	/^  bool isSectionData(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:bool	access:public	signature:(DataRefImpl Sec) const
llvm::object::MachOObjectFile::isSectionText	MachO.h	/^  bool isSectionText(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:bool	access:public	signature:(DataRefImpl Sec) const
llvm::object::MachOObjectFile::isSectionVirtual	MachO.h	/^  bool isSectionVirtual(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:bool	access:public	signature:(DataRefImpl Sec) const
llvm::object::MachOObjectFile::isValidArch	MachO.h	/^  static bool isValidArch(StringRef ArchFlag);$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:bool	access:public	signature:(StringRef ArchFlag)
llvm::object::MachOObjectFile::lazyBindTable	MachO.h	/^  iterator_range<bind_iterator> lazyBindTable() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:iterator_range<bind_iterator>	access:public	signature:() const
llvm::object::MachOObjectFile::load_command_iterator	MachO.h	/^  typedef LoadCommandList::const_iterator load_command_iterator;$/;"	kind:t	class:llvm::object::MachOObjectFile	typeref:typename:LoadCommandList::const_iterator	access:public
llvm::object::MachOObjectFile::load_commands	MachO.h	/^  iterator_range<load_command_iterator> load_commands() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:iterator_range<load_command_iterator>	access:public	signature:() const
llvm::object::MachOObjectFile::moveRelocationNext	MachO.h	/^  void moveRelocationNext(DataRefImpl &Rel) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:void	access:public	signature:(DataRefImpl & Rel) const
llvm::object::MachOObjectFile::moveSectionNext	MachO.h	/^  void moveSectionNext(DataRefImpl &Sec) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:void	access:public	signature:(DataRefImpl & Sec) const
llvm::object::MachOObjectFile::moveSymbolNext	MachO.h	/^  void moveSymbolNext(DataRefImpl &Symb) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:void	access:public	signature:(DataRefImpl & Symb) const
llvm::object::MachOObjectFile::rebaseTable	MachO.h	/^  iterator_range<rebase_iterator> rebaseTable() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:iterator_range<rebase_iterator>	access:public	signature:() const
llvm::object::MachOObjectFile::rebaseTable	MachO.h	/^  static iterator_range<rebase_iterator> rebaseTable(ArrayRef<uint8_t> Opcodes,$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:iterator_range<rebase_iterator>	access:public	signature:(ArrayRef<uint8_t> Opcodes,bool is64)
llvm::object::MachOObjectFile::section_begin	MachO.h	/^  section_iterator section_begin() const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:section_iterator	access:public	signature:() const
llvm::object::MachOObjectFile::section_end	MachO.h	/^  section_iterator section_end() const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:section_iterator	access:public	signature:() const
llvm::object::MachOObjectFile::section_rel_begin	MachO.h	/^  relocation_iterator section_rel_begin(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:relocation_iterator	access:public	signature:(DataRefImpl Sec) const
llvm::object::MachOObjectFile::section_rel_begin	MachO.h	/^  relocation_iterator section_rel_begin(unsigned Index) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:relocation_iterator	access:public	signature:(unsigned Index) const
llvm::object::MachOObjectFile::section_rel_end	MachO.h	/^  relocation_iterator section_rel_end(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:relocation_iterator	access:public	signature:(DataRefImpl Sec) const
llvm::object::MachOObjectFile::section_rel_end	MachO.h	/^  relocation_iterator section_rel_end(unsigned Index) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:relocation_iterator	access:public	signature:(unsigned Index) const
llvm::object::MachOObjectFile::symbol_begin	MachO.h	/^  basic_symbol_iterator symbol_begin() const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:basic_symbol_iterator	access:public	signature:() const
llvm::object::MachOObjectFile::symbol_end	MachO.h	/^  basic_symbol_iterator symbol_end() const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:basic_symbol_iterator	access:public	signature:() const
llvm::object::MachOObjectFile::weakBindTable	MachO.h	/^  iterator_range<bind_iterator> weakBindTable() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:iterator_range<bind_iterator>	access:public	signature:() const
llvm::object::MachORebaseEntry	MachO.h	/^class MachORebaseEntry {$/;"	kind:c	namespace:llvm::object
llvm::object::MachORebaseEntry::AdvanceAmount	MachO.h	/^  uint64_t AdvanceAmount;$/;"	kind:m	class:llvm::object::MachORebaseEntry	typeref:typename:uint64_t	access:private
llvm::object::MachORebaseEntry::Done	MachO.h	/^  bool     Done;$/;"	kind:m	class:llvm::object::MachORebaseEntry	typeref:typename:bool	access:private
llvm::object::MachORebaseEntry::MachORebaseEntry	MachO.h	/^  MachORebaseEntry(ArrayRef<uint8_t> opcodes, bool is64Bit);$/;"	kind:p	class:llvm::object::MachORebaseEntry	access:public	signature:(ArrayRef<uint8_t> opcodes,bool is64Bit)
llvm::object::MachORebaseEntry::Malformed	MachO.h	/^  bool     Malformed;$/;"	kind:m	class:llvm::object::MachORebaseEntry	typeref:typename:bool	access:private
llvm::object::MachORebaseEntry::Opcodes	MachO.h	/^  ArrayRef<uint8_t> Opcodes;$/;"	kind:m	class:llvm::object::MachORebaseEntry	typeref:typename:ArrayRef<uint8_t>	access:private
llvm::object::MachORebaseEntry::PointerSize	MachO.h	/^  uint8_t  PointerSize;$/;"	kind:m	class:llvm::object::MachORebaseEntry	typeref:typename:uint8_t	access:private
llvm::object::MachORebaseEntry::Ptr	MachO.h	/^  const uint8_t *Ptr;$/;"	kind:m	class:llvm::object::MachORebaseEntry	typeref:typename:const uint8_t *	access:private
llvm::object::MachORebaseEntry::RebaseType	MachO.h	/^  uint8_t  RebaseType;$/;"	kind:m	class:llvm::object::MachORebaseEntry	typeref:typename:uint8_t	access:private
llvm::object::MachORebaseEntry::RemainingLoopCount	MachO.h	/^  uint64_t RemainingLoopCount;$/;"	kind:m	class:llvm::object::MachORebaseEntry	typeref:typename:uint64_t	access:private
llvm::object::MachORebaseEntry::SegmentIndex	MachO.h	/^  uint32_t SegmentIndex;$/;"	kind:m	class:llvm::object::MachORebaseEntry	typeref:typename:uint32_t	access:private
llvm::object::MachORebaseEntry::SegmentOffset	MachO.h	/^  uint64_t SegmentOffset;$/;"	kind:m	class:llvm::object::MachORebaseEntry	typeref:typename:uint64_t	access:private
llvm::object::MachORebaseEntry::moveNext	MachO.h	/^  void moveNext();$/;"	kind:p	class:llvm::object::MachORebaseEntry	typeref:typename:void	access:public	signature:()
llvm::object::MachORebaseEntry::moveToEnd	MachO.h	/^  void moveToEnd();$/;"	kind:p	class:llvm::object::MachORebaseEntry	typeref:typename:void	access:private	signature:()
llvm::object::MachORebaseEntry::moveToFirst	MachO.h	/^  void moveToFirst();$/;"	kind:p	class:llvm::object::MachORebaseEntry	typeref:typename:void	access:private	signature:()
llvm::object::MachORebaseEntry::operator ==	MachO.h	/^  bool operator==(const MachORebaseEntry &) const;$/;"	kind:p	class:llvm::object::MachORebaseEntry	typeref:typename:bool	access:public	signature:(const MachORebaseEntry &) const
llvm::object::MachORebaseEntry::readULEB128	MachO.h	/^  uint64_t readULEB128();$/;"	kind:p	class:llvm::object::MachORebaseEntry	typeref:typename:uint64_t	access:private	signature:()
llvm::object::MachORebaseEntry::segmentIndex	MachO.h	/^  uint32_t segmentIndex() const;$/;"	kind:p	class:llvm::object::MachORebaseEntry	typeref:typename:uint32_t	access:public	signature:() const
llvm::object::MachORebaseEntry::segmentOffset	MachO.h	/^  uint64_t segmentOffset() const;$/;"	kind:p	class:llvm::object::MachORebaseEntry	typeref:typename:uint64_t	access:public	signature:() const
llvm::object::MachORebaseEntry::typeName	MachO.h	/^  StringRef typeName() const;$/;"	kind:p	class:llvm::object::MachORebaseEntry	typeref:typename:StringRef	access:public	signature:() const
llvm::object::MachOUniversalBinary	MachOUniversal.h	/^class MachOUniversalBinary : public Binary {$/;"	kind:c	namespace:llvm::object	inherits:Binary
llvm::object::MachOUniversalBinary::MachOUniversalBinary	MachOUniversal.h	/^  MachOUniversalBinary(MemoryBufferRef Souce, Error &Err);$/;"	kind:p	class:llvm::object::MachOUniversalBinary	access:public	signature:(MemoryBufferRef Souce,Error & Err)
llvm::object::MachOUniversalBinary::Magic	MachOUniversal.h	/^  uint32_t Magic;$/;"	kind:m	class:llvm::object::MachOUniversalBinary	typeref:typename:uint32_t	access:private
llvm::object::MachOUniversalBinary::NumberOfObjects	MachOUniversal.h	/^  uint32_t NumberOfObjects;$/;"	kind:m	class:llvm::object::MachOUniversalBinary	typeref:typename:uint32_t	access:private
llvm::object::MachOUniversalBinary::ObjectForArch	MachOUniversal.h	/^  class ObjectForArch {$/;"	kind:c	class:llvm::object::MachOUniversalBinary	access:public
llvm::object::MachOUniversalBinary::ObjectForArch::Header	MachOUniversal.h	/^    MachO::fat_arch Header;$/;"	kind:m	class:llvm::object::MachOUniversalBinary::ObjectForArch	typeref:typename:MachO::fat_arch	access:private
llvm::object::MachOUniversalBinary::ObjectForArch::Header64	MachOUniversal.h	/^    MachO::fat_arch_64 Header64;$/;"	kind:m	class:llvm::object::MachOUniversalBinary::ObjectForArch	typeref:typename:MachO::fat_arch_64	access:private
llvm::object::MachOUniversalBinary::ObjectForArch::Index	MachOUniversal.h	/^    uint32_t Index;$/;"	kind:m	class:llvm::object::MachOUniversalBinary::ObjectForArch	typeref:typename:uint32_t	access:private
llvm::object::MachOUniversalBinary::ObjectForArch::ObjectForArch	MachOUniversal.h	/^    ObjectForArch(const MachOUniversalBinary *Parent, uint32_t Index);$/;"	kind:p	class:llvm::object::MachOUniversalBinary::ObjectForArch	access:public	signature:(const MachOUniversalBinary * Parent,uint32_t Index)
llvm::object::MachOUniversalBinary::ObjectForArch::Parent	MachOUniversal.h	/^    const MachOUniversalBinary *Parent;$/;"	kind:m	class:llvm::object::MachOUniversalBinary::ObjectForArch	typeref:typename:const MachOUniversalBinary *	access:private
llvm::object::MachOUniversalBinary::ObjectForArch::clear	MachOUniversal.h	/^    void clear() {$/;"	kind:f	class:llvm::object::MachOUniversalBinary::ObjectForArch	typeref:typename:void	access:public	signature:()
llvm::object::MachOUniversalBinary::ObjectForArch::getAlign	MachOUniversal.h	/^    uint32_t getAlign() const {$/;"	kind:f	class:llvm::object::MachOUniversalBinary::ObjectForArch	typeref:typename:uint32_t	access:public	signature:() const
llvm::object::MachOUniversalBinary::ObjectForArch::getArchTypeName	MachOUniversal.h	/^    std::string getArchTypeName() const {$/;"	kind:f	class:llvm::object::MachOUniversalBinary::ObjectForArch	typeref:typename:std::string	access:public	signature:() const
llvm::object::MachOUniversalBinary::ObjectForArch::getAsArchive	MachOUniversal.h	/^    Expected<std::unique_ptr<Archive>> getAsArchive() const;$/;"	kind:p	class:llvm::object::MachOUniversalBinary::ObjectForArch	typeref:typename:Expected<std::unique_ptr<Archive>>	access:public	signature:() const
llvm::object::MachOUniversalBinary::ObjectForArch::getAsObjectFile	MachOUniversal.h	/^    Expected<std::unique_ptr<MachOObjectFile>> getAsObjectFile() const;$/;"	kind:p	class:llvm::object::MachOUniversalBinary::ObjectForArch	typeref:typename:Expected<std::unique_ptr<MachOObjectFile>>	access:public	signature:() const
llvm::object::MachOUniversalBinary::ObjectForArch::getCPUSubType	MachOUniversal.h	/^    uint32_t getCPUSubType() const {$/;"	kind:f	class:llvm::object::MachOUniversalBinary::ObjectForArch	typeref:typename:uint32_t	access:public	signature:() const
llvm::object::MachOUniversalBinary::ObjectForArch::getCPUType	MachOUniversal.h	/^    uint32_t getCPUType() const {$/;"	kind:f	class:llvm::object::MachOUniversalBinary::ObjectForArch	typeref:typename:uint32_t	access:public	signature:() const
llvm::object::MachOUniversalBinary::ObjectForArch::getNext	MachOUniversal.h	/^    ObjectForArch getNext() const { return ObjectForArch(Parent, Index + 1); }$/;"	kind:f	class:llvm::object::MachOUniversalBinary::ObjectForArch	typeref:typename:ObjectForArch	access:public	signature:() const
llvm::object::MachOUniversalBinary::ObjectForArch::getOffset	MachOUniversal.h	/^    uint32_t getOffset() const {$/;"	kind:f	class:llvm::object::MachOUniversalBinary::ObjectForArch	typeref:typename:uint32_t	access:public	signature:() const
llvm::object::MachOUniversalBinary::ObjectForArch::getReserved	MachOUniversal.h	/^    uint32_t getReserved() const {$/;"	kind:f	class:llvm::object::MachOUniversalBinary::ObjectForArch	typeref:typename:uint32_t	access:public	signature:() const
llvm::object::MachOUniversalBinary::ObjectForArch::getSize	MachOUniversal.h	/^    uint32_t getSize() const {$/;"	kind:f	class:llvm::object::MachOUniversalBinary::ObjectForArch	typeref:typename:uint32_t	access:public	signature:() const
llvm::object::MachOUniversalBinary::ObjectForArch::operator ==	MachOUniversal.h	/^    bool operator==(const ObjectForArch &Other) const {$/;"	kind:f	class:llvm::object::MachOUniversalBinary::ObjectForArch	typeref:typename:bool	access:public	signature:(const ObjectForArch & Other) const
llvm::object::MachOUniversalBinary::anchor	MachOUniversal.h	/^  virtual void anchor();$/;"	kind:p	class:llvm::object::MachOUniversalBinary	typeref:typename:void	access:private	signature:()
llvm::object::MachOUniversalBinary::begin_objects	MachOUniversal.h	/^  object_iterator begin_objects() const {$/;"	kind:f	class:llvm::object::MachOUniversalBinary	typeref:typename:object_iterator	access:public	signature:() const
llvm::object::MachOUniversalBinary::classof	MachOUniversal.h	/^  static inline bool classof(Binary const *V) {$/;"	kind:f	class:llvm::object::MachOUniversalBinary	typeref:typename:bool	access:public	signature:(Binary const * V)
llvm::object::MachOUniversalBinary::create	MachOUniversal.h	/^  create(MemoryBufferRef Source);$/;"	kind:p	class:llvm::object::MachOUniversalBinary	typeref:typename:Expected<std::unique_ptr<MachOUniversalBinary>>	access:public	signature:(MemoryBufferRef Source)
llvm::object::MachOUniversalBinary::end_objects	MachOUniversal.h	/^  object_iterator end_objects() const {$/;"	kind:f	class:llvm::object::MachOUniversalBinary	typeref:typename:object_iterator	access:public	signature:() const
llvm::object::MachOUniversalBinary::getMagic	MachOUniversal.h	/^  uint32_t getMagic() const { return Magic; }$/;"	kind:f	class:llvm::object::MachOUniversalBinary	typeref:typename:uint32_t	access:public	signature:() const
llvm::object::MachOUniversalBinary::getNumberOfObjects	MachOUniversal.h	/^  uint32_t getNumberOfObjects() const { return NumberOfObjects; }$/;"	kind:f	class:llvm::object::MachOUniversalBinary	typeref:typename:uint32_t	access:public	signature:() const
llvm::object::MachOUniversalBinary::getObjectForArch	MachOUniversal.h	/^  getObjectForArch(StringRef ArchName) const;$/;"	kind:p	class:llvm::object::MachOUniversalBinary	typeref:typename:Expected<std::unique_ptr<MachOObjectFile>>	access:public	signature:(StringRef ArchName) const
llvm::object::MachOUniversalBinary::object_iterator	MachOUniversal.h	/^  class object_iterator {$/;"	kind:c	class:llvm::object::MachOUniversalBinary	access:public
llvm::object::MachOUniversalBinary::object_iterator::Obj	MachOUniversal.h	/^    ObjectForArch Obj;$/;"	kind:m	class:llvm::object::MachOUniversalBinary::object_iterator	typeref:typename:ObjectForArch	access:private
llvm::object::MachOUniversalBinary::object_iterator::object_iterator	MachOUniversal.h	/^    object_iterator(const ObjectForArch &Obj) : Obj(Obj) {}$/;"	kind:f	class:llvm::object::MachOUniversalBinary::object_iterator	access:public	signature:(const ObjectForArch & Obj)
llvm::object::MachOUniversalBinary::object_iterator::operator !=	MachOUniversal.h	/^    bool operator!=(const object_iterator &Other) const {$/;"	kind:f	class:llvm::object::MachOUniversalBinary::object_iterator	typeref:typename:bool	access:public	signature:(const object_iterator & Other) const
llvm::object::MachOUniversalBinary::object_iterator::operator *	MachOUniversal.h	/^    const ObjectForArch &operator*() const { return Obj; }$/;"	kind:f	class:llvm::object::MachOUniversalBinary::object_iterator	typeref:typename:const ObjectForArch &	access:public	signature:() const
llvm::object::MachOUniversalBinary::object_iterator::operator ++	MachOUniversal.h	/^    object_iterator& operator++() {  \/\/ Preincrement$/;"	kind:f	class:llvm::object::MachOUniversalBinary::object_iterator	typeref:typename:object_iterator &	access:public	signature:()
llvm::object::MachOUniversalBinary::object_iterator::operator ->	MachOUniversal.h	/^    const ObjectForArch *operator->() const { return &Obj; }$/;"	kind:f	class:llvm::object::MachOUniversalBinary::object_iterator	typeref:typename:const ObjectForArch *	access:public	signature:() const
llvm::object::MachOUniversalBinary::object_iterator::operator ==	MachOUniversal.h	/^    bool operator==(const object_iterator &Other) const {$/;"	kind:f	class:llvm::object::MachOUniversalBinary::object_iterator	typeref:typename:bool	access:public	signature:(const object_iterator & Other) const
llvm::object::MachOUniversalBinary::objects	MachOUniversal.h	/^  iterator_range<object_iterator> objects() const {$/;"	kind:f	class:llvm::object::MachOUniversalBinary	typeref:typename:iterator_range<object_iterator>	access:public	signature:() const
llvm::object::ModuleSummaryIndexObjectFile	ModuleSummaryIndexObjectFile.h	/^class ModuleSummaryIndexObjectFile : public SymbolicFile {$/;"	kind:c	namespace:llvm::object	inherits:SymbolicFile
llvm::object::ModuleSummaryIndexObjectFile::Index	ModuleSummaryIndexObjectFile.h	/^  std::unique_ptr<ModuleSummaryIndex> Index;$/;"	kind:m	class:llvm::object::ModuleSummaryIndexObjectFile	typeref:typename:std::unique_ptr<ModuleSummaryIndex>	access:private
llvm::object::ModuleSummaryIndexObjectFile::ModuleSummaryIndexObjectFile	ModuleSummaryIndexObjectFile.h	/^  ModuleSummaryIndexObjectFile(MemoryBufferRef Object,$/;"	kind:p	class:llvm::object::ModuleSummaryIndexObjectFile	access:public	signature:(MemoryBufferRef Object,std::unique_ptr<ModuleSummaryIndex> I)
llvm::object::ModuleSummaryIndexObjectFile::classof	ModuleSummaryIndexObjectFile.h	/^  static inline bool classof(const Binary *v) {$/;"	kind:f	class:llvm::object::ModuleSummaryIndexObjectFile	typeref:typename:bool	access:public	signature:(const Binary * v)
llvm::object::ModuleSummaryIndexObjectFile::create	ModuleSummaryIndexObjectFile.h	/^  create(MemoryBufferRef Object);$/;"	kind:p	class:llvm::object::ModuleSummaryIndexObjectFile	typeref:typename:Expected<std::unique_ptr<ModuleSummaryIndexObjectFile>>	access:public	signature:(MemoryBufferRef Object)
llvm::object::ModuleSummaryIndexObjectFile::findBitcodeInMemBuffer	ModuleSummaryIndexObjectFile.h	/^  findBitcodeInMemBuffer(MemoryBufferRef Object);$/;"	kind:p	class:llvm::object::ModuleSummaryIndexObjectFile	typeref:typename:ErrorOr<MemoryBufferRef>	access:public	signature:(MemoryBufferRef Object)
llvm::object::ModuleSummaryIndexObjectFile::findBitcodeInObject	ModuleSummaryIndexObjectFile.h	/^  static ErrorOr<MemoryBufferRef> findBitcodeInObject(const ObjectFile &Obj);$/;"	kind:p	class:llvm::object::ModuleSummaryIndexObjectFile	typeref:typename:ErrorOr<MemoryBufferRef>	access:public	signature:(const ObjectFile & Obj)
llvm::object::ModuleSummaryIndexObjectFile::getIndex	ModuleSummaryIndexObjectFile.h	/^  ModuleSummaryIndex &getIndex() { return *Index; }$/;"	kind:f	class:llvm::object::ModuleSummaryIndexObjectFile	typeref:typename:ModuleSummaryIndex &	access:public	signature:()
llvm::object::ModuleSummaryIndexObjectFile::getIndex	ModuleSummaryIndexObjectFile.h	/^  const ModuleSummaryIndex &getIndex() const {$/;"	kind:f	class:llvm::object::ModuleSummaryIndexObjectFile	typeref:typename:const ModuleSummaryIndex &	access:public	signature:() const
llvm::object::ModuleSummaryIndexObjectFile::getSymbolFlags	ModuleSummaryIndexObjectFile.h	/^  uint32_t getSymbolFlags(DataRefImpl Symb) const override {$/;"	kind:f	class:llvm::object::ModuleSummaryIndexObjectFile	typeref:typename:uint32_t	access:public	signature:(DataRefImpl Symb) const
llvm::object::ModuleSummaryIndexObjectFile::moveSymbolNext	ModuleSummaryIndexObjectFile.h	/^  void moveSymbolNext(DataRefImpl &Symb) const override {$/;"	kind:f	class:llvm::object::ModuleSummaryIndexObjectFile	typeref:typename:void	access:public	signature:(DataRefImpl & Symb) const
llvm::object::ModuleSummaryIndexObjectFile::printSymbolName	ModuleSummaryIndexObjectFile.h	/^  std::error_code printSymbolName(raw_ostream &OS,$/;"	kind:f	class:llvm::object::ModuleSummaryIndexObjectFile	typeref:typename:std::error_code	access:public	signature:(raw_ostream & OS,DataRefImpl Symb) const
llvm::object::ModuleSummaryIndexObjectFile::symbol_begin	ModuleSummaryIndexObjectFile.h	/^  basic_symbol_iterator symbol_begin() const override {$/;"	kind:f	class:llvm::object::ModuleSummaryIndexObjectFile	typeref:typename:basic_symbol_iterator	access:public	signature:() const
llvm::object::ModuleSummaryIndexObjectFile::symbol_end	ModuleSummaryIndexObjectFile.h	/^  basic_symbol_iterator symbol_end() const override {$/;"	kind:f	class:llvm::object::ModuleSummaryIndexObjectFile	typeref:typename:basic_symbol_iterator	access:public	signature:() const
llvm::object::ModuleSummaryIndexObjectFile::takeIndex	ModuleSummaryIndexObjectFile.h	/^  std::unique_ptr<ModuleSummaryIndex> takeIndex();$/;"	kind:p	class:llvm::object::ModuleSummaryIndexObjectFile	typeref:typename:std::unique_ptr<ModuleSummaryIndex>	access:public	signature:()
llvm::object::ModuleSummaryIndexObjectFile::~ModuleSummaryIndexObjectFile	ModuleSummaryIndexObjectFile.h	/^  ~ModuleSummaryIndexObjectFile() override;$/;"	kind:p	class:llvm::object::ModuleSummaryIndexObjectFile	access:public	signature:()
llvm::object::ObjectFile	ObjectFile.h	/^class ObjectFile : public SymbolicFile {$/;"	kind:c	namespace:llvm::object	inherits:SymbolicFile
llvm::object::ObjectFile::ObjectFile	ObjectFile.h	/^  ObjectFile() = delete;$/;"	kind:p	class:llvm::object::ObjectFile	access:private	signature:()
llvm::object::ObjectFile::ObjectFile	ObjectFile.h	/^  ObjectFile(const ObjectFile &other) = delete;$/;"	kind:p	class:llvm::object::ObjectFile	access:private	signature:(const ObjectFile & other)
llvm::object::ObjectFile::ObjectFile	ObjectFile.h	/^  ObjectFile(unsigned int Type, MemoryBufferRef Source);$/;"	kind:p	class:llvm::object::ObjectFile	access:protected	signature:(unsigned int Type,MemoryBufferRef Source)
llvm::object::ObjectFile::anchor	ObjectFile.h	/^  virtual void anchor();$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:void	access:private	signature:()
llvm::object::ObjectFile::base	ObjectFile.h	/^  const uint8_t *base() const {$/;"	kind:f	class:llvm::object::ObjectFile	typeref:typename:const uint8_t *	access:protected	signature:() const
llvm::object::ObjectFile::classof	ObjectFile.h	/^  static inline bool classof(const Binary *v) {$/;"	kind:f	class:llvm::object::ObjectFile	typeref:typename:bool	access:public	signature:(const Binary * v)
llvm::object::ObjectFile::createCOFFObjectFile	ObjectFile.h	/^  createCOFFObjectFile(MemoryBufferRef Object);$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:ErrorOr<std::unique_ptr<COFFObjectFile>>	access:public	signature:(MemoryBufferRef Object)
llvm::object::ObjectFile::createELFObjectFile	ObjectFile.h	/^  createELFObjectFile(MemoryBufferRef Object);$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:ErrorOr<std::unique_ptr<ObjectFile>>	access:public	signature:(MemoryBufferRef Object)
llvm::object::ObjectFile::createMachOObjectFile	ObjectFile.h	/^  createMachOObjectFile(MemoryBufferRef Object,$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:Expected<std::unique_ptr<MachOObjectFile>>	access:public	signature:(MemoryBufferRef Object,uint32_t UniversalCputype=0,uint32_t UniversalIndex=0)
llvm::object::ObjectFile::createObjectFile	ObjectFile.h	/^  createObjectFile(MemoryBufferRef Object) {$/;"	kind:f	class:llvm::object::ObjectFile	typeref:typename:Expected<std::unique_ptr<ObjectFile>>	access:public	signature:(MemoryBufferRef Object)
llvm::object::ObjectFile::createObjectFile	ObjectFile.h	/^  createObjectFile(MemoryBufferRef Object, sys::fs::file_magic Type);$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:Expected<std::unique_ptr<ObjectFile>>	access:public	signature:(MemoryBufferRef Object,sys::fs::file_magic Type)
llvm::object::ObjectFile::createObjectFile	ObjectFile.h	/^  createObjectFile(StringRef ObjectPath);$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:Expected<OwningBinary<ObjectFile>>	access:public	signature:(StringRef ObjectPath)
llvm::object::ObjectFile::getArch	ObjectFile.h	/^  virtual \/* Triple::ArchType *\/ unsigned getArch() const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:unsigned	access:public	signature:() const
llvm::object::ObjectFile::getBytesInAddress	ObjectFile.h	/^  virtual uint8_t getBytesInAddress() const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:uint8_t	access:public	signature:() const
llvm::object::ObjectFile::getCommonSymbolSize	ObjectFile.h	/^  uint64_t getCommonSymbolSize(DataRefImpl Symb) const {$/;"	kind:f	class:llvm::object::ObjectFile	typeref:typename:uint64_t	access:public	signature:(DataRefImpl Symb) const
llvm::object::ObjectFile::getCommonSymbolSizeImpl	ObjectFile.h	/^  virtual uint64_t getCommonSymbolSizeImpl(DataRefImpl Symb) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Symb) const
llvm::object::ObjectFile::getFeatures	ObjectFile.h	/^  virtual SubtargetFeatures getFeatures() const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:SubtargetFeatures	access:public	signature:() const
llvm::object::ObjectFile::getFileFormatName	ObjectFile.h	/^  virtual StringRef getFileFormatName() const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:StringRef	access:public	signature:() const
llvm::object::ObjectFile::getPlatformFlags	ObjectFile.h	/^  virtual std::error_code getPlatformFlags(unsigned &Result) const {$/;"	kind:f	class:llvm::object::ObjectFile	typeref:typename:std::error_code	access:public	signature:(unsigned & Result) const
llvm::object::ObjectFile::getRelocatedSection	ObjectFile.h	/^  virtual section_iterator getRelocatedSection(DataRefImpl Sec) const;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:section_iterator	access:protected	signature:(DataRefImpl Sec) const
llvm::object::ObjectFile::getRelocationOffset	ObjectFile.h	/^  virtual uint64_t getRelocationOffset(DataRefImpl Rel) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Rel) const
llvm::object::ObjectFile::getRelocationSymbol	ObjectFile.h	/^  virtual symbol_iterator getRelocationSymbol(DataRefImpl Rel) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:symbol_iterator	access:protected	signature:(DataRefImpl Rel) const
llvm::object::ObjectFile::getRelocationType	ObjectFile.h	/^  virtual uint64_t getRelocationType(DataRefImpl Rel) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Rel) const
llvm::object::ObjectFile::getRelocationTypeName	ObjectFile.h	/^  virtual void getRelocationTypeName(DataRefImpl Rel,$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:void	access:protected	signature:(DataRefImpl Rel,SmallVectorImpl<char> & Result) const
llvm::object::ObjectFile::getSectionAddress	ObjectFile.h	/^  virtual uint64_t getSectionAddress(DataRefImpl Sec) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Sec) const
llvm::object::ObjectFile::getSectionAlignment	ObjectFile.h	/^  virtual uint64_t getSectionAlignment(DataRefImpl Sec) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Sec) const
llvm::object::ObjectFile::getSectionContents	ObjectFile.h	/^  virtual std::error_code getSectionContents(DataRefImpl Sec,$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:std::error_code	access:protected	signature:(DataRefImpl Sec,StringRef & Res) const
llvm::object::ObjectFile::getSectionName	ObjectFile.h	/^  virtual std::error_code getSectionName(DataRefImpl Sec,$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:std::error_code	access:protected	signature:(DataRefImpl Sec,StringRef & Res) const
llvm::object::ObjectFile::getSectionSize	ObjectFile.h	/^  virtual uint64_t getSectionSize(DataRefImpl Sec) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Sec) const
llvm::object::ObjectFile::getSymbolAddress	ObjectFile.h	/^  virtual Expected<uint64_t> getSymbolAddress(DataRefImpl Symb) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:Expected<uint64_t>	access:protected	signature:(DataRefImpl Symb) const
llvm::object::ObjectFile::getSymbolAlignment	ObjectFile.h	/^  virtual uint32_t getSymbolAlignment(DataRefImpl Symb) const;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:uint32_t	access:protected	signature:(DataRefImpl Symb) const
llvm::object::ObjectFile::getSymbolName	ObjectFile.h	/^  virtual Expected<StringRef> getSymbolName(DataRefImpl Symb) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:Expected<StringRef>	access:protected	signature:(DataRefImpl Symb) const
llvm::object::ObjectFile::getSymbolSection	ObjectFile.h	/^  getSymbolSection(DataRefImpl Symb) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:Expected<section_iterator>	access:protected	signature:(DataRefImpl Symb) const
llvm::object::ObjectFile::getSymbolType	ObjectFile.h	/^  virtual Expected<SymbolRef::Type> getSymbolType(DataRefImpl Symb) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:Expected<SymbolRef::Type>	access:protected	signature:(DataRefImpl Symb) const
llvm::object::ObjectFile::getSymbolValue	ObjectFile.h	/^  uint64_t getSymbolValue(DataRefImpl Symb) const;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Symb) const
llvm::object::ObjectFile::getSymbolValueImpl	ObjectFile.h	/^  virtual uint64_t getSymbolValueImpl(DataRefImpl Symb) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:uint64_t	access:protected	signature:(DataRefImpl Symb) const
llvm::object::ObjectFile::isRelocatableObject	ObjectFile.h	/^  virtual bool isRelocatableObject() const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:bool	access:public	signature:() const
llvm::object::ObjectFile::isSectionBSS	ObjectFile.h	/^  virtual bool isSectionBSS(DataRefImpl Sec) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:bool	access:protected	signature:(DataRefImpl Sec) const
llvm::object::ObjectFile::isSectionBitcode	ObjectFile.h	/^  virtual bool isSectionBitcode(DataRefImpl Sec) const;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:bool	access:protected	signature:(DataRefImpl Sec) const
llvm::object::ObjectFile::isSectionCompressed	ObjectFile.h	/^  virtual bool isSectionCompressed(DataRefImpl Sec) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:bool	access:protected	signature:(DataRefImpl Sec) const
llvm::object::ObjectFile::isSectionData	ObjectFile.h	/^  virtual bool isSectionData(DataRefImpl Sec) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:bool	access:protected	signature:(DataRefImpl Sec) const
llvm::object::ObjectFile::isSectionText	ObjectFile.h	/^  virtual bool isSectionText(DataRefImpl Sec) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:bool	access:protected	signature:(DataRefImpl Sec) const
llvm::object::ObjectFile::isSectionVirtual	ObjectFile.h	/^  virtual bool isSectionVirtual(DataRefImpl Sec) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:bool	access:protected	signature:(DataRefImpl Sec) const
llvm::object::ObjectFile::moveRelocationNext	ObjectFile.h	/^  virtual void moveRelocationNext(DataRefImpl &Rel) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:void	access:protected	signature:(DataRefImpl & Rel) const
llvm::object::ObjectFile::moveSectionNext	ObjectFile.h	/^  virtual void moveSectionNext(DataRefImpl &Sec) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:void	access:protected	signature:(DataRefImpl & Sec) const
llvm::object::ObjectFile::printSymbolName	ObjectFile.h	/^  std::error_code printSymbolName(raw_ostream &OS,$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:std::error_code	access:protected	signature:(raw_ostream & OS,DataRefImpl Symb) const
llvm::object::ObjectFile::section_begin	ObjectFile.h	/^  virtual section_iterator section_begin() const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:section_iterator	access:public	signature:() const
llvm::object::ObjectFile::section_end	ObjectFile.h	/^  virtual section_iterator section_end() const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:section_iterator	access:public	signature:() const
llvm::object::ObjectFile::section_iterator_range	ObjectFile.h	/^  typedef iterator_range<section_iterator> section_iterator_range;$/;"	kind:t	class:llvm::object::ObjectFile	typeref:typename:iterator_range<section_iterator>	access:public
llvm::object::ObjectFile::section_rel_begin	ObjectFile.h	/^  virtual relocation_iterator section_rel_begin(DataRefImpl Sec) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:relocation_iterator	access:protected	signature:(DataRefImpl Sec) const
llvm::object::ObjectFile::section_rel_end	ObjectFile.h	/^  virtual relocation_iterator section_rel_end(DataRefImpl Sec) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:relocation_iterator	access:protected	signature:(DataRefImpl Sec) const
llvm::object::ObjectFile::sections	ObjectFile.h	/^  section_iterator_range sections() const {$/;"	kind:f	class:llvm::object::ObjectFile	typeref:typename:section_iterator_range	access:public	signature:() const
llvm::object::ObjectFile::symbol_iterator_range	ObjectFile.h	/^  typedef iterator_range<symbol_iterator> symbol_iterator_range;$/;"	kind:t	class:llvm::object::ObjectFile	typeref:typename:iterator_range<symbol_iterator>	access:public
llvm::object::ObjectFile::symbols	ObjectFile.h	/^  symbol_iterator_range symbols() const {$/;"	kind:f	class:llvm::object::ObjectFile	typeref:typename:symbol_iterator_range	access:public	signature:() const
llvm::object::OwningBinary	Binary.h	/^template <typename T> class OwningBinary {$/;"	kind:c	namespace:llvm::object
llvm::object::OwningBinary::Bin	Binary.h	/^  std::unique_ptr<T> Bin;$/;"	kind:m	class:llvm::object::OwningBinary	typeref:typename:std::unique_ptr<T>	access:private
llvm::object::OwningBinary::Buf	Binary.h	/^  std::unique_ptr<MemoryBuffer> Buf;$/;"	kind:m	class:llvm::object::OwningBinary	typeref:typename:std::unique_ptr<MemoryBuffer>	access:private
llvm::object::OwningBinary::OwningBinary	Binary.h	/^  OwningBinary();$/;"	kind:p	class:llvm::object::OwningBinary	access:public	signature:()
llvm::object::OwningBinary::OwningBinary	Binary.h	/^  OwningBinary(OwningBinary<T>&& Other);$/;"	kind:p	class:llvm::object::OwningBinary	access:public	signature:(OwningBinary<T> && Other)
llvm::object::OwningBinary::OwningBinary	Binary.h	/^  OwningBinary(std::unique_ptr<T> Bin, std::unique_ptr<MemoryBuffer> Buf);$/;"	kind:p	class:llvm::object::OwningBinary	access:public	signature:(std::unique_ptr<T> Bin,std::unique_ptr<MemoryBuffer> Buf)
llvm::object::OwningBinary::OwningBinary	Binary.h	/^OwningBinary<T>::OwningBinary(OwningBinary &&Other)$/;"	kind:f	class:llvm::object::OwningBinary	signature:(OwningBinary && Other)
llvm::object::OwningBinary::OwningBinary	Binary.h	/^OwningBinary<T>::OwningBinary(std::unique_ptr<T> Bin,$/;"	kind:f	class:llvm::object::OwningBinary	signature:(std::unique_ptr<T> Bin,std::unique_ptr<MemoryBuffer> Buf)
llvm::object::OwningBinary::OwningBinary	Binary.h	/^template <typename T> OwningBinary<T>::OwningBinary() {}$/;"	kind:f	class:llvm::object::OwningBinary	signature:()
llvm::object::OwningBinary::getBinary	Binary.h	/^  T* getBinary();$/;"	kind:p	class:llvm::object::OwningBinary	typeref:typename:T *	access:public	signature:()
llvm::object::OwningBinary::getBinary	Binary.h	/^  const T* getBinary() const;$/;"	kind:p	class:llvm::object::OwningBinary	typeref:typename:const T *	access:public	signature:() const
llvm::object::OwningBinary::getBinary	Binary.h	/^template <typename T> T* OwningBinary<T>::getBinary() {$/;"	kind:f	class:llvm::object::OwningBinary	typeref:typename:T *	signature:()
llvm::object::OwningBinary::getBinary	Binary.h	/^template <typename T> const T* OwningBinary<T>::getBinary() const {$/;"	kind:f	class:llvm::object::OwningBinary	typeref:typename:const T *	signature:() const
llvm::object::OwningBinary::operator =	Binary.h	/^  OwningBinary<T> &operator=(OwningBinary<T> &&Other);$/;"	kind:p	class:llvm::object::OwningBinary	typeref:typename:OwningBinary<T> &	access:public	signature:(OwningBinary<T> && Other)
llvm::object::OwningBinary::operator =	Binary.h	/^OwningBinary<T> &OwningBinary<T>::operator=(OwningBinary &&Other) {$/;"	kind:f	class:llvm::object::OwningBinary	typeref:typename:OwningBinary<T> &	signature:(OwningBinary && Other)
llvm::object::OwningBinary::takeBinary	Binary.h	/^  std::pair<std::unique_ptr<T>, std::unique_ptr<MemoryBuffer>> takeBinary();$/;"	kind:p	class:llvm::object::OwningBinary	typeref:typename:std::pair<std::unique_ptr<T>,std::unique_ptr<MemoryBuffer>>	access:public	signature:()
llvm::object::OwningBinary::takeBinary	Binary.h	/^OwningBinary<T>::takeBinary() {$/;"	kind:f	class:llvm::object::OwningBinary	typeref:typename:std::pair<std::unique_ptr<T>,std::unique_ptr<MemoryBuffer>>	signature:()
llvm::object::RelocToApply	RelocVisitor.h	/^struct RelocToApply {$/;"	kind:s	namespace:llvm::object
llvm::object::RelocToApply::RelocToApply	RelocVisitor.h	/^  RelocToApply() : Value(0), Width(0) {}$/;"	kind:f	struct:llvm::object::RelocToApply	access:public	signature:()
llvm::object::RelocToApply::RelocToApply	RelocVisitor.h	/^  RelocToApply(int64_t Value, char Width) : Value(Value), Width(Width) {}$/;"	kind:f	struct:llvm::object::RelocToApply	access:public	signature:(int64_t Value,char Width)
llvm::object::RelocToApply::Value	RelocVisitor.h	/^  int64_t Value;$/;"	kind:m	struct:llvm::object::RelocToApply	typeref:typename:int64_t	access:public
llvm::object::RelocToApply::Width	RelocVisitor.h	/^  char Width;$/;"	kind:m	struct:llvm::object::RelocToApply	typeref:typename:char	access:public
llvm::object::RelocVisitor	RelocVisitor.h	/^class RelocVisitor {$/;"	kind:c	namespace:llvm::object
llvm::object::RelocVisitor::HasError	RelocVisitor.h	/^  bool HasError;$/;"	kind:m	class:llvm::object::RelocVisitor	typeref:typename:bool	access:private
llvm::object::RelocVisitor::ObjToVisit	RelocVisitor.h	/^  const ObjectFile &ObjToVisit;$/;"	kind:m	class:llvm::object::RelocVisitor	typeref:typename:const ObjectFile &	access:private
llvm::object::RelocVisitor::RelocVisitor	RelocVisitor.h	/^  explicit RelocVisitor(const ObjectFile &Obj)$/;"	kind:f	class:llvm::object::RelocVisitor	access:public	signature:(const ObjectFile & Obj)
llvm::object::RelocVisitor::error	RelocVisitor.h	/^  bool error() { return HasError; }$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:bool	access:public	signature:()
llvm::object::RelocVisitor::getELFAddend	RelocVisitor.h	/^  int64_t getELFAddend(RelocationRef R) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:int64_t	access:private	signature:(RelocationRef R)
llvm::object::RelocVisitor::getLengthMachO64	RelocVisitor.h	/^  uint8_t getLengthMachO64(RelocationRef R) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:uint8_t	access:private	signature:(RelocationRef R)
llvm::object::RelocVisitor::visit	RelocVisitor.h	/^  RelocToApply visit(uint32_t RelocType, RelocationRef R, uint64_t Value = 0) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:public	signature:(uint32_t RelocType,RelocationRef R,uint64_t Value=0)
llvm::object::RelocVisitor::visitCOFF	RelocVisitor.h	/^  RelocToApply visitCOFF(uint32_t RelocType, RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(uint32_t RelocType,RelocationRef R,uint64_t Value)
llvm::object::RelocVisitor::visitCOFF_AMD64_ADDR64	RelocVisitor.h	/^  RelocToApply visitCOFF_AMD64_ADDR64(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
llvm::object::RelocVisitor::visitCOFF_AMD64_SECREL	RelocVisitor.h	/^  RelocToApply visitCOFF_AMD64_SECREL(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
llvm::object::RelocVisitor::visitCOFF_I386_DIR32	RelocVisitor.h	/^  RelocToApply visitCOFF_I386_DIR32(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
llvm::object::RelocVisitor::visitCOFF_I386_SECREL	RelocVisitor.h	/^  RelocToApply visitCOFF_I386_SECREL(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
llvm::object::RelocVisitor::visitELF	RelocVisitor.h	/^  RelocToApply visitELF(uint32_t RelocType, RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(uint32_t RelocType,RelocationRef R,uint64_t Value)
llvm::object::RelocVisitor::visitELF_386_32	RelocVisitor.h	/^  RelocToApply visitELF_386_32(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
llvm::object::RelocVisitor::visitELF_386_NONE	RelocVisitor.h	/^  RelocToApply visitELF_386_NONE(RelocationRef R) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R)
llvm::object::RelocVisitor::visitELF_386_PC32	RelocVisitor.h	/^  RelocToApply visitELF_386_PC32(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
llvm::object::RelocVisitor::visitELF_390_32	RelocVisitor.h	/^  RelocToApply visitELF_390_32(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
llvm::object::RelocVisitor::visitELF_390_64	RelocVisitor.h	/^  RelocToApply visitELF_390_64(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
llvm::object::RelocVisitor::visitELF_AARCH64_ABS32	RelocVisitor.h	/^  RelocToApply visitELF_AARCH64_ABS32(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
llvm::object::RelocVisitor::visitELF_AARCH64_ABS64	RelocVisitor.h	/^  RelocToApply visitELF_AARCH64_ABS64(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
llvm::object::RelocVisitor::visitELF_AMDGPU_ABS32	RelocVisitor.h	/^  RelocToApply visitELF_AMDGPU_ABS32(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
llvm::object::RelocVisitor::visitELF_ARM_ABS32	RelocVisitor.h	/^  RelocToApply visitELF_ARM_ABS32(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
llvm::object::RelocVisitor::visitELF_BPF_64_32	RelocVisitor.h	/^  RelocToApply visitELF_BPF_64_32(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
llvm::object::RelocVisitor::visitELF_BPF_64_64	RelocVisitor.h	/^  RelocToApply visitELF_BPF_64_64(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
llvm::object::RelocVisitor::visitELF_HEX_32	RelocVisitor.h	/^  RelocToApply visitELF_HEX_32(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
llvm::object::RelocVisitor::visitELF_Lanai_32	RelocVisitor.h	/^  RelocToApply visitELF_Lanai_32(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
llvm::object::RelocVisitor::visitELF_MIPS64_32	RelocVisitor.h	/^  RelocToApply visitELF_MIPS64_32(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
llvm::object::RelocVisitor::visitELF_MIPS64_64	RelocVisitor.h	/^  RelocToApply visitELF_MIPS64_64(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
llvm::object::RelocVisitor::visitELF_MIPS_32	RelocVisitor.h	/^  RelocToApply visitELF_MIPS_32(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
llvm::object::RelocVisitor::visitELF_PPC64_ADDR32	RelocVisitor.h	/^  RelocToApply visitELF_PPC64_ADDR32(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
llvm::object::RelocVisitor::visitELF_PPC64_ADDR64	RelocVisitor.h	/^  RelocToApply visitELF_PPC64_ADDR64(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
llvm::object::RelocVisitor::visitELF_PPC_ADDR32	RelocVisitor.h	/^  RelocToApply visitELF_PPC_ADDR32(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
llvm::object::RelocVisitor::visitELF_SPARCV9_32	RelocVisitor.h	/^  RelocToApply visitELF_SPARCV9_32(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
llvm::object::RelocVisitor::visitELF_SPARCV9_64	RelocVisitor.h	/^  RelocToApply visitELF_SPARCV9_64(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
llvm::object::RelocVisitor::visitELF_SPARC_32	RelocVisitor.h	/^  RelocToApply visitELF_SPARC_32(RelocationRef R, uint32_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint32_t Value)
llvm::object::RelocVisitor::visitELF_X86_64_32	RelocVisitor.h	/^  RelocToApply visitELF_X86_64_32(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
llvm::object::RelocVisitor::visitELF_X86_64_32S	RelocVisitor.h	/^  RelocToApply visitELF_X86_64_32S(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
llvm::object::RelocVisitor::visitELF_X86_64_64	RelocVisitor.h	/^  RelocToApply visitELF_X86_64_64(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
llvm::object::RelocVisitor::visitELF_X86_64_NONE	RelocVisitor.h	/^  RelocToApply visitELF_X86_64_NONE(RelocationRef R) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R)
llvm::object::RelocVisitor::visitELF_X86_64_PC32	RelocVisitor.h	/^  RelocToApply visitELF_X86_64_PC32(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
llvm::object::RelocVisitor::visitMACHO_X86_64_UNSIGNED	RelocVisitor.h	/^  RelocToApply visitMACHO_X86_64_UNSIGNED(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
llvm::object::RelocVisitor::visitMachO	RelocVisitor.h	/^  RelocToApply visitMachO(uint32_t RelocType, RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(uint32_t RelocType,RelocationRef R,uint64_t Value)
llvm::object::RelocationRef	ObjectFile.h	/^class RelocationRef {$/;"	kind:c	namespace:llvm::object
llvm::object::RelocationRef::OwningObject	ObjectFile.h	/^  const ObjectFile *OwningObject;$/;"	kind:m	class:llvm::object::RelocationRef	typeref:typename:const ObjectFile *	access:private
llvm::object::RelocationRef::RelocationPimpl	ObjectFile.h	/^  DataRefImpl RelocationPimpl;$/;"	kind:m	class:llvm::object::RelocationRef	typeref:typename:DataRefImpl	access:private
llvm::object::RelocationRef::RelocationRef	ObjectFile.h	/^  RelocationRef() : OwningObject(nullptr) { }$/;"	kind:f	class:llvm::object::RelocationRef	access:public	signature:()
llvm::object::RelocationRef::RelocationRef	ObjectFile.h	/^  RelocationRef(DataRefImpl RelocationP, const ObjectFile *Owner);$/;"	kind:p	class:llvm::object::RelocationRef	access:public	signature:(DataRefImpl RelocationP,const ObjectFile * Owner)
llvm::object::RelocationRef::RelocationRef	ObjectFile.h	/^inline RelocationRef::RelocationRef(DataRefImpl RelocationP,$/;"	kind:f	class:llvm::object::RelocationRef	signature:(DataRefImpl RelocationP,const ObjectFile * Owner)
llvm::object::RelocationRef::getObject	ObjectFile.h	/^  const ObjectFile *getObject() const;$/;"	kind:p	class:llvm::object::RelocationRef	typeref:typename:const ObjectFile *	access:public	signature:() const
llvm::object::RelocationRef::getObject	ObjectFile.h	/^inline const ObjectFile *RelocationRef::getObject() const {$/;"	kind:f	class:llvm::object::RelocationRef	typeref:typename:const ObjectFile *	signature:() const
llvm::object::RelocationRef::getOffset	ObjectFile.h	/^  uint64_t getOffset() const;$/;"	kind:p	class:llvm::object::RelocationRef	typeref:typename:uint64_t	access:public	signature:() const
llvm::object::RelocationRef::getOffset	ObjectFile.h	/^inline uint64_t RelocationRef::getOffset() const {$/;"	kind:f	class:llvm::object::RelocationRef	typeref:typename:uint64_t	signature:() const
llvm::object::RelocationRef::getRawDataRefImpl	ObjectFile.h	/^  DataRefImpl getRawDataRefImpl() const;$/;"	kind:p	class:llvm::object::RelocationRef	typeref:typename:DataRefImpl	access:public	signature:() const
llvm::object::RelocationRef::getRawDataRefImpl	ObjectFile.h	/^inline DataRefImpl RelocationRef::getRawDataRefImpl() const {$/;"	kind:f	class:llvm::object::RelocationRef	typeref:typename:DataRefImpl	signature:() const
llvm::object::RelocationRef::getSymbol	ObjectFile.h	/^  symbol_iterator getSymbol() const;$/;"	kind:p	class:llvm::object::RelocationRef	typeref:typename:symbol_iterator	access:public	signature:() const
llvm::object::RelocationRef::getSymbol	ObjectFile.h	/^inline symbol_iterator RelocationRef::getSymbol() const {$/;"	kind:f	class:llvm::object::RelocationRef	typeref:typename:symbol_iterator	signature:() const
llvm::object::RelocationRef::getType	ObjectFile.h	/^  uint64_t getType() const;$/;"	kind:p	class:llvm::object::RelocationRef	typeref:typename:uint64_t	access:public	signature:() const
llvm::object::RelocationRef::getType	ObjectFile.h	/^inline uint64_t RelocationRef::getType() const {$/;"	kind:f	class:llvm::object::RelocationRef	typeref:typename:uint64_t	signature:() const
llvm::object::RelocationRef::getTypeName	ObjectFile.h	/^  void getTypeName(SmallVectorImpl<char> &Result) const;$/;"	kind:p	class:llvm::object::RelocationRef	typeref:typename:void	access:public	signature:(SmallVectorImpl<char> & Result) const
llvm::object::RelocationRef::getTypeName	ObjectFile.h	/^inline void RelocationRef::getTypeName(SmallVectorImpl<char> &Result) const {$/;"	kind:f	class:llvm::object::RelocationRef	typeref:typename:void	signature:(SmallVectorImpl<char> & Result) const
llvm::object::RelocationRef::moveNext	ObjectFile.h	/^  void moveNext();$/;"	kind:p	class:llvm::object::RelocationRef	typeref:typename:void	access:public	signature:()
llvm::object::RelocationRef::moveNext	ObjectFile.h	/^inline void RelocationRef::moveNext() {$/;"	kind:f	class:llvm::object::RelocationRef	typeref:typename:void	signature:()
llvm::object::RelocationRef::operator ==	ObjectFile.h	/^  bool operator==(const RelocationRef &Other) const;$/;"	kind:p	class:llvm::object::RelocationRef	typeref:typename:bool	access:public	signature:(const RelocationRef & Other) const
llvm::object::RelocationRef::operator ==	ObjectFile.h	/^inline bool RelocationRef::operator==(const RelocationRef &Other) const {$/;"	kind:f	class:llvm::object::RelocationRef	typeref:typename:bool	signature:(const RelocationRef & Other) const
llvm::object::SectionRef	ObjectFile.h	/^class SectionRef {$/;"	kind:c	namespace:llvm::object
llvm::object::SectionRef::OwningObject	ObjectFile.h	/^  const ObjectFile *OwningObject;$/;"	kind:m	class:llvm::object::SectionRef	typeref:typename:const ObjectFile *	access:private
llvm::object::SectionRef::SectionPimpl	ObjectFile.h	/^  DataRefImpl SectionPimpl;$/;"	kind:m	class:llvm::object::SectionRef	typeref:typename:DataRefImpl	access:private
llvm::object::SectionRef::SectionRef	ObjectFile.h	/^  SectionRef() : OwningObject(nullptr) { }$/;"	kind:f	class:llvm::object::SectionRef	access:public	signature:()
llvm::object::SectionRef::SectionRef	ObjectFile.h	/^  SectionRef(DataRefImpl SectionP, const ObjectFile *Owner);$/;"	kind:p	class:llvm::object::SectionRef	access:public	signature:(DataRefImpl SectionP,const ObjectFile * Owner)
llvm::object::SectionRef::SectionRef	ObjectFile.h	/^inline SectionRef::SectionRef(DataRefImpl SectionP,$/;"	kind:f	class:llvm::object::SectionRef	signature:(DataRefImpl SectionP,const ObjectFile * Owner)
llvm::object::SectionRef::containsSymbol	ObjectFile.h	/^  bool containsSymbol(SymbolRef S) const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:bool	access:public	signature:(SymbolRef S) const
llvm::object::SectionRef::getAddress	ObjectFile.h	/^  uint64_t getAddress() const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:uint64_t	access:public	signature:() const
llvm::object::SectionRef::getAddress	ObjectFile.h	/^inline uint64_t SectionRef::getAddress() const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:uint64_t	signature:() const
llvm::object::SectionRef::getAlignment	ObjectFile.h	/^  uint64_t getAlignment() const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:uint64_t	access:public	signature:() const
llvm::object::SectionRef::getAlignment	ObjectFile.h	/^inline uint64_t SectionRef::getAlignment() const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:uint64_t	signature:() const
llvm::object::SectionRef::getContents	ObjectFile.h	/^  std::error_code getContents(StringRef &Result) const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:std::error_code	access:public	signature:(StringRef & Result) const
llvm::object::SectionRef::getContents	ObjectFile.h	/^inline std::error_code SectionRef::getContents(StringRef &Result) const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:std::error_code	signature:(StringRef & Result) const
llvm::object::SectionRef::getName	ObjectFile.h	/^  std::error_code getName(StringRef &Result) const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:std::error_code	access:public	signature:(StringRef & Result) const
llvm::object::SectionRef::getName	ObjectFile.h	/^inline std::error_code SectionRef::getName(StringRef &Result) const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:std::error_code	signature:(StringRef & Result) const
llvm::object::SectionRef::getObject	ObjectFile.h	/^  const ObjectFile *getObject() const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:const ObjectFile *	access:public	signature:() const
llvm::object::SectionRef::getObject	ObjectFile.h	/^inline const ObjectFile *SectionRef::getObject() const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:const ObjectFile *	signature:() const
llvm::object::SectionRef::getRawDataRefImpl	ObjectFile.h	/^  DataRefImpl getRawDataRefImpl() const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:DataRefImpl	access:public	signature:() const
llvm::object::SectionRef::getRawDataRefImpl	ObjectFile.h	/^inline DataRefImpl SectionRef::getRawDataRefImpl() const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:DataRefImpl	signature:() const
llvm::object::SectionRef::getRelocatedSection	ObjectFile.h	/^  section_iterator getRelocatedSection() const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:section_iterator	access:public	signature:() const
llvm::object::SectionRef::getRelocatedSection	ObjectFile.h	/^inline section_iterator SectionRef::getRelocatedSection() const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:section_iterator	signature:() const
llvm::object::SectionRef::getSize	ObjectFile.h	/^  uint64_t getSize() const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:uint64_t	access:public	signature:() const
llvm::object::SectionRef::getSize	ObjectFile.h	/^inline uint64_t SectionRef::getSize() const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:uint64_t	signature:() const
llvm::object::SectionRef::isBSS	ObjectFile.h	/^  bool isBSS() const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:bool	access:public	signature:() const
llvm::object::SectionRef::isBSS	ObjectFile.h	/^inline bool SectionRef::isBSS() const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:bool	signature:() const
llvm::object::SectionRef::isBitcode	ObjectFile.h	/^  bool isBitcode() const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:bool	access:public	signature:() const
llvm::object::SectionRef::isBitcode	ObjectFile.h	/^inline bool SectionRef::isBitcode() const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:bool	signature:() const
llvm::object::SectionRef::isCompressed	ObjectFile.h	/^  bool isCompressed() const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:bool	access:public	signature:() const
llvm::object::SectionRef::isCompressed	ObjectFile.h	/^inline bool SectionRef::isCompressed() const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:bool	signature:() const
llvm::object::SectionRef::isData	ObjectFile.h	/^  bool isData() const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:bool	access:public	signature:() const
llvm::object::SectionRef::isData	ObjectFile.h	/^inline bool SectionRef::isData() const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:bool	signature:() const
llvm::object::SectionRef::isText	ObjectFile.h	/^  bool isText() const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:bool	access:public	signature:() const
llvm::object::SectionRef::isText	ObjectFile.h	/^inline bool SectionRef::isText() const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:bool	signature:() const
llvm::object::SectionRef::isVirtual	ObjectFile.h	/^  bool isVirtual() const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:bool	access:public	signature:() const
llvm::object::SectionRef::isVirtual	ObjectFile.h	/^inline bool SectionRef::isVirtual() const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:bool	signature:() const
llvm::object::SectionRef::moveNext	ObjectFile.h	/^  void moveNext();$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:void	access:public	signature:()
llvm::object::SectionRef::moveNext	ObjectFile.h	/^inline void SectionRef::moveNext() {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:void	signature:()
llvm::object::SectionRef::operator !=	ObjectFile.h	/^  bool operator!=(const SectionRef &Other) const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:bool	access:public	signature:(const SectionRef & Other) const
llvm::object::SectionRef::operator !=	ObjectFile.h	/^inline bool SectionRef::operator!=(const SectionRef &Other) const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:bool	signature:(const SectionRef & Other) const
llvm::object::SectionRef::operator <	ObjectFile.h	/^  bool operator<(const SectionRef &Other) const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:bool	access:public	signature:(const SectionRef & Other) const
llvm::object::SectionRef::operator <	ObjectFile.h	/^inline bool SectionRef::operator<(const SectionRef &Other) const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:bool	signature:(const SectionRef & Other) const
llvm::object::SectionRef::operator ==	ObjectFile.h	/^  bool operator==(const SectionRef &Other) const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:bool	access:public	signature:(const SectionRef & Other) const
llvm::object::SectionRef::operator ==	ObjectFile.h	/^inline bool SectionRef::operator==(const SectionRef &Other) const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:bool	signature:(const SectionRef & Other) const
llvm::object::SectionRef::relocation_begin	ObjectFile.h	/^  relocation_iterator relocation_begin() const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:relocation_iterator	access:public	signature:() const
llvm::object::SectionRef::relocation_begin	ObjectFile.h	/^inline relocation_iterator SectionRef::relocation_begin() const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:relocation_iterator	signature:() const
llvm::object::SectionRef::relocation_end	ObjectFile.h	/^  relocation_iterator relocation_end() const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:relocation_iterator	access:public	signature:() const
llvm::object::SectionRef::relocation_end	ObjectFile.h	/^inline relocation_iterator SectionRef::relocation_end() const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:relocation_iterator	signature:() const
llvm::object::SectionRef::relocations	ObjectFile.h	/^  iterator_range<relocation_iterator> relocations() const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:iterator_range<relocation_iterator>	access:public	signature:() const
llvm::object::StringTableOffset	COFF.h	/^struct StringTableOffset {$/;"	kind:s	namespace:llvm::object
llvm::object::StringTableOffset::Offset	COFF.h	/^  support::ulittle32_t Offset;$/;"	kind:m	struct:llvm::object::StringTableOffset	typeref:typename:support::ulittle32_t	access:public
llvm::object::StringTableOffset::Zeroes	COFF.h	/^  support::ulittle32_t Zeroes;$/;"	kind:m	struct:llvm::object::StringTableOffset	typeref:typename:support::ulittle32_t	access:public
llvm::object::SymEntry	SymbolSize.h	/^struct SymEntry {$/;"	kind:s	namespace:llvm::object
llvm::object::SymEntry::Address	SymbolSize.h	/^  uint64_t Address;$/;"	kind:m	struct:llvm::object::SymEntry	typeref:typename:uint64_t	access:public
llvm::object::SymEntry::I	SymbolSize.h	/^  symbol_iterator I;$/;"	kind:m	struct:llvm::object::SymEntry	typeref:typename:symbol_iterator	access:public
llvm::object::SymEntry::Number	SymbolSize.h	/^  unsigned Number;$/;"	kind:m	struct:llvm::object::SymEntry	typeref:typename:unsigned	access:public
llvm::object::SymEntry::SectionID	SymbolSize.h	/^  unsigned SectionID;$/;"	kind:m	struct:llvm::object::SymEntry	typeref:typename:unsigned	access:public
llvm::object::SymbolRef	ObjectFile.h	/^class SymbolRef : public BasicSymbolRef {$/;"	kind:c	namespace:llvm::object	inherits:BasicSymbolRef
llvm::object::SymbolRef::SymbolRef	ObjectFile.h	/^  SymbolRef() : BasicSymbolRef() {}$/;"	kind:f	class:llvm::object::SymbolRef	access:public	signature:()
llvm::object::SymbolRef::SymbolRef	ObjectFile.h	/^  SymbolRef(DataRefImpl SymbolP, const ObjectFile *Owner);$/;"	kind:p	class:llvm::object::SymbolRef	access:public	signature:(DataRefImpl SymbolP,const ObjectFile * Owner)
llvm::object::SymbolRef::SymbolRef	ObjectFile.h	/^  SymbolRef(const BasicSymbolRef &B) : BasicSymbolRef(B) {$/;"	kind:f	class:llvm::object::SymbolRef	access:public	signature:(const BasicSymbolRef & B)
llvm::object::SymbolRef::SymbolRef	ObjectFile.h	/^inline SymbolRef::SymbolRef(DataRefImpl SymbolP, const ObjectFile *Owner)$/;"	kind:f	class:llvm::object::SymbolRef	signature:(DataRefImpl SymbolP,const ObjectFile * Owner)
llvm::object::SymbolRef::Type	ObjectFile.h	/^  enum Type {$/;"	kind:g	class:llvm::object::SymbolRef	access:public
llvm::object::SymbolRef::getAddress	ObjectFile.h	/^  Expected<uint64_t> getAddress() const;$/;"	kind:p	class:llvm::object::SymbolRef	typeref:typename:Expected<uint64_t>	access:public	signature:() const
llvm::object::SymbolRef::getAddress	ObjectFile.h	/^inline Expected<uint64_t> SymbolRef::getAddress() const {$/;"	kind:f	class:llvm::object::SymbolRef	typeref:typename:Expected<uint64_t>	signature:() const
llvm::object::SymbolRef::getAlignment	ObjectFile.h	/^  uint32_t getAlignment() const;$/;"	kind:p	class:llvm::object::SymbolRef	typeref:typename:uint32_t	access:public	signature:() const
llvm::object::SymbolRef::getAlignment	ObjectFile.h	/^inline uint32_t SymbolRef::getAlignment() const {$/;"	kind:f	class:llvm::object::SymbolRef	typeref:typename:uint32_t	signature:() const
llvm::object::SymbolRef::getCommonSize	ObjectFile.h	/^  uint64_t getCommonSize() const;$/;"	kind:p	class:llvm::object::SymbolRef	typeref:typename:uint64_t	access:public	signature:() const
llvm::object::SymbolRef::getCommonSize	ObjectFile.h	/^inline uint64_t SymbolRef::getCommonSize() const {$/;"	kind:f	class:llvm::object::SymbolRef	typeref:typename:uint64_t	signature:() const
llvm::object::SymbolRef::getName	ObjectFile.h	/^  Expected<StringRef> getName() const;$/;"	kind:p	class:llvm::object::SymbolRef	typeref:typename:Expected<StringRef>	access:public	signature:() const
llvm::object::SymbolRef::getName	ObjectFile.h	/^inline Expected<StringRef> SymbolRef::getName() const {$/;"	kind:f	class:llvm::object::SymbolRef	typeref:typename:Expected<StringRef>	signature:() const
llvm::object::SymbolRef::getObject	ObjectFile.h	/^  const ObjectFile *getObject() const;$/;"	kind:p	class:llvm::object::SymbolRef	typeref:typename:const ObjectFile *	access:public	signature:() const
llvm::object::SymbolRef::getObject	ObjectFile.h	/^inline const ObjectFile *SymbolRef::getObject() const {$/;"	kind:f	class:llvm::object::SymbolRef	typeref:typename:const ObjectFile *	signature:() const
llvm::object::SymbolRef::getSection	ObjectFile.h	/^  Expected<section_iterator> getSection() const;$/;"	kind:p	class:llvm::object::SymbolRef	typeref:typename:Expected<section_iterator>	access:public	signature:() const
llvm::object::SymbolRef::getSection	ObjectFile.h	/^inline Expected<section_iterator> SymbolRef::getSection() const {$/;"	kind:f	class:llvm::object::SymbolRef	typeref:typename:Expected<section_iterator>	signature:() const
llvm::object::SymbolRef::getType	ObjectFile.h	/^  Expected<SymbolRef::Type> getType() const;$/;"	kind:p	class:llvm::object::SymbolRef	typeref:typename:Expected<SymbolRef::Type>	access:public	signature:() const
llvm::object::SymbolRef::getType	ObjectFile.h	/^inline Expected<SymbolRef::Type> SymbolRef::getType() const {$/;"	kind:f	class:llvm::object::SymbolRef	typeref:typename:Expected<SymbolRef::Type>	signature:() const
llvm::object::SymbolRef::getValue	ObjectFile.h	/^  uint64_t getValue() const;$/;"	kind:p	class:llvm::object::SymbolRef	typeref:typename:uint64_t	access:public	signature:() const
llvm::object::SymbolRef::getValue	ObjectFile.h	/^inline uint64_t SymbolRef::getValue() const {$/;"	kind:f	class:llvm::object::SymbolRef	typeref:typename:uint64_t	signature:() const
llvm::object::SymbolicFile	SymbolicFile.h	/^class SymbolicFile : public Binary {$/;"	kind:c	namespace:llvm::object	inherits:Binary
llvm::object::SymbolicFile::SymbolicFile	SymbolicFile.h	/^  SymbolicFile(unsigned int Type, MemoryBufferRef Source);$/;"	kind:p	class:llvm::object::SymbolicFile	access:public	signature:(unsigned int Type,MemoryBufferRef Source)
llvm::object::SymbolicFile::basic_symbol_iterator_range	SymbolicFile.h	/^  typedef iterator_range<basic_symbol_iterator> basic_symbol_iterator_range;$/;"	kind:t	class:llvm::object::SymbolicFile	typeref:typename:iterator_range<basic_symbol_iterator>	access:public
llvm::object::SymbolicFile::classof	SymbolicFile.h	/^  static inline bool classof(const Binary *v) {$/;"	kind:f	class:llvm::object::SymbolicFile	typeref:typename:bool	access:public	signature:(const Binary * v)
llvm::object::SymbolicFile::createSymbolicFile	SymbolicFile.h	/^  createSymbolicFile(MemoryBufferRef Object) {$/;"	kind:f	class:llvm::object::SymbolicFile	typeref:typename:Expected<std::unique_ptr<SymbolicFile>>	access:public	signature:(MemoryBufferRef Object)
llvm::object::SymbolicFile::createSymbolicFile	SymbolicFile.h	/^  createSymbolicFile(MemoryBufferRef Object, sys::fs::file_magic Type,$/;"	kind:p	class:llvm::object::SymbolicFile	typeref:typename:Expected<std::unique_ptr<SymbolicFile>>	access:public	signature:(MemoryBufferRef Object,sys::fs::file_magic Type,LLVMContext * Context)
llvm::object::SymbolicFile::createSymbolicFile	SymbolicFile.h	/^  createSymbolicFile(StringRef ObjectPath);$/;"	kind:p	class:llvm::object::SymbolicFile	typeref:typename:Expected<OwningBinary<SymbolicFile>>	access:public	signature:(StringRef ObjectPath)
llvm::object::SymbolicFile::getSymbolFlags	SymbolicFile.h	/^  virtual uint32_t getSymbolFlags(DataRefImpl Symb) const = 0;$/;"	kind:p	class:llvm::object::SymbolicFile	typeref:typename:uint32_t	access:public	signature:(DataRefImpl Symb) const
llvm::object::SymbolicFile::moveSymbolNext	SymbolicFile.h	/^  virtual void moveSymbolNext(DataRefImpl &Symb) const = 0;$/;"	kind:p	class:llvm::object::SymbolicFile	typeref:typename:void	access:public	signature:(DataRefImpl & Symb) const
llvm::object::SymbolicFile::printSymbolName	SymbolicFile.h	/^  virtual std::error_code printSymbolName(raw_ostream &OS,$/;"	kind:p	class:llvm::object::SymbolicFile	typeref:typename:std::error_code	access:public	signature:(raw_ostream & OS,DataRefImpl Symb) const
llvm::object::SymbolicFile::symbol_begin	SymbolicFile.h	/^  virtual basic_symbol_iterator symbol_begin() const = 0;$/;"	kind:p	class:llvm::object::SymbolicFile	typeref:typename:basic_symbol_iterator	access:public	signature:() const
llvm::object::SymbolicFile::symbol_end	SymbolicFile.h	/^  virtual basic_symbol_iterator symbol_end() const = 0;$/;"	kind:p	class:llvm::object::SymbolicFile	typeref:typename:basic_symbol_iterator	access:public	signature:() const
llvm::object::SymbolicFile::symbols	SymbolicFile.h	/^  basic_symbol_iterator_range symbols() const {$/;"	kind:f	class:llvm::object::SymbolicFile	typeref:typename:basic_symbol_iterator_range	access:public	signature:() const
llvm::object::SymbolicFile::~SymbolicFile	SymbolicFile.h	/^  ~SymbolicFile() override;$/;"	kind:p	class:llvm::object::SymbolicFile	access:public	signature:()
llvm::object::base_reloc_iterator	COFF.h	/^typedef content_iterator<BaseRelocRef> base_reloc_iterator;$/;"	kind:t	namespace:llvm::object	typeref:typename:content_iterator<BaseRelocRef>
llvm::object::basic_symbol_iterator	SymbolicFile.h	/^typedef content_iterator<BasicSymbolRef> basic_symbol_iterator;$/;"	kind:t	namespace:llvm::object	typeref:typename:content_iterator<BasicSymbolRef>
llvm::object::bind_iterator	MachO.h	/^typedef content_iterator<MachOBindEntry> bind_iterator;$/;"	kind:t	namespace:llvm::object	typeref:typename:content_iterator<MachOBindEntry>
llvm::object::coff_aux_bf_and_ef_symbol	COFF.h	/^struct coff_aux_bf_and_ef_symbol {$/;"	kind:s	namespace:llvm::object
llvm::object::coff_aux_bf_and_ef_symbol::Linenumber	COFF.h	/^  support::ulittle16_t Linenumber;$/;"	kind:m	struct:llvm::object::coff_aux_bf_and_ef_symbol	typeref:typename:support::ulittle16_t	access:public
llvm::object::coff_aux_bf_and_ef_symbol::PointerToNextFunction	COFF.h	/^  support::ulittle32_t PointerToNextFunction;$/;"	kind:m	struct:llvm::object::coff_aux_bf_and_ef_symbol	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_aux_bf_and_ef_symbol::Unused1	COFF.h	/^  char Unused1[4];$/;"	kind:m	struct:llvm::object::coff_aux_bf_and_ef_symbol	typeref:typename:char[4]	access:public
llvm::object::coff_aux_bf_and_ef_symbol::Unused2	COFF.h	/^  char Unused2[6];$/;"	kind:m	struct:llvm::object::coff_aux_bf_and_ef_symbol	typeref:typename:char[6]	access:public
llvm::object::coff_aux_bf_and_ef_symbol::Unused3	COFF.h	/^  char Unused3[2];$/;"	kind:m	struct:llvm::object::coff_aux_bf_and_ef_symbol	typeref:typename:char[2]	access:public
llvm::object::coff_aux_clr_token	COFF.h	/^struct coff_aux_clr_token {$/;"	kind:s	namespace:llvm::object
llvm::object::coff_aux_clr_token::AuxType	COFF.h	/^  uint8_t              AuxType;$/;"	kind:m	struct:llvm::object::coff_aux_clr_token	typeref:typename:uint8_t	access:public
llvm::object::coff_aux_clr_token::MBZ	COFF.h	/^  char                 MBZ[12];$/;"	kind:m	struct:llvm::object::coff_aux_clr_token	typeref:typename:char[12]	access:public
llvm::object::coff_aux_clr_token::Reserved	COFF.h	/^  uint8_t              Reserved;$/;"	kind:m	struct:llvm::object::coff_aux_clr_token	typeref:typename:uint8_t	access:public
llvm::object::coff_aux_clr_token::SymbolTableIndex	COFF.h	/^  support::ulittle32_t SymbolTableIndex;$/;"	kind:m	struct:llvm::object::coff_aux_clr_token	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_aux_function_definition	COFF.h	/^struct coff_aux_function_definition {$/;"	kind:s	namespace:llvm::object
llvm::object::coff_aux_function_definition::PointerToLinenumber	COFF.h	/^  support::ulittle32_t PointerToLinenumber;$/;"	kind:m	struct:llvm::object::coff_aux_function_definition	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_aux_function_definition::PointerToNextFunction	COFF.h	/^  support::ulittle32_t PointerToNextFunction;$/;"	kind:m	struct:llvm::object::coff_aux_function_definition	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_aux_function_definition::TagIndex	COFF.h	/^  support::ulittle32_t TagIndex;$/;"	kind:m	struct:llvm::object::coff_aux_function_definition	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_aux_function_definition::TotalSize	COFF.h	/^  support::ulittle32_t TotalSize;$/;"	kind:m	struct:llvm::object::coff_aux_function_definition	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_aux_function_definition::Unused1	COFF.h	/^  char Unused1[2];$/;"	kind:m	struct:llvm::object::coff_aux_function_definition	typeref:typename:char[2]	access:public
llvm::object::coff_aux_section_definition	COFF.h	/^struct coff_aux_section_definition {$/;"	kind:s	namespace:llvm::object
llvm::object::coff_aux_section_definition::CheckSum	COFF.h	/^  support::ulittle32_t CheckSum;$/;"	kind:m	struct:llvm::object::coff_aux_section_definition	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_aux_section_definition::Length	COFF.h	/^  support::ulittle32_t Length;$/;"	kind:m	struct:llvm::object::coff_aux_section_definition	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_aux_section_definition::NumberHighPart	COFF.h	/^  support::ulittle16_t NumberHighPart;$/;"	kind:m	struct:llvm::object::coff_aux_section_definition	typeref:typename:support::ulittle16_t	access:public
llvm::object::coff_aux_section_definition::NumberLowPart	COFF.h	/^  support::ulittle16_t NumberLowPart;$/;"	kind:m	struct:llvm::object::coff_aux_section_definition	typeref:typename:support::ulittle16_t	access:public
llvm::object::coff_aux_section_definition::NumberOfLinenumbers	COFF.h	/^  support::ulittle16_t NumberOfLinenumbers;$/;"	kind:m	struct:llvm::object::coff_aux_section_definition	typeref:typename:support::ulittle16_t	access:public
llvm::object::coff_aux_section_definition::NumberOfRelocations	COFF.h	/^  support::ulittle16_t NumberOfRelocations;$/;"	kind:m	struct:llvm::object::coff_aux_section_definition	typeref:typename:support::ulittle16_t	access:public
llvm::object::coff_aux_section_definition::Selection	COFF.h	/^  uint8_t              Selection;$/;"	kind:m	struct:llvm::object::coff_aux_section_definition	typeref:typename:uint8_t	access:public
llvm::object::coff_aux_section_definition::Unused	COFF.h	/^  uint8_t              Unused;$/;"	kind:m	struct:llvm::object::coff_aux_section_definition	typeref:typename:uint8_t	access:public
llvm::object::coff_aux_section_definition::getNumber	COFF.h	/^  int32_t getNumber(bool IsBigObj) const {$/;"	kind:f	struct:llvm::object::coff_aux_section_definition	typeref:typename:int32_t	access:public	signature:(bool IsBigObj) const
llvm::object::coff_aux_weak_external	COFF.h	/^struct coff_aux_weak_external {$/;"	kind:s	namespace:llvm::object
llvm::object::coff_aux_weak_external::Characteristics	COFF.h	/^  support::ulittle32_t Characteristics;$/;"	kind:m	struct:llvm::object::coff_aux_weak_external	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_aux_weak_external::TagIndex	COFF.h	/^  support::ulittle32_t TagIndex;$/;"	kind:m	struct:llvm::object::coff_aux_weak_external	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_aux_weak_external::Unused1	COFF.h	/^  char Unused1[10];$/;"	kind:m	struct:llvm::object::coff_aux_weak_external	typeref:typename:char[10]	access:public
llvm::object::coff_base_reloc_block_entry	COFF.h	/^struct coff_base_reloc_block_entry {$/;"	kind:s	namespace:llvm::object
llvm::object::coff_base_reloc_block_entry::Data	COFF.h	/^  support::ulittle16_t Data;$/;"	kind:m	struct:llvm::object::coff_base_reloc_block_entry	typeref:typename:support::ulittle16_t	access:public
llvm::object::coff_base_reloc_block_entry::getOffset	COFF.h	/^  int getOffset() const { return Data & ((1 << 12) - 1); }$/;"	kind:f	struct:llvm::object::coff_base_reloc_block_entry	typeref:typename:int	access:public	signature:() const
llvm::object::coff_base_reloc_block_entry::getType	COFF.h	/^  int getType() const { return Data >> 12; }$/;"	kind:f	struct:llvm::object::coff_base_reloc_block_entry	typeref:typename:int	access:public	signature:() const
llvm::object::coff_base_reloc_block_header	COFF.h	/^struct coff_base_reloc_block_header {$/;"	kind:s	namespace:llvm::object
llvm::object::coff_base_reloc_block_header::BlockSize	COFF.h	/^  support::ulittle32_t BlockSize;$/;"	kind:m	struct:llvm::object::coff_base_reloc_block_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_base_reloc_block_header::PageRVA	COFF.h	/^  support::ulittle32_t PageRVA;$/;"	kind:m	struct:llvm::object::coff_base_reloc_block_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_bigobj_file_header	COFF.h	/^struct coff_bigobj_file_header {$/;"	kind:s	namespace:llvm::object
llvm::object::coff_bigobj_file_header::Machine	COFF.h	/^  support::ulittle16_t Machine;$/;"	kind:m	struct:llvm::object::coff_bigobj_file_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::coff_bigobj_file_header::NumberOfSections	COFF.h	/^  support::ulittle32_t NumberOfSections;$/;"	kind:m	struct:llvm::object::coff_bigobj_file_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_bigobj_file_header::NumberOfSymbols	COFF.h	/^  support::ulittle32_t NumberOfSymbols;$/;"	kind:m	struct:llvm::object::coff_bigobj_file_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_bigobj_file_header::PointerToSymbolTable	COFF.h	/^  support::ulittle32_t PointerToSymbolTable;$/;"	kind:m	struct:llvm::object::coff_bigobj_file_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_bigobj_file_header::Sig1	COFF.h	/^  support::ulittle16_t Sig1;$/;"	kind:m	struct:llvm::object::coff_bigobj_file_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::coff_bigobj_file_header::Sig2	COFF.h	/^  support::ulittle16_t Sig2;$/;"	kind:m	struct:llvm::object::coff_bigobj_file_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::coff_bigobj_file_header::TimeDateStamp	COFF.h	/^  support::ulittle32_t TimeDateStamp;$/;"	kind:m	struct:llvm::object::coff_bigobj_file_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_bigobj_file_header::UUID	COFF.h	/^  uint8_t              UUID[16];$/;"	kind:m	struct:llvm::object::coff_bigobj_file_header	typeref:typename:uint8_t[16]	access:public
llvm::object::coff_bigobj_file_header::Version	COFF.h	/^  support::ulittle16_t Version;$/;"	kind:m	struct:llvm::object::coff_bigobj_file_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::coff_bigobj_file_header::unused1	COFF.h	/^  support::ulittle32_t unused1;$/;"	kind:m	struct:llvm::object::coff_bigobj_file_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_bigobj_file_header::unused2	COFF.h	/^  support::ulittle32_t unused2;$/;"	kind:m	struct:llvm::object::coff_bigobj_file_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_bigobj_file_header::unused3	COFF.h	/^  support::ulittle32_t unused3;$/;"	kind:m	struct:llvm::object::coff_bigobj_file_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_bigobj_file_header::unused4	COFF.h	/^  support::ulittle32_t unused4;$/;"	kind:m	struct:llvm::object::coff_bigobj_file_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_file_header	COFF.h	/^struct coff_file_header {$/;"	kind:s	namespace:llvm::object
llvm::object::coff_file_header::Characteristics	COFF.h	/^  support::ulittle16_t Characteristics;$/;"	kind:m	struct:llvm::object::coff_file_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::coff_file_header::Machine	COFF.h	/^  support::ulittle16_t Machine;$/;"	kind:m	struct:llvm::object::coff_file_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::coff_file_header::NumberOfSections	COFF.h	/^  support::ulittle16_t NumberOfSections;$/;"	kind:m	struct:llvm::object::coff_file_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::coff_file_header::NumberOfSymbols	COFF.h	/^  support::ulittle32_t NumberOfSymbols;$/;"	kind:m	struct:llvm::object::coff_file_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_file_header::PointerToSymbolTable	COFF.h	/^  support::ulittle32_t PointerToSymbolTable;$/;"	kind:m	struct:llvm::object::coff_file_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_file_header::SizeOfOptionalHeader	COFF.h	/^  support::ulittle16_t SizeOfOptionalHeader;$/;"	kind:m	struct:llvm::object::coff_file_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::coff_file_header::TimeDateStamp	COFF.h	/^  support::ulittle32_t TimeDateStamp;$/;"	kind:m	struct:llvm::object::coff_file_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_file_header::isImportLibrary	COFF.h	/^  bool isImportLibrary() const { return NumberOfSections == 0xffff; }$/;"	kind:f	struct:llvm::object::coff_file_header	typeref:typename:bool	access:public	signature:() const
llvm::object::coff_import_directory_table_entry	COFF.h	/^struct coff_import_directory_table_entry {$/;"	kind:s	namespace:llvm::object
llvm::object::coff_import_directory_table_entry::ForwarderChain	COFF.h	/^  support::ulittle32_t ForwarderChain;$/;"	kind:m	struct:llvm::object::coff_import_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_import_directory_table_entry::ImportAddressTableRVA	COFF.h	/^  support::ulittle32_t ImportAddressTableRVA;$/;"	kind:m	struct:llvm::object::coff_import_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_import_directory_table_entry::ImportLookupTableRVA	COFF.h	/^  support::ulittle32_t ImportLookupTableRVA;$/;"	kind:m	struct:llvm::object::coff_import_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_import_directory_table_entry::NameRVA	COFF.h	/^  support::ulittle32_t NameRVA;$/;"	kind:m	struct:llvm::object::coff_import_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_import_directory_table_entry::TimeDateStamp	COFF.h	/^  support::ulittle32_t TimeDateStamp;$/;"	kind:m	struct:llvm::object::coff_import_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_import_directory_table_entry::isNull	COFF.h	/^  bool isNull() const {$/;"	kind:f	struct:llvm::object::coff_import_directory_table_entry	typeref:typename:bool	access:public	signature:() const
llvm::object::coff_import_header	COFF.h	/^struct coff_import_header {$/;"	kind:s	namespace:llvm::object
llvm::object::coff_import_header::Machine	COFF.h	/^  support::ulittle16_t Machine;$/;"	kind:m	struct:llvm::object::coff_import_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::coff_import_header::OrdinalHint	COFF.h	/^  support::ulittle16_t OrdinalHint;$/;"	kind:m	struct:llvm::object::coff_import_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::coff_import_header::Sig1	COFF.h	/^  support::ulittle16_t Sig1;$/;"	kind:m	struct:llvm::object::coff_import_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::coff_import_header::Sig2	COFF.h	/^  support::ulittle16_t Sig2;$/;"	kind:m	struct:llvm::object::coff_import_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::coff_import_header::SizeOfData	COFF.h	/^  support::ulittle32_t SizeOfData;$/;"	kind:m	struct:llvm::object::coff_import_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_import_header::TimeDateStamp	COFF.h	/^  support::ulittle32_t TimeDateStamp;$/;"	kind:m	struct:llvm::object::coff_import_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_import_header::TypeInfo	COFF.h	/^  support::ulittle16_t TypeInfo;$/;"	kind:m	struct:llvm::object::coff_import_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::coff_import_header::Version	COFF.h	/^  support::ulittle16_t Version;$/;"	kind:m	struct:llvm::object::coff_import_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::coff_import_header::getNameType	COFF.h	/^  int getNameType() const { return (TypeInfo >> 2) & 0x7; }$/;"	kind:f	struct:llvm::object::coff_import_header	typeref:typename:int	access:public	signature:() const
llvm::object::coff_import_header::getType	COFF.h	/^  int getType() const { return TypeInfo & 0x3; }$/;"	kind:f	struct:llvm::object::coff_import_header	typeref:typename:int	access:public	signature:() const
llvm::object::coff_load_configuration32	COFF.h	/^struct coff_load_configuration32 {$/;"	kind:s	namespace:llvm::object
llvm::object::coff_load_configuration32::CSDVersion	COFF.h	/^  support::ulittle16_t CSDVersion;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle16_t	access:public
llvm::object::coff_load_configuration32::Characteristics	COFF.h	/^  support::ulittle32_t Characteristics;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_load_configuration32::CriticalSectionDefaultTimeout	COFF.h	/^  support::ulittle32_t CriticalSectionDefaultTimeout;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_load_configuration32::DeCommitFreeBlockThreshold	COFF.h	/^  support::ulittle32_t DeCommitFreeBlockThreshold;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_load_configuration32::DeCommitTotalFreeThreshold	COFF.h	/^  support::ulittle32_t DeCommitTotalFreeThreshold;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_load_configuration32::EditList	COFF.h	/^  support::ulittle32_t EditList;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_load_configuration32::GlobalFlagsClear	COFF.h	/^  support::ulittle32_t GlobalFlagsClear;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_load_configuration32::GlobalFlagsSet	COFF.h	/^  support::ulittle32_t GlobalFlagsSet;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_load_configuration32::LockPrefixTable	COFF.h	/^  support::ulittle32_t LockPrefixTable;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_load_configuration32::MajorVersion	COFF.h	/^  support::ulittle16_t MajorVersion;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle16_t	access:public
llvm::object::coff_load_configuration32::MaximumAllocationSize	COFF.h	/^  support::ulittle32_t MaximumAllocationSize;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_load_configuration32::MinorVersion	COFF.h	/^  support::ulittle16_t MinorVersion;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle16_t	access:public
llvm::object::coff_load_configuration32::ProcessAffinityMask	COFF.h	/^  support::ulittle32_t ProcessAffinityMask;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_load_configuration32::ProcessHeapFlags	COFF.h	/^  support::ulittle32_t ProcessHeapFlags;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_load_configuration32::Reserved	COFF.h	/^  support::ulittle16_t Reserved;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle16_t	access:public
llvm::object::coff_load_configuration32::SEHandlerCount	COFF.h	/^  support::ulittle32_t SEHandlerCount;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_load_configuration32::SEHandlerTable	COFF.h	/^  support::ulittle32_t SEHandlerTable;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_load_configuration32::SecurityCookie	COFF.h	/^  support::ulittle32_t SecurityCookie;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_load_configuration32::TimeDateStamp	COFF.h	/^  support::ulittle32_t TimeDateStamp;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_load_configuration32::VirtualMemoryThreshold	COFF.h	/^  support::ulittle32_t VirtualMemoryThreshold;$/;"	kind:m	struct:llvm::object::coff_load_configuration32	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_load_configuration64	COFF.h	/^struct coff_load_configuration64 {$/;"	kind:s	namespace:llvm::object
llvm::object::coff_load_configuration64::CSDVersion	COFF.h	/^  support::ulittle16_t CSDVersion;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle16_t	access:public
llvm::object::coff_load_configuration64::Characteristics	COFF.h	/^  support::ulittle32_t Characteristics;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_load_configuration64::CriticalSectionDefaultTimeout	COFF.h	/^  support::ulittle32_t CriticalSectionDefaultTimeout;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_load_configuration64::DeCommitFreeBlockThreshold	COFF.h	/^  support::ulittle32_t DeCommitFreeBlockThreshold;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_load_configuration64::DeCommitTotalFreeThreshold	COFF.h	/^  support::ulittle32_t DeCommitTotalFreeThreshold;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_load_configuration64::EditList	COFF.h	/^  support::ulittle32_t EditList;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_load_configuration64::GlobalFlagsClear	COFF.h	/^  support::ulittle32_t GlobalFlagsClear;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_load_configuration64::GlobalFlagsSet	COFF.h	/^  support::ulittle32_t GlobalFlagsSet;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_load_configuration64::LockPrefixTable	COFF.h	/^  support::ulittle32_t LockPrefixTable;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_load_configuration64::MajorVersion	COFF.h	/^  support::ulittle16_t MajorVersion;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle16_t	access:public
llvm::object::coff_load_configuration64::MaximumAllocationSize	COFF.h	/^  support::ulittle32_t MaximumAllocationSize;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_load_configuration64::MinorVersion	COFF.h	/^  support::ulittle16_t MinorVersion;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle16_t	access:public
llvm::object::coff_load_configuration64::ProcessAffinityMask	COFF.h	/^  support::ulittle32_t ProcessAffinityMask;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_load_configuration64::ProcessHeapFlags	COFF.h	/^  support::ulittle32_t ProcessHeapFlags;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_load_configuration64::Reserved	COFF.h	/^  support::ulittle16_t Reserved;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle16_t	access:public
llvm::object::coff_load_configuration64::SEHandlerCount	COFF.h	/^  support::ulittle64_t SEHandlerCount;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle64_t	access:public
llvm::object::coff_load_configuration64::SEHandlerTable	COFF.h	/^  support::ulittle64_t SEHandlerTable;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle64_t	access:public
llvm::object::coff_load_configuration64::SecurityCookie	COFF.h	/^  support::ulittle64_t SecurityCookie;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle64_t	access:public
llvm::object::coff_load_configuration64::TimeDateStamp	COFF.h	/^  support::ulittle32_t TimeDateStamp;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_load_configuration64::VirtualMemoryThreshold	COFF.h	/^  support::ulittle32_t VirtualMemoryThreshold;$/;"	kind:m	struct:llvm::object::coff_load_configuration64	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_relocation	COFF.h	/^struct coff_relocation {$/;"	kind:s	namespace:llvm::object
llvm::object::coff_relocation::SymbolTableIndex	COFF.h	/^  support::ulittle32_t SymbolTableIndex;$/;"	kind:m	struct:llvm::object::coff_relocation	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_relocation::Type	COFF.h	/^  support::ulittle16_t Type;$/;"	kind:m	struct:llvm::object::coff_relocation	typeref:typename:support::ulittle16_t	access:public
llvm::object::coff_relocation::VirtualAddress	COFF.h	/^  support::ulittle32_t VirtualAddress;$/;"	kind:m	struct:llvm::object::coff_relocation	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_runtime_function_x64	COFF.h	/^struct coff_runtime_function_x64 {$/;"	kind:s	namespace:llvm::object
llvm::object::coff_runtime_function_x64::BeginAddress	COFF.h	/^  support::ulittle32_t BeginAddress;$/;"	kind:m	struct:llvm::object::coff_runtime_function_x64	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_runtime_function_x64::EndAddress	COFF.h	/^  support::ulittle32_t EndAddress;$/;"	kind:m	struct:llvm::object::coff_runtime_function_x64	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_runtime_function_x64::UnwindInformation	COFF.h	/^  support::ulittle32_t UnwindInformation;$/;"	kind:m	struct:llvm::object::coff_runtime_function_x64	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_section	COFF.h	/^struct coff_section {$/;"	kind:s	namespace:llvm::object
llvm::object::coff_section::Characteristics	COFF.h	/^  support::ulittle32_t Characteristics;$/;"	kind:m	struct:llvm::object::coff_section	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_section::Name	COFF.h	/^  char Name[COFF::NameSize];$/;"	kind:m	struct:llvm::object::coff_section	typeref:typename:char[]	access:public
llvm::object::coff_section::NumberOfLinenumbers	COFF.h	/^  support::ulittle16_t NumberOfLinenumbers;$/;"	kind:m	struct:llvm::object::coff_section	typeref:typename:support::ulittle16_t	access:public
llvm::object::coff_section::NumberOfRelocations	COFF.h	/^  support::ulittle16_t NumberOfRelocations;$/;"	kind:m	struct:llvm::object::coff_section	typeref:typename:support::ulittle16_t	access:public
llvm::object::coff_section::PointerToLinenumbers	COFF.h	/^  support::ulittle32_t PointerToLinenumbers;$/;"	kind:m	struct:llvm::object::coff_section	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_section::PointerToRawData	COFF.h	/^  support::ulittle32_t PointerToRawData;$/;"	kind:m	struct:llvm::object::coff_section	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_section::PointerToRelocations	COFF.h	/^  support::ulittle32_t PointerToRelocations;$/;"	kind:m	struct:llvm::object::coff_section	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_section::SizeOfRawData	COFF.h	/^  support::ulittle32_t SizeOfRawData;$/;"	kind:m	struct:llvm::object::coff_section	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_section::VirtualAddress	COFF.h	/^  support::ulittle32_t VirtualAddress;$/;"	kind:m	struct:llvm::object::coff_section	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_section::VirtualSize	COFF.h	/^  support::ulittle32_t VirtualSize;$/;"	kind:m	struct:llvm::object::coff_section	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_section::getAlignment	COFF.h	/^  uint32_t getAlignment() const {$/;"	kind:f	struct:llvm::object::coff_section	typeref:typename:uint32_t	access:public	signature:() const
llvm::object::coff_section::hasExtendedRelocations	COFF.h	/^  bool hasExtendedRelocations() const {$/;"	kind:f	struct:llvm::object::coff_section	typeref:typename:bool	access:public	signature:() const
llvm::object::coff_symbol	COFF.h	/^struct coff_symbol {$/;"	kind:s	namespace:llvm::object
llvm::object::coff_symbol16	COFF.h	/^typedef coff_symbol<support::ulittle16_t> coff_symbol16;$/;"	kind:t	namespace:llvm::object	typeref:typename:coff_symbol<support::ulittle16_t>
llvm::object::coff_symbol32	COFF.h	/^typedef coff_symbol<support::ulittle32_t> coff_symbol32;$/;"	kind:t	namespace:llvm::object	typeref:typename:coff_symbol<support::ulittle32_t>
llvm::object::coff_symbol::Name	COFF.h	/^  } Name;$/;"	kind:m	struct:llvm::object::coff_symbol	typeref:union:llvm::object::coff_symbol::__anona9e5c959010a	access:public
llvm::object::coff_symbol::NumberOfAuxSymbols	COFF.h	/^  uint8_t NumberOfAuxSymbols;$/;"	kind:m	struct:llvm::object::coff_symbol	typeref:typename:uint8_t	access:public
llvm::object::coff_symbol::SectionNumber	COFF.h	/^  SectionNumberType SectionNumber;$/;"	kind:m	struct:llvm::object::coff_symbol	typeref:typename:SectionNumberType	access:public
llvm::object::coff_symbol::StorageClass	COFF.h	/^  uint8_t StorageClass;$/;"	kind:m	struct:llvm::object::coff_symbol	typeref:typename:uint8_t	access:public
llvm::object::coff_symbol::Type	COFF.h	/^  support::ulittle16_t Type;$/;"	kind:m	struct:llvm::object::coff_symbol	typeref:typename:support::ulittle16_t	access:public
llvm::object::coff_symbol::Value	COFF.h	/^  support::ulittle32_t Value;$/;"	kind:m	struct:llvm::object::coff_symbol	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_symbol::__anona9e5c959010a	COFF.h	/^  union {$/;"	kind:u	struct:llvm::object::coff_symbol	access:public
llvm::object::coff_symbol::__anona9e5c959010a::Offset	COFF.h	/^    StringTableOffset Offset;$/;"	kind:m	union:llvm::object::coff_symbol::__anona9e5c959010a	typeref:typename:StringTableOffset	access:public
llvm::object::coff_symbol::__anona9e5c959010a::ShortName	COFF.h	/^    char ShortName[COFF::NameSize];$/;"	kind:m	union:llvm::object::coff_symbol::__anona9e5c959010a	typeref:typename:char[]	access:public
llvm::object::coff_symbol_generic	COFF.h	/^struct coff_symbol_generic {$/;"	kind:s	namespace:llvm::object
llvm::object::coff_symbol_generic::Name	COFF.h	/^  } Name;$/;"	kind:m	struct:llvm::object::coff_symbol_generic	typeref:union:llvm::object::coff_symbol_generic::__anona9e5c959020a	access:public
llvm::object::coff_symbol_generic::Value	COFF.h	/^  support::ulittle32_t Value;$/;"	kind:m	struct:llvm::object::coff_symbol_generic	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_symbol_generic::__anona9e5c959020a	COFF.h	/^  union {$/;"	kind:u	struct:llvm::object::coff_symbol_generic	access:public
llvm::object::coff_symbol_generic::__anona9e5c959020a::Offset	COFF.h	/^    StringTableOffset Offset;$/;"	kind:m	union:llvm::object::coff_symbol_generic::__anona9e5c959020a	typeref:typename:StringTableOffset	access:public
llvm::object::coff_symbol_generic::__anona9e5c959020a::ShortName	COFF.h	/^    char ShortName[COFF::NameSize];$/;"	kind:m	union:llvm::object::coff_symbol_generic::__anona9e5c959020a	typeref:typename:char[]	access:public
llvm::object::coff_tls_directory	COFF.h	/^struct coff_tls_directory {$/;"	kind:s	namespace:llvm::object
llvm::object::coff_tls_directory32	COFF.h	/^typedef coff_tls_directory<support::little32_t> coff_tls_directory32;$/;"	kind:t	namespace:llvm::object	typeref:typename:coff_tls_directory<support::little32_t>
llvm::object::coff_tls_directory64	COFF.h	/^typedef coff_tls_directory<support::little64_t> coff_tls_directory64;$/;"	kind:t	namespace:llvm::object	typeref:typename:coff_tls_directory<support::little64_t>
llvm::object::coff_tls_directory::AddressOfCallBacks	COFF.h	/^  IntTy AddressOfCallBacks;$/;"	kind:m	struct:llvm::object::coff_tls_directory	typeref:typename:IntTy	access:public
llvm::object::coff_tls_directory::AddressOfIndex	COFF.h	/^  IntTy AddressOfIndex;$/;"	kind:m	struct:llvm::object::coff_tls_directory	typeref:typename:IntTy	access:public
llvm::object::coff_tls_directory::Characteristics	COFF.h	/^  support::ulittle32_t Characteristics;$/;"	kind:m	struct:llvm::object::coff_tls_directory	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_tls_directory::EndAddressOfRawData	COFF.h	/^  IntTy EndAddressOfRawData;$/;"	kind:m	struct:llvm::object::coff_tls_directory	typeref:typename:IntTy	access:public
llvm::object::coff_tls_directory::SizeOfZeroFill	COFF.h	/^  support::ulittle32_t SizeOfZeroFill;$/;"	kind:m	struct:llvm::object::coff_tls_directory	typeref:typename:support::ulittle32_t	access:public
llvm::object::coff_tls_directory::StartAddressOfRawData	COFF.h	/^  IntTy StartAddressOfRawData;$/;"	kind:m	struct:llvm::object::coff_tls_directory	typeref:typename:IntTy	access:public
llvm::object::coff_tls_directory::getAlignment	COFF.h	/^  uint32_t getAlignment() const {$/;"	kind:f	struct:llvm::object::coff_tls_directory	typeref:typename:uint32_t	access:public	signature:() const
llvm::object::compareAddr	ELF.h	/^static bool compareAddr(uint64_t VAddr, const Elf_Phdr_Impl<ELFT> *Phdr) {$/;"	kind:f	namespace:llvm::object	typeref:typename:bool	signature:(uint64_t VAddr,const Elf_Phdr_Impl<ELFT> * Phdr)
llvm::object::compareAddress	SymbolSize.h	/^int compareAddress(const SymEntry *A, const SymEntry *B);$/;"	kind:p	namespace:llvm::object	typeref:typename:int	signature:(const SymEntry * A,const SymEntry * B)
llvm::object::computeSymbolSizes	SymbolSize.h	/^computeSymbolSizes(const ObjectFile &O);$/;"	kind:p	namespace:llvm::object	typeref:typename:std::vector<std::pair<SymbolRef,uint64_t>>	signature:(const ObjectFile & O)
llvm::object::content_iterator	SymbolicFile.h	/^class content_iterator$/;"	kind:c	namespace:llvm::object	inherits:std::iterator<std::forward_iterator_tag,content_type>
llvm::object::content_iterator::Current	SymbolicFile.h	/^  content_type Current;$/;"	kind:m	class:llvm::object::content_iterator	typeref:typename:content_type	access:private
llvm::object::content_iterator::content_iterator	SymbolicFile.h	/^  content_iterator(content_type symb) : Current(std::move(symb)) {}$/;"	kind:f	class:llvm::object::content_iterator	access:public	signature:(content_type symb)
llvm::object::content_iterator::operator !=	SymbolicFile.h	/^  bool operator!=(const content_iterator &other) const {$/;"	kind:f	class:llvm::object::content_iterator	typeref:typename:bool	access:public	signature:(const content_iterator & other) const
llvm::object::content_iterator::operator *	SymbolicFile.h	/^  const content_type &operator*() const { return Current; }$/;"	kind:f	class:llvm::object::content_iterator	typeref:typename:const content_type &	access:public	signature:() const
llvm::object::content_iterator::operator ++	SymbolicFile.h	/^  content_iterator &operator++() { \/\/ preincrement$/;"	kind:f	class:llvm::object::content_iterator	typeref:typename:content_iterator &	access:public	signature:()
llvm::object::content_iterator::operator ->	SymbolicFile.h	/^  const content_type *operator->() const { return &Current; }$/;"	kind:f	class:llvm::object::content_iterator	typeref:typename:const content_type *	access:public	signature:() const
llvm::object::content_iterator::operator ==	SymbolicFile.h	/^  bool operator==(const content_iterator &other) const {$/;"	kind:f	class:llvm::object::content_iterator	typeref:typename:bool	access:public	signature:(const content_iterator & other) const
llvm::object::createBinary	Binary.h	/^Expected<OwningBinary<Binary>> createBinary(StringRef Path);$/;"	kind:p	namespace:llvm::object	typeref:typename:Expected<OwningBinary<Binary>>	signature:(StringRef Path)
llvm::object::createBinary	Binary.h	/^Expected<std::unique_ptr<Binary>> createBinary(MemoryBufferRef Source,$/;"	kind:p	namespace:llvm::object	typeref:typename:Expected<std::unique_ptr<Binary>>	signature:(MemoryBufferRef Source,LLVMContext * Context=nullptr)
llvm::object::createError	ELF.h	/^static inline Error createError(StringRef Err) {$/;"	kind:f	namespace:llvm::object	typeref:typename:Error	signature:(StringRef Err)
llvm::object::data_directory	COFF.h	/^struct data_directory {$/;"	kind:s	namespace:llvm::object
llvm::object::data_directory::RelativeVirtualAddress	COFF.h	/^  support::ulittle32_t RelativeVirtualAddress;$/;"	kind:m	struct:llvm::object::data_directory	typeref:typename:support::ulittle32_t	access:public
llvm::object::data_directory::Size	COFF.h	/^  support::ulittle32_t Size;$/;"	kind:m	struct:llvm::object::data_directory	typeref:typename:support::ulittle32_t	access:public
llvm::object::debug_directory	COFF.h	/^struct debug_directory {$/;"	kind:s	namespace:llvm::object
llvm::object::debug_directory::AddressOfRawData	COFF.h	/^  support::ulittle32_t AddressOfRawData;$/;"	kind:m	struct:llvm::object::debug_directory	typeref:typename:support::ulittle32_t	access:public
llvm::object::debug_directory::Characteristics	COFF.h	/^  support::ulittle32_t Characteristics;$/;"	kind:m	struct:llvm::object::debug_directory	typeref:typename:support::ulittle32_t	access:public
llvm::object::debug_directory::MajorVersion	COFF.h	/^  support::ulittle16_t MajorVersion;$/;"	kind:m	struct:llvm::object::debug_directory	typeref:typename:support::ulittle16_t	access:public
llvm::object::debug_directory::MinorVersion	COFF.h	/^  support::ulittle16_t MinorVersion;$/;"	kind:m	struct:llvm::object::debug_directory	typeref:typename:support::ulittle16_t	access:public
llvm::object::debug_directory::PointerToRawData	COFF.h	/^  support::ulittle32_t PointerToRawData;$/;"	kind:m	struct:llvm::object::debug_directory	typeref:typename:support::ulittle32_t	access:public
llvm::object::debug_directory::SizeOfData	COFF.h	/^  support::ulittle32_t SizeOfData;$/;"	kind:m	struct:llvm::object::debug_directory	typeref:typename:support::ulittle32_t	access:public
llvm::object::debug_directory::TimeDateStamp	COFF.h	/^  support::ulittle32_t TimeDateStamp;$/;"	kind:m	struct:llvm::object::debug_directory	typeref:typename:support::ulittle32_t	access:public
llvm::object::debug_directory::Type	COFF.h	/^  support::ulittle32_t Type;$/;"	kind:m	struct:llvm::object::debug_directory	typeref:typename:support::ulittle32_t	access:public
llvm::object::delay_import_directory_iterator	COFF.h	/^    delay_import_directory_iterator;$/;"	kind:t	namespace:llvm::object	typeref:typename:content_iterator<DelayImportDirectoryEntryRef>
llvm::object::delay_import_directory_table_entry	COFF.h	/^struct delay_import_directory_table_entry {$/;"	kind:s	namespace:llvm::object
llvm::object::delay_import_directory_table_entry::Attributes	COFF.h	/^  support::ulittle32_t Attributes;$/;"	kind:m	struct:llvm::object::delay_import_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
llvm::object::delay_import_directory_table_entry::BoundDelayImportTable	COFF.h	/^  support::ulittle32_t BoundDelayImportTable;$/;"	kind:m	struct:llvm::object::delay_import_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
llvm::object::delay_import_directory_table_entry::DelayImportAddressTable	COFF.h	/^  support::ulittle32_t DelayImportAddressTable;$/;"	kind:m	struct:llvm::object::delay_import_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
llvm::object::delay_import_directory_table_entry::DelayImportNameTable	COFF.h	/^  support::ulittle32_t DelayImportNameTable;$/;"	kind:m	struct:llvm::object::delay_import_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
llvm::object::delay_import_directory_table_entry::ModuleHandle	COFF.h	/^  support::ulittle32_t ModuleHandle;$/;"	kind:m	struct:llvm::object::delay_import_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
llvm::object::delay_import_directory_table_entry::Name	COFF.h	/^  support::ulittle32_t Name;$/;"	kind:m	struct:llvm::object::delay_import_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
llvm::object::delay_import_directory_table_entry::TimeStamp	COFF.h	/^  support::ulittle32_t TimeStamp;$/;"	kind:m	struct:llvm::object::delay_import_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
llvm::object::delay_import_directory_table_entry::UnloadDelayImportTable	COFF.h	/^  support::ulittle32_t UnloadDelayImportTable;$/;"	kind:m	struct:llvm::object::delay_import_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
llvm::object::dice_iterator	MachO.h	/^typedef content_iterator<DiceRef> dice_iterator;$/;"	kind:t	namespace:llvm::object	typeref:typename:content_iterator<DiceRef>
llvm::object::dos_header	COFF.h	/^struct dos_header {$/;"	kind:s	namespace:llvm::object
llvm::object::dos_header::AddressOfNewExeHeader	COFF.h	/^  support::ulittle32_t AddressOfNewExeHeader;$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::dos_header::AddressOfRelocationTable	COFF.h	/^  support::ulittle16_t AddressOfRelocationTable;$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::dos_header::Checksum	COFF.h	/^  support::ulittle16_t Checksum;$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::dos_header::FileSizeInPages	COFF.h	/^  support::ulittle16_t FileSizeInPages;$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::dos_header::HeaderSizeInParagraphs	COFF.h	/^  support::ulittle16_t HeaderSizeInParagraphs;$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::dos_header::InitialIP	COFF.h	/^  support::ulittle16_t InitialIP;$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::dos_header::InitialRelativeCS	COFF.h	/^  support::ulittle16_t InitialRelativeCS;$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::dos_header::InitialRelativeSS	COFF.h	/^  support::ulittle16_t InitialRelativeSS;$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::dos_header::InitialSP	COFF.h	/^  support::ulittle16_t InitialSP;$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::dos_header::Magic	COFF.h	/^  char                 Magic[2];$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:char[2]	access:public
llvm::object::dos_header::MaximumExtraParagraphs	COFF.h	/^  support::ulittle16_t MaximumExtraParagraphs;$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::dos_header::MinimumExtraParagraphs	COFF.h	/^  support::ulittle16_t MinimumExtraParagraphs;$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::dos_header::NumberOfRelocationItems	COFF.h	/^  support::ulittle16_t NumberOfRelocationItems;$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::dos_header::OEMid	COFF.h	/^  support::ulittle16_t OEMid;$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::dos_header::OEMinfo	COFF.h	/^  support::ulittle16_t OEMinfo;$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::dos_header::OverlayNumber	COFF.h	/^  support::ulittle16_t OverlayNumber;$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::dos_header::Reserved	COFF.h	/^  support::ulittle16_t Reserved[4];$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle16_t[4]	access:public
llvm::object::dos_header::Reserved2	COFF.h	/^  support::ulittle16_t Reserved2[10];$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle16_t[10]	access:public
llvm::object::dos_header::UsedBytesInTheLastPage	COFF.h	/^  support::ulittle16_t UsedBytesInTheLastPage;$/;"	kind:m	struct:llvm::object::dos_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::elf_relocation_iterator	ELFObjectFile.h	/^class elf_relocation_iterator : public relocation_iterator {$/;"	kind:c	namespace:llvm::object	inherits:relocation_iterator
llvm::object::elf_relocation_iterator::elf_relocation_iterator	ELFObjectFile.h	/^  elf_relocation_iterator(const relocation_iterator &B)$/;"	kind:f	class:llvm::object::elf_relocation_iterator	access:public	signature:(const relocation_iterator & B)
llvm::object::elf_relocation_iterator::operator *	ELFObjectFile.h	/^  const ELFRelocationRef &operator*() const {$/;"	kind:f	class:llvm::object::elf_relocation_iterator	typeref:typename:const ELFRelocationRef &	access:public	signature:() const
llvm::object::elf_relocation_iterator::operator ->	ELFObjectFile.h	/^  const ELFRelocationRef *operator->() const {$/;"	kind:f	class:llvm::object::elf_relocation_iterator	typeref:typename:const ELFRelocationRef *	access:public	signature:() const
llvm::object::elf_section_iterator	ELFObjectFile.h	/^class elf_section_iterator : public section_iterator {$/;"	kind:c	namespace:llvm::object	inherits:section_iterator
llvm::object::elf_section_iterator::elf_section_iterator	ELFObjectFile.h	/^  elf_section_iterator(const section_iterator &B) : section_iterator(B) {$/;"	kind:f	class:llvm::object::elf_section_iterator	access:public	signature:(const section_iterator & B)
llvm::object::elf_section_iterator::operator *	ELFObjectFile.h	/^  const ELFSectionRef &operator*() const {$/;"	kind:f	class:llvm::object::elf_section_iterator	typeref:typename:const ELFSectionRef &	access:public	signature:() const
llvm::object::elf_section_iterator::operator ->	ELFObjectFile.h	/^  const ELFSectionRef *operator->() const {$/;"	kind:f	class:llvm::object::elf_section_iterator	typeref:typename:const ELFSectionRef *	access:public	signature:() const
llvm::object::elf_symbol_iterator	ELFObjectFile.h	/^class elf_symbol_iterator : public symbol_iterator {$/;"	kind:c	namespace:llvm::object	inherits:symbol_iterator
llvm::object::elf_symbol_iterator::elf_symbol_iterator	ELFObjectFile.h	/^  elf_symbol_iterator(const basic_symbol_iterator &B)$/;"	kind:f	class:llvm::object::elf_symbol_iterator	access:public	signature:(const basic_symbol_iterator & B)
llvm::object::elf_symbol_iterator::operator *	ELFObjectFile.h	/^  const ELFSymbolRef &operator*() const {$/;"	kind:f	class:llvm::object::elf_symbol_iterator	typeref:typename:const ELFSymbolRef &	access:public	signature:() const
llvm::object::elf_symbol_iterator::operator ->	ELFObjectFile.h	/^  const ELFSymbolRef *operator->() const {$/;"	kind:f	class:llvm::object::elf_symbol_iterator	typeref:typename:const ELFSymbolRef *	access:public	signature:() const
llvm::object::export_address_table_entry	COFF.h	/^union export_address_table_entry {$/;"	kind:u	namespace:llvm::object
llvm::object::export_address_table_entry::ExportRVA	COFF.h	/^  support::ulittle32_t ExportRVA;$/;"	kind:m	union:llvm::object::export_address_table_entry	typeref:typename:support::ulittle32_t	access:public
llvm::object::export_address_table_entry::ForwarderRVA	COFF.h	/^  support::ulittle32_t ForwarderRVA;$/;"	kind:m	union:llvm::object::export_address_table_entry	typeref:typename:support::ulittle32_t	access:public
llvm::object::export_directory_iterator	COFF.h	/^typedef content_iterator<ExportDirectoryEntryRef> export_directory_iterator;$/;"	kind:t	namespace:llvm::object	typeref:typename:content_iterator<ExportDirectoryEntryRef>
llvm::object::export_directory_table_entry	COFF.h	/^struct export_directory_table_entry {$/;"	kind:s	namespace:llvm::object
llvm::object::export_directory_table_entry::AddressTableEntries	COFF.h	/^  support::ulittle32_t AddressTableEntries;$/;"	kind:m	struct:llvm::object::export_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
llvm::object::export_directory_table_entry::ExportAddressTableRVA	COFF.h	/^  support::ulittle32_t ExportAddressTableRVA;$/;"	kind:m	struct:llvm::object::export_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
llvm::object::export_directory_table_entry::ExportFlags	COFF.h	/^  support::ulittle32_t ExportFlags;$/;"	kind:m	struct:llvm::object::export_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
llvm::object::export_directory_table_entry::MajorVersion	COFF.h	/^  support::ulittle16_t MajorVersion;$/;"	kind:m	struct:llvm::object::export_directory_table_entry	typeref:typename:support::ulittle16_t	access:public
llvm::object::export_directory_table_entry::MinorVersion	COFF.h	/^  support::ulittle16_t MinorVersion;$/;"	kind:m	struct:llvm::object::export_directory_table_entry	typeref:typename:support::ulittle16_t	access:public
llvm::object::export_directory_table_entry::NamePointerRVA	COFF.h	/^  support::ulittle32_t NamePointerRVA;$/;"	kind:m	struct:llvm::object::export_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
llvm::object::export_directory_table_entry::NameRVA	COFF.h	/^  support::ulittle32_t NameRVA;$/;"	kind:m	struct:llvm::object::export_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
llvm::object::export_directory_table_entry::NumberOfNamePointers	COFF.h	/^  support::ulittle32_t NumberOfNamePointers;$/;"	kind:m	struct:llvm::object::export_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
llvm::object::export_directory_table_entry::OrdinalBase	COFF.h	/^  support::ulittle32_t OrdinalBase;$/;"	kind:m	struct:llvm::object::export_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
llvm::object::export_directory_table_entry::OrdinalTableRVA	COFF.h	/^  support::ulittle32_t OrdinalTableRVA;$/;"	kind:m	struct:llvm::object::export_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
llvm::object::export_directory_table_entry::TimeDateStamp	COFF.h	/^  support::ulittle32_t TimeDateStamp;$/;"	kind:m	struct:llvm::object::export_directory_table_entry	typeref:typename:support::ulittle32_t	access:public
llvm::object::export_iterator	MachO.h	/^typedef content_iterator<ExportEntry> export_iterator;$/;"	kind:t	namespace:llvm::object	typeref:typename:content_iterator<ExportEntry>
llvm::object::export_name_pointer_table_entry	COFF.h	/^typedef support::ulittle32_t export_name_pointer_table_entry;$/;"	kind:t	namespace:llvm::object	typeref:typename:support::ulittle32_t
llvm::object::export_ordinal_table_entry	COFF.h	/^typedef support::ulittle16_t export_ordinal_table_entry;$/;"	kind:t	namespace:llvm::object	typeref:typename:support::ulittle16_t
llvm::object::getELFRelocationTypeName	ELF.h	/^StringRef getELFRelocationTypeName(uint32_t Machine, uint32_t Type);$/;"	kind:p	namespace:llvm::object	typeref:typename:StringRef	signature:(uint32_t Machine,uint32_t Type)
llvm::object::getElfArchType	ELF.h	/^getElfArchType(StringRef Object) {$/;"	kind:f	namespace:llvm::object	typeref:typename:std::pair<unsigned char,unsigned char>	signature:(StringRef Object)
llvm::object::getExtendedSymbolTableIndex	ELF.h	/^getExtendedSymbolTableIndex(const typename ELFT::Sym *Sym,$/;"	kind:f	namespace:llvm::object	typeref:typename:Expected<uint32_t>	signature:(const typename ELFT::Sym * Sym,const typename ELFT::Sym * FirstSym,ArrayRef<typename ELFT::Word> ShndxTable)
llvm::object::getSection	ELF.h	/^getSection(typename ELFT::ShdrRange Sections, uint32_t Index) {$/;"	kind:f	namespace:llvm::object	typeref:typename:Expected<const typename ELFT::Shdr * >	signature:(typename ELFT::ShdrRange Sections,uint32_t Index)
llvm::object::getSymbol	ELF.h	/^getSymbol(typename ELFT::SymRange Symbols, uint32_t Index) {$/;"	kind:f	namespace:llvm::object	typeref:typename:Expected<const typename ELFT::Sym * >	signature:(typename ELFT::SymRange Symbols,uint32_t Index)
llvm::object::hashSysV	ELF.h	/^inline unsigned hashSysV(StringRef SymbolName) {$/;"	kind:f	namespace:llvm::object	typeref:typename:unsigned	signature:(StringRef SymbolName)
llvm::object::import_directory_iterator	COFF.h	/^typedef content_iterator<ImportDirectoryEntryRef> import_directory_iterator;$/;"	kind:t	namespace:llvm::object	typeref:typename:content_iterator<ImportDirectoryEntryRef>
llvm::object::import_lookup_table_entry	COFF.h	/^struct import_lookup_table_entry {$/;"	kind:s	namespace:llvm::object
llvm::object::import_lookup_table_entry32	COFF.h	/^    import_lookup_table_entry32;$/;"	kind:t	namespace:llvm::object	typeref:typename:import_lookup_table_entry<support::little32_t>
llvm::object::import_lookup_table_entry64	COFF.h	/^    import_lookup_table_entry64;$/;"	kind:t	namespace:llvm::object	typeref:typename:import_lookup_table_entry<support::little64_t>
llvm::object::import_lookup_table_entry::Data	COFF.h	/^  IntTy Data;$/;"	kind:m	struct:llvm::object::import_lookup_table_entry	typeref:typename:IntTy	access:public
llvm::object::import_lookup_table_entry::getHintNameRVA	COFF.h	/^  uint32_t getHintNameRVA() const {$/;"	kind:f	struct:llvm::object::import_lookup_table_entry	typeref:typename:uint32_t	access:public	signature:() const
llvm::object::import_lookup_table_entry::getOrdinal	COFF.h	/^  uint16_t getOrdinal() const {$/;"	kind:f	struct:llvm::object::import_lookup_table_entry	typeref:typename:uint16_t	access:public	signature:() const
llvm::object::import_lookup_table_entry::isOrdinal	COFF.h	/^  bool isOrdinal() const { return Data < 0; }$/;"	kind:f	struct:llvm::object::import_lookup_table_entry	typeref:typename:bool	access:public	signature:() const
llvm::object::imported_symbol_iterator	COFF.h	/^typedef content_iterator<ImportedSymbolRef> imported_symbol_iterator;$/;"	kind:t	namespace:llvm::object	typeref:typename:content_iterator<ImportedSymbolRef>
llvm::object::isNotObjectErrorInvalidFileType	Error.h	/^Error isNotObjectErrorInvalidFileType(llvm::Error Err);$/;"	kind:p	namespace:llvm::object	typeref:typename:Error	signature:(llvm::Error Err)
llvm::object::make_error_code	Error.h	/^inline std::error_code make_error_code(object_error e) {$/;"	kind:f	namespace:llvm::object	typeref:typename:std::error_code	signature:(object_error e)
llvm::object::object_category	Error.h	/^const std::error_category &object_category();$/;"	kind:p	namespace:llvm::object	typeref:typename:const std::error_category &	signature:()
llvm::object::object_error	Error.h	/^enum class object_error {$/;"	kind:g	namespace:llvm::object
llvm::object::operator !=	SymbolicFile.h	/^inline bool operator!=(const DataRefImpl &a, const DataRefImpl &b) {$/;"	kind:f	namespace:llvm::object	typeref:typename:bool	signature:(const DataRefImpl & a,const DataRefImpl & b)
llvm::object::operator <	SymbolicFile.h	/^inline bool operator<(const DataRefImpl &a, const DataRefImpl &b) {$/;"	kind:f	namespace:llvm::object	typeref:typename:bool	signature:(const DataRefImpl & a,const DataRefImpl & b)
llvm::object::operator <<	SymbolicFile.h	/^OStream& operator<<(OStream &OS, const DataRefImpl &D) {$/;"	kind:f	namespace:llvm::object	typeref:typename:OStream &	signature:(OStream & OS,const DataRefImpl & D)
llvm::object::operator ==	SymbolicFile.h	/^inline bool operator==(const DataRefImpl &a, const DataRefImpl &b) {$/;"	kind:f	namespace:llvm::object	typeref:typename:bool	signature:(const DataRefImpl & a,const DataRefImpl & b)
llvm::object::pe32_header	COFF.h	/^struct pe32_header {$/;"	kind:s	namespace:llvm::object
llvm::object::pe32_header::AddressOfEntryPoint	COFF.h	/^  support::ulittle32_t AddressOfEntryPoint;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::pe32_header::BaseOfCode	COFF.h	/^  support::ulittle32_t BaseOfCode;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::pe32_header::BaseOfData	COFF.h	/^  support::ulittle32_t BaseOfData;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::pe32_header::CheckSum	COFF.h	/^  support::ulittle32_t CheckSum;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::pe32_header::DLLCharacteristics	COFF.h	/^  support::ulittle16_t DLLCharacteristics;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::pe32_header::FileAlignment	COFF.h	/^  support::ulittle32_t FileAlignment;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::pe32_header::ImageBase	COFF.h	/^  support::ulittle32_t ImageBase;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::pe32_header::LoaderFlags	COFF.h	/^  support::ulittle32_t LoaderFlags;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::pe32_header::Magic	COFF.h	/^  support::ulittle16_t Magic;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::pe32_header::MajorImageVersion	COFF.h	/^  support::ulittle16_t MajorImageVersion;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::pe32_header::MajorLinkerVersion	COFF.h	/^  uint8_t MajorLinkerVersion;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:uint8_t	access:public
llvm::object::pe32_header::MajorOperatingSystemVersion	COFF.h	/^  support::ulittle16_t MajorOperatingSystemVersion;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::pe32_header::MajorSubsystemVersion	COFF.h	/^  support::ulittle16_t MajorSubsystemVersion;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::pe32_header::MinorImageVersion	COFF.h	/^  support::ulittle16_t MinorImageVersion;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::pe32_header::MinorLinkerVersion	COFF.h	/^  uint8_t MinorLinkerVersion;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:uint8_t	access:public
llvm::object::pe32_header::MinorOperatingSystemVersion	COFF.h	/^  support::ulittle16_t MinorOperatingSystemVersion;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::pe32_header::MinorSubsystemVersion	COFF.h	/^  support::ulittle16_t MinorSubsystemVersion;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::pe32_header::NumberOfRvaAndSize	COFF.h	/^  support::ulittle32_t NumberOfRvaAndSize;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::pe32_header::SectionAlignment	COFF.h	/^  support::ulittle32_t SectionAlignment;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::pe32_header::SizeOfCode	COFF.h	/^  support::ulittle32_t SizeOfCode;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::pe32_header::SizeOfHeaders	COFF.h	/^  support::ulittle32_t SizeOfHeaders;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::pe32_header::SizeOfHeapCommit	COFF.h	/^  support::ulittle32_t SizeOfHeapCommit;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::pe32_header::SizeOfHeapReserve	COFF.h	/^  support::ulittle32_t SizeOfHeapReserve;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::pe32_header::SizeOfImage	COFF.h	/^  support::ulittle32_t SizeOfImage;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::pe32_header::SizeOfInitializedData	COFF.h	/^  support::ulittle32_t SizeOfInitializedData;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::pe32_header::SizeOfStackCommit	COFF.h	/^  support::ulittle32_t SizeOfStackCommit;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::pe32_header::SizeOfStackReserve	COFF.h	/^  support::ulittle32_t SizeOfStackReserve;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::pe32_header::SizeOfUninitializedData	COFF.h	/^  support::ulittle32_t SizeOfUninitializedData;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::pe32_header::Subsystem	COFF.h	/^  support::ulittle16_t Subsystem;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::pe32_header::Win32VersionValue	COFF.h	/^  support::ulittle32_t Win32VersionValue;$/;"	kind:m	struct:llvm::object::pe32_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::pe32plus_header	COFF.h	/^struct pe32plus_header {$/;"	kind:s	namespace:llvm::object
llvm::object::pe32plus_header::AddressOfEntryPoint	COFF.h	/^  support::ulittle32_t AddressOfEntryPoint;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::pe32plus_header::BaseOfCode	COFF.h	/^  support::ulittle32_t BaseOfCode;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::pe32plus_header::CheckSum	COFF.h	/^  support::ulittle32_t CheckSum;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::pe32plus_header::DLLCharacteristics	COFF.h	/^  support::ulittle16_t DLLCharacteristics;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::pe32plus_header::FileAlignment	COFF.h	/^  support::ulittle32_t FileAlignment;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::pe32plus_header::ImageBase	COFF.h	/^  support::ulittle64_t ImageBase;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle64_t	access:public
llvm::object::pe32plus_header::LoaderFlags	COFF.h	/^  support::ulittle32_t LoaderFlags;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::pe32plus_header::Magic	COFF.h	/^  support::ulittle16_t Magic;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::pe32plus_header::MajorImageVersion	COFF.h	/^  support::ulittle16_t MajorImageVersion;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::pe32plus_header::MajorLinkerVersion	COFF.h	/^  uint8_t MajorLinkerVersion;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:uint8_t	access:public
llvm::object::pe32plus_header::MajorOperatingSystemVersion	COFF.h	/^  support::ulittle16_t MajorOperatingSystemVersion;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::pe32plus_header::MajorSubsystemVersion	COFF.h	/^  support::ulittle16_t MajorSubsystemVersion;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::pe32plus_header::MinorImageVersion	COFF.h	/^  support::ulittle16_t MinorImageVersion;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::pe32plus_header::MinorLinkerVersion	COFF.h	/^  uint8_t MinorLinkerVersion;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:uint8_t	access:public
llvm::object::pe32plus_header::MinorOperatingSystemVersion	COFF.h	/^  support::ulittle16_t MinorOperatingSystemVersion;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::pe32plus_header::MinorSubsystemVersion	COFF.h	/^  support::ulittle16_t MinorSubsystemVersion;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::pe32plus_header::NumberOfRvaAndSize	COFF.h	/^  support::ulittle32_t NumberOfRvaAndSize;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::pe32plus_header::SectionAlignment	COFF.h	/^  support::ulittle32_t SectionAlignment;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::pe32plus_header::SizeOfCode	COFF.h	/^  support::ulittle32_t SizeOfCode;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::pe32plus_header::SizeOfHeaders	COFF.h	/^  support::ulittle32_t SizeOfHeaders;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::pe32plus_header::SizeOfHeapCommit	COFF.h	/^  support::ulittle64_t SizeOfHeapCommit;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle64_t	access:public
llvm::object::pe32plus_header::SizeOfHeapReserve	COFF.h	/^  support::ulittle64_t SizeOfHeapReserve;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle64_t	access:public
llvm::object::pe32plus_header::SizeOfImage	COFF.h	/^  support::ulittle32_t SizeOfImage;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::pe32plus_header::SizeOfInitializedData	COFF.h	/^  support::ulittle32_t SizeOfInitializedData;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::pe32plus_header::SizeOfStackCommit	COFF.h	/^  support::ulittle64_t SizeOfStackCommit;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle64_t	access:public
llvm::object::pe32plus_header::SizeOfStackReserve	COFF.h	/^  support::ulittle64_t SizeOfStackReserve;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle64_t	access:public
llvm::object::pe32plus_header::SizeOfUninitializedData	COFF.h	/^  support::ulittle32_t SizeOfUninitializedData;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::pe32plus_header::Subsystem	COFF.h	/^  support::ulittle16_t Subsystem;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle16_t	access:public
llvm::object::pe32plus_header::Win32VersionValue	COFF.h	/^  support::ulittle32_t Win32VersionValue;$/;"	kind:m	struct:llvm::object::pe32plus_header	typeref:typename:support::ulittle32_t	access:public
llvm::object::rebase_iterator	MachO.h	/^typedef content_iterator<MachORebaseEntry> rebase_iterator;$/;"	kind:t	namespace:llvm::object	typeref:typename:content_iterator<MachORebaseEntry>
llvm::object::relocation_iterator	ObjectFile.h	/^typedef content_iterator<RelocationRef> relocation_iterator;$/;"	kind:t	namespace:llvm::object	typeref:typename:content_iterator<RelocationRef>
llvm::object::section_iterator	ObjectFile.h	/^typedef content_iterator<SectionRef> section_iterator;$/;"	kind:t	namespace:llvm::object	typeref:typename:content_iterator<SectionRef>
llvm::object::symbol_iterator	ObjectFile.h	/^class symbol_iterator : public basic_symbol_iterator {$/;"	kind:c	namespace:llvm::object	inherits:basic_symbol_iterator
llvm::object::symbol_iterator::operator *	ObjectFile.h	/^  const SymbolRef &operator*() const {$/;"	kind:f	class:llvm::object::symbol_iterator	typeref:typename:const SymbolRef &	access:public	signature:() const
llvm::object::symbol_iterator::operator ->	ObjectFile.h	/^  const SymbolRef *operator->() const {$/;"	kind:f	class:llvm::object::symbol_iterator	typeref:typename:const SymbolRef *	access:public	signature:() const
llvm::object::symbol_iterator::symbol_iterator	ObjectFile.h	/^  symbol_iterator(SymbolRef Sym) : basic_symbol_iterator(Sym) {}$/;"	kind:f	class:llvm::object::symbol_iterator	access:public	signature:(SymbolRef Sym)
llvm::object::symbol_iterator::symbol_iterator	ObjectFile.h	/^  symbol_iterator(const basic_symbol_iterator &B)$/;"	kind:f	class:llvm::object::symbol_iterator	access:public	signature:(const basic_symbol_iterator & B)
llvm::parse_failed	Error.h	/^  parse_failed,$/;"	kind:e	enum:llvm::object::object_error	access:public
llvm::string_table_non_null_end	Error.h	/^  string_table_non_null_end,$/;"	kind:e	enum:llvm::object::object_error	access:public
llvm::unexpected_eof	Error.h	/^  unexpected_eof,$/;"	kind:e	enum:llvm::object::object_error	access:public
llvm::writeArchive	ArchiveWriter.h	/^writeArchive(StringRef ArcName, std::vector<NewArchiveMember> &NewMembers,$/;"	kind:p	namespace:llvm	typeref:typename:std::pair<StringRef,std::error_code>	signature:(StringRef ArcName,std::vector<NewArchiveMember> & NewMembers,bool WriteSymtab,object::Archive::Kind Kind,bool Deterministic,bool Thin,std::unique_ptr<MemoryBuffer> OldArchiveBuf=nullptr)
load_command_iterator	MachO.h	/^  typedef LoadCommandList::const_iterator load_command_iterator;$/;"	kind:t	class:llvm::object::MachOObjectFile	typeref:typename:LoadCommandList::const_iterator	access:public
load_commands	MachO.h	/^  iterator_range<load_command_iterator> load_commands() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:iterator_range<load_command_iterator>	access:public	signature:() const
location_begin	StackMapParser.h	/^    location_iterator location_begin() const {$/;"	kind:f	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:location_iterator	access:public	signature:() const
location_end	StackMapParser.h	/^    location_iterator location_end() const {$/;"	kind:f	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:location_iterator	access:public	signature:() const
location_iterator	StackMapParser.h	/^    typedef AccessorIterator<LocationAccessor> location_iterator;$/;"	kind:t	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:AccessorIterator<LocationAccessor>	access:public
locations	StackMapParser.h	/^    iterator_range<location_iterator> locations() const {$/;"	kind:f	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:iterator_range<location_iterator>	access:public	signature:() const
log	Error.h	/^  void log(raw_ostream &OS) const override;$/;"	kind:p	class:llvm::object::GenericBinaryError	typeref:typename:void	access:public	signature:(raw_ostream & OS) const
lookup_table_begin	COFF.h	/^  imported_symbol_iterator lookup_table_begin() const;$/;"	kind:p	class:llvm::object::ImportDirectoryEntryRef	typeref:typename:imported_symbol_iterator	access:public	signature:() const
lookup_table_end	COFF.h	/^  imported_symbol_iterator lookup_table_end() const;$/;"	kind:p	class:llvm::object::ImportDirectoryEntryRef	typeref:typename:imported_symbol_iterator	access:public	signature:() const
lookup_table_symbols	COFF.h	/^  iterator_range<imported_symbol_iterator> lookup_table_symbols() const;$/;"	kind:p	class:llvm::object::ImportDirectoryEntryRef	typeref:typename:iterator_range<imported_symbol_iterator>	access:public	signature:() const
make_error_code	Error.h	/^inline std::error_code make_error_code(object_error e) {$/;"	kind:f	namespace:llvm::object	typeref:typename:std::error_code	signature:(object_error e)
maskwords	ELFTypes.h	/^  Elf_Word maskwords;$/;"	kind:m	struct:llvm::object::Elf_GnuHash_Impl	typeref:typename:Elf_Word	access:public
moveNext	COFF.h	/^  void moveNext();$/;"	kind:p	class:llvm::object::BaseRelocRef	typeref:typename:void	access:public	signature:()
moveNext	COFF.h	/^  void moveNext();$/;"	kind:p	class:llvm::object::DelayImportDirectoryEntryRef	typeref:typename:void	access:public	signature:()
moveNext	COFF.h	/^  void moveNext();$/;"	kind:p	class:llvm::object::ExportDirectoryEntryRef	typeref:typename:void	access:public	signature:()
moveNext	COFF.h	/^  void moveNext();$/;"	kind:p	class:llvm::object::ImportDirectoryEntryRef	typeref:typename:void	access:public	signature:()
moveNext	COFF.h	/^  void moveNext();$/;"	kind:p	class:llvm::object::ImportedSymbolRef	typeref:typename:void	access:public	signature:()
moveNext	MachO.h	/^  void moveNext();$/;"	kind:p	class:llvm::object::DiceRef	typeref:typename:void	access:public	signature:()
moveNext	MachO.h	/^  void moveNext();$/;"	kind:p	class:llvm::object::ExportEntry	typeref:typename:void	access:public	signature:()
moveNext	MachO.h	/^  void moveNext();$/;"	kind:p	class:llvm::object::MachOBindEntry	typeref:typename:void	access:public	signature:()
moveNext	MachO.h	/^  void moveNext();$/;"	kind:p	class:llvm::object::MachORebaseEntry	typeref:typename:void	access:public	signature:()
moveNext	MachO.h	/^inline void DiceRef::moveNext() {$/;"	kind:f	class:llvm::object::DiceRef	typeref:typename:void	signature:()
moveNext	ObjectFile.h	/^  void moveNext();$/;"	kind:p	class:llvm::object::RelocationRef	typeref:typename:void	access:public	signature:()
moveNext	ObjectFile.h	/^  void moveNext();$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:void	access:public	signature:()
moveNext	ObjectFile.h	/^inline void RelocationRef::moveNext() {$/;"	kind:f	class:llvm::object::RelocationRef	typeref:typename:void	signature:()
moveNext	ObjectFile.h	/^inline void SectionRef::moveNext() {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:void	signature:()
moveNext	SymbolicFile.h	/^  void moveNext();$/;"	kind:p	class:llvm::object::BasicSymbolRef	typeref:typename:void	access:public	signature:()
moveNext	SymbolicFile.h	/^inline void BasicSymbolRef::moveNext() {$/;"	kind:f	class:llvm::object::BasicSymbolRef	typeref:typename:void	signature:()
moveRelocationNext	COFF.h	/^  void moveRelocationNext(DataRefImpl &Rel) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:void	access:protected	signature:(DataRefImpl & Rel) const
moveRelocationNext	ELFObjectFile.h	/^  void moveRelocationNext(DataRefImpl &Rel) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:void	access:protected	signature:(DataRefImpl & Rel) const
moveRelocationNext	ELFObjectFile.h	/^void ELFObjectFile<ELFT>::moveRelocationNext(DataRefImpl &Rel) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:void	signature:(DataRefImpl & Rel) const
moveRelocationNext	MachO.h	/^  void moveRelocationNext(DataRefImpl &Rel) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:void	access:public	signature:(DataRefImpl & Rel) const
moveRelocationNext	ObjectFile.h	/^  virtual void moveRelocationNext(DataRefImpl &Rel) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:void	access:protected	signature:(DataRefImpl & Rel) const
moveSectionNext	COFF.h	/^  void moveSectionNext(DataRefImpl &Sec) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:void	access:protected	signature:(DataRefImpl & Sec) const
moveSectionNext	ELFObjectFile.h	/^  void moveSectionNext(DataRefImpl &Sec) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:void	access:protected	signature:(DataRefImpl & Sec) const
moveSectionNext	ELFObjectFile.h	/^void ELFObjectFile<ELFT>::moveSectionNext(DataRefImpl &Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:void	signature:(DataRefImpl & Sec) const
moveSectionNext	MachO.h	/^  void moveSectionNext(DataRefImpl &Sec) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:void	access:public	signature:(DataRefImpl & Sec) const
moveSectionNext	ObjectFile.h	/^  virtual void moveSectionNext(DataRefImpl &Sec) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:void	access:protected	signature:(DataRefImpl & Sec) const
moveSymbolNext	COFF.h	/^  void moveSymbolNext(DataRefImpl &Symb) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:void	access:protected	signature:(DataRefImpl & Symb) const
moveSymbolNext	COFFImportFile.h	/^  void moveSymbolNext(DataRefImpl &Symb) const override { ++Symb.p; }$/;"	kind:f	class:llvm::object::COFFImportFile	typeref:typename:void	access:public	signature:(DataRefImpl & Symb) const
moveSymbolNext	ELFObjectFile.h	/^  void moveSymbolNext(DataRefImpl &Symb) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:void	access:protected	signature:(DataRefImpl & Symb) const
moveSymbolNext	ELFObjectFile.h	/^void ELFObjectFile<ELFT>::moveSymbolNext(DataRefImpl &Sym) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:void	signature:(DataRefImpl & Sym) const
moveSymbolNext	IRObjectFile.h	/^  void moveSymbolNext(DataRefImpl &Symb) const override;$/;"	kind:p	class:llvm::object::IRObjectFile	typeref:typename:void	access:public	signature:(DataRefImpl & Symb) const
moveSymbolNext	MachO.h	/^  void moveSymbolNext(DataRefImpl &Symb) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:void	access:public	signature:(DataRefImpl & Symb) const
moveSymbolNext	ModuleSummaryIndexObjectFile.h	/^  void moveSymbolNext(DataRefImpl &Symb) const override {$/;"	kind:f	class:llvm::object::ModuleSummaryIndexObjectFile	typeref:typename:void	access:public	signature:(DataRefImpl & Symb) const
moveSymbolNext	SymbolicFile.h	/^  virtual void moveSymbolNext(DataRefImpl &Symb) const = 0;$/;"	kind:p	class:llvm::object::SymbolicFile	typeref:typename:void	access:public	signature:(DataRefImpl & Symb) const
moveToEnd	MachO.h	/^  void moveToEnd();$/;"	kind:p	class:llvm::object::ExportEntry	typeref:typename:void	access:private	signature:()
moveToEnd	MachO.h	/^  void moveToEnd();$/;"	kind:p	class:llvm::object::MachOBindEntry	typeref:typename:void	access:private	signature:()
moveToEnd	MachO.h	/^  void moveToEnd();$/;"	kind:p	class:llvm::object::MachORebaseEntry	typeref:typename:void	access:private	signature:()
moveToFirst	MachO.h	/^  void moveToFirst();$/;"	kind:p	class:llvm::object::ExportEntry	typeref:typename:void	access:private	signature:()
moveToFirst	MachO.h	/^  void moveToFirst();$/;"	kind:p	class:llvm::object::MachOBindEntry	typeref:typename:void	access:private	signature:()
moveToFirst	MachO.h	/^  void moveToFirst();$/;"	kind:p	class:llvm::object::MachORebaseEntry	typeref:typename:void	access:private	signature:()
name	MachO.h	/^  StringRef name() const;$/;"	kind:p	class:llvm::object::ExportEntry	typeref:typename:StringRef	access:public	signature:() const
nchain	ELFTypes.h	/^  Elf_Word nchain;$/;"	kind:m	struct:llvm::object::Elf_Hash_Impl	typeref:typename:Elf_Word	access:public
next	StackMapParser.h	/^    ConstantAccessor next() const {$/;"	kind:f	class:llvm::StackMapV2Parser::ConstantAccessor	typeref:typename:ConstantAccessor	access:private	signature:() const
next	StackMapParser.h	/^    FunctionAccessor next() const {$/;"	kind:f	class:llvm::StackMapV2Parser::FunctionAccessor	typeref:typename:FunctionAccessor	access:private	signature:() const
next	StackMapParser.h	/^    LiveOutAccessor next() const {$/;"	kind:f	class:llvm::StackMapV2Parser::LiveOutAccessor	typeref:typename:LiveOutAccessor	access:private	signature:() const
next	StackMapParser.h	/^    LocationAccessor next() const {$/;"	kind:f	class:llvm::StackMapV2Parser::LocationAccessor	typeref:typename:LocationAccessor	access:private	signature:() const
next	StackMapParser.h	/^    RecordAccessor next() const {$/;"	kind:f	class:llvm::StackMapV2Parser::RecordAccessor	typeref:typename:RecordAccessor	access:private	signature:() const
nodeOffset	MachO.h	/^  uint32_t nodeOffset() const;$/;"	kind:p	class:llvm::object::ExportEntry	typeref:typename:uint32_t	access:public	signature:() const
object	Archive.h	/^namespace object {$/;"	kind:n	namespace:llvm
object	Binary.h	/^namespace object {$/;"	kind:n	namespace:llvm
object	COFF.h	/^namespace object {$/;"	kind:n	namespace:llvm
object	COFFImportFile.h	/^namespace object {$/;"	kind:n	namespace:llvm
object	ELF.h	/^namespace object {$/;"	kind:n	namespace:llvm
object	ELFObjectFile.h	/^namespace object {$/;"	kind:n	namespace:llvm
object	ELFTypes.h	/^namespace object {$/;"	kind:n	namespace:llvm
object	Error.h	/^namespace object {$/;"	kind:n	namespace:llvm
object	IRObjectFile.h	/^namespace object {$/;"	kind:n	namespace:llvm
object	MachO.h	/^namespace object {$/;"	kind:n	namespace:llvm
object	MachOUniversal.h	/^namespace object {$/;"	kind:n	namespace:llvm
object	ModuleSummaryIndexObjectFile.h	/^namespace object {$/;"	kind:n	namespace:llvm
object	ObjectFile.h	/^namespace object {$/;"	kind:n	namespace:llvm
object	RelocVisitor.h	/^namespace object {$/;"	kind:n	namespace:llvm
object	SymbolSize.h	/^namespace object {$/;"	kind:n	namespace:llvm
object	SymbolicFile.h	/^namespace object {$/;"	kind:n	namespace:llvm
object_category	Error.h	/^const std::error_category &object_category();$/;"	kind:p	namespace:llvm::object	typeref:typename:const std::error_category &	signature:()
object_error	Error.h	/^enum class object_error {$/;"	kind:g	namespace:llvm::object
object_iterator	MachOUniversal.h	/^    object_iterator(const ObjectForArch &Obj) : Obj(Obj) {}$/;"	kind:f	class:llvm::object::MachOUniversalBinary::object_iterator	access:public	signature:(const ObjectForArch & Obj)
object_iterator	MachOUniversal.h	/^  class object_iterator {$/;"	kind:c	class:llvm::object::MachOUniversalBinary	access:public
objects	MachOUniversal.h	/^  iterator_range<object_iterator> objects() const {$/;"	kind:f	class:llvm::object::MachOUniversalBinary	typeref:typename:iterator_range<object_iterator>	access:public	signature:() const
operator !=	Archive.h	/^    bool operator!=(const child_iterator &other) const {$/;"	kind:f	class:llvm::object::Archive::child_iterator	typeref:typename:bool	access:public	signature:(const child_iterator & other) const
operator !=	Archive.h	/^    bool operator!=(const symbol_iterator &other) const {$/;"	kind:f	class:llvm::object::Archive::symbol_iterator	typeref:typename:bool	access:public	signature:(const symbol_iterator & other) const
operator !=	MachOUniversal.h	/^    bool operator!=(const object_iterator &Other) const {$/;"	kind:f	class:llvm::object::MachOUniversalBinary::object_iterator	typeref:typename:bool	access:public	signature:(const object_iterator & Other) const
operator !=	ObjectFile.h	/^  bool operator!=(const SectionRef &Other) const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:bool	access:public	signature:(const SectionRef & Other) const
operator !=	ObjectFile.h	/^inline bool SectionRef::operator!=(const SectionRef &Other) const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:bool	signature:(const SectionRef & Other) const
operator !=	StackMapParser.h	/^    bool operator!=(const AccessorIterator &Other) { return !(*this == Other); }$/;"	kind:f	class:llvm::StackMapV2Parser::AccessorIterator	typeref:typename:bool	access:public	signature:(const AccessorIterator & Other)
operator !=	SymbolicFile.h	/^  bool operator!=(const content_iterator &other) const {$/;"	kind:f	class:llvm::object::content_iterator	typeref:typename:bool	access:public	signature:(const content_iterator & other) const
operator !=	SymbolicFile.h	/^inline bool operator!=(const DataRefImpl &a, const DataRefImpl &b) {$/;"	kind:f	namespace:llvm::object	typeref:typename:bool	signature:(const DataRefImpl & a,const DataRefImpl & b)
operator *	Archive.h	/^    const Child &operator*() const { return C; }$/;"	kind:f	class:llvm::object::Archive::child_iterator	typeref:typename:const Child &	access:public	signature:() const
operator *	Archive.h	/^    const Symbol &operator*() const { return symbol; }$/;"	kind:f	class:llvm::object::Archive::symbol_iterator	typeref:typename:const Symbol &	access:public	signature:() const
operator *	ELFObjectFile.h	/^  const ELFRelocationRef &operator*() const {$/;"	kind:f	class:llvm::object::elf_relocation_iterator	typeref:typename:const ELFRelocationRef &	access:public	signature:() const
operator *	ELFObjectFile.h	/^  const ELFSectionRef &operator*() const {$/;"	kind:f	class:llvm::object::elf_section_iterator	typeref:typename:const ELFSectionRef &	access:public	signature:() const
operator *	ELFObjectFile.h	/^  const ELFSymbolRef &operator*() const {$/;"	kind:f	class:llvm::object::elf_symbol_iterator	typeref:typename:const ELFSymbolRef &	access:public	signature:() const
operator *	MachOUniversal.h	/^    const ObjectForArch &operator*() const { return Obj; }$/;"	kind:f	class:llvm::object::MachOUniversalBinary::object_iterator	typeref:typename:const ObjectForArch &	access:public	signature:() const
operator *	ObjectFile.h	/^  const SymbolRef &operator*() const {$/;"	kind:f	class:llvm::object::symbol_iterator	typeref:typename:const SymbolRef &	access:public	signature:() const
operator *	StackMapParser.h	/^    AccessorT& operator*() { return A; }$/;"	kind:f	class:llvm::StackMapV2Parser::AccessorIterator	typeref:typename:AccessorT &	access:public	signature:()
operator *	SymbolicFile.h	/^  const content_type &operator*() const { return Current; }$/;"	kind:f	class:llvm::object::content_iterator	typeref:typename:const content_type &	access:public	signature:() const
operator ++	Archive.h	/^    child_iterator &operator++() { \/\/ Preincrement$/;"	kind:f	class:llvm::object::Archive::child_iterator	typeref:typename:child_iterator &	access:public	signature:()
operator ++	Archive.h	/^    symbol_iterator& operator++() {  \/\/ Preincrement$/;"	kind:f	class:llvm::object::Archive::symbol_iterator	typeref:typename:symbol_iterator &	access:public	signature:()
operator ++	MachOUniversal.h	/^    object_iterator& operator++() {  \/\/ Preincrement$/;"	kind:f	class:llvm::object::MachOUniversalBinary::object_iterator	typeref:typename:object_iterator &	access:public	signature:()
operator ++	StackMapParser.h	/^    AccessorIterator operator++(int) {$/;"	kind:f	class:llvm::StackMapV2Parser::AccessorIterator	typeref:typename:AccessorIterator	access:public	signature:(int)
operator ++	StackMapParser.h	/^    AccessorIterator& operator++() { A = A.next(); return *this; }$/;"	kind:f	class:llvm::StackMapV2Parser::AccessorIterator	typeref:typename:AccessorIterator &	access:public	signature:()
operator ++	SymbolicFile.h	/^  content_iterator &operator++() { \/\/ preincrement$/;"	kind:f	class:llvm::object::content_iterator	typeref:typename:content_iterator &	access:public	signature:()
operator ->	Archive.h	/^    const Child *operator->() const { return &C; }$/;"	kind:f	class:llvm::object::Archive::child_iterator	typeref:typename:const Child *	access:public	signature:() const
operator ->	Archive.h	/^    const Symbol *operator->() const { return &symbol; }$/;"	kind:f	class:llvm::object::Archive::symbol_iterator	typeref:typename:const Symbol *	access:public	signature:() const
operator ->	ELFObjectFile.h	/^  const ELFRelocationRef *operator->() const {$/;"	kind:f	class:llvm::object::elf_relocation_iterator	typeref:typename:const ELFRelocationRef *	access:public	signature:() const
operator ->	ELFObjectFile.h	/^  const ELFSectionRef *operator->() const {$/;"	kind:f	class:llvm::object::elf_section_iterator	typeref:typename:const ELFSectionRef *	access:public	signature:() const
operator ->	ELFObjectFile.h	/^  const ELFSymbolRef *operator->() const {$/;"	kind:f	class:llvm::object::elf_symbol_iterator	typeref:typename:const ELFSymbolRef *	access:public	signature:() const
operator ->	MachOUniversal.h	/^    const ObjectForArch *operator->() const { return &Obj; }$/;"	kind:f	class:llvm::object::MachOUniversalBinary::object_iterator	typeref:typename:const ObjectForArch *	access:public	signature:() const
operator ->	ObjectFile.h	/^  const SymbolRef *operator->() const {$/;"	kind:f	class:llvm::object::symbol_iterator	typeref:typename:const SymbolRef *	access:public	signature:() const
operator ->	StackMapParser.h	/^    AccessorT* operator->() { return &A; }$/;"	kind:f	class:llvm::StackMapV2Parser::AccessorIterator	typeref:typename:AccessorT *	access:public	signature:()
operator ->	SymbolicFile.h	/^  const content_type *operator->() const { return &Current; }$/;"	kind:f	class:llvm::object::content_iterator	typeref:typename:const content_type *	access:public	signature:() const
operator <	COFF.h	/^  friend bool operator<(COFFSymbolRef A, COFFSymbolRef B) {$/;"	kind:f	class:llvm::object::COFFSymbolRef	typeref:typename:bool	access:public	signature:(COFFSymbolRef A,COFFSymbolRef B)
operator <	MachO.h	/^  bool operator<(const DiceRef &Other) const;$/;"	kind:p	class:llvm::object::DiceRef	typeref:typename:bool	access:public	signature:(const DiceRef & Other) const
operator <	MachO.h	/^inline bool DiceRef::operator<(const DiceRef &Other) const {$/;"	kind:f	class:llvm::object::DiceRef	typeref:typename:bool	signature:(const DiceRef & Other) const
operator <	ObjectFile.h	/^  bool operator<(const SectionRef &Other) const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:bool	access:public	signature:(const SectionRef & Other) const
operator <	ObjectFile.h	/^inline bool SectionRef::operator<(const SectionRef &Other) const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:bool	signature:(const SectionRef & Other) const
operator <	SymbolicFile.h	/^  bool operator<(const BasicSymbolRef &Other) const;$/;"	kind:p	class:llvm::object::BasicSymbolRef	typeref:typename:bool	access:public	signature:(const BasicSymbolRef & Other) const
operator <	SymbolicFile.h	/^inline bool BasicSymbolRef::operator<(const BasicSymbolRef &Other) const {$/;"	kind:f	class:llvm::object::BasicSymbolRef	typeref:typename:bool	signature:(const BasicSymbolRef & Other) const
operator <	SymbolicFile.h	/^inline bool operator<(const DataRefImpl &a, const DataRefImpl &b) {$/;"	kind:f	namespace:llvm::object	typeref:typename:bool	signature:(const DataRefImpl & a,const DataRefImpl & b)
operator <<	SymbolicFile.h	/^OStream& operator<<(OStream &OS, const DataRefImpl &D) {$/;"	kind:f	namespace:llvm::object	typeref:typename:OStream &	signature:(OStream & OS,const DataRefImpl & D)
operator =	Binary.h	/^  OwningBinary<T> &operator=(OwningBinary<T> &&Other);$/;"	kind:p	class:llvm::object::OwningBinary	typeref:typename:OwningBinary<T> &	access:public	signature:(OwningBinary<T> && Other)
operator =	Binary.h	/^OwningBinary<T> &OwningBinary<T>::operator=(OwningBinary &&Other) {$/;"	kind:f	class:llvm::object::OwningBinary	typeref:typename:OwningBinary<T> &	signature:(OwningBinary && Other)
operator ==	Archive.h	/^    bool operator ==(const Child &other) const {$/;"	kind:f	class:llvm::object::Archive::Child	typeref:typename:bool	access:public	signature:(const Child & other) const
operator ==	Archive.h	/^    bool operator ==(const Symbol &other) const {$/;"	kind:f	class:llvm::object::Archive::Symbol	typeref:typename:bool	access:public	signature:(const Symbol & other) const
operator ==	Archive.h	/^    bool operator==(const child_iterator &other) const {$/;"	kind:f	class:llvm::object::Archive::child_iterator	typeref:typename:bool	access:public	signature:(const child_iterator & other) const
operator ==	Archive.h	/^    bool operator==(const symbol_iterator &other) const {$/;"	kind:f	class:llvm::object::Archive::symbol_iterator	typeref:typename:bool	access:public	signature:(const symbol_iterator & other) const
operator ==	COFF.h	/^  bool operator==(const BaseRelocRef &Other) const;$/;"	kind:p	class:llvm::object::BaseRelocRef	typeref:typename:bool	access:public	signature:(const BaseRelocRef & Other) const
operator ==	COFF.h	/^  bool operator==(const DelayImportDirectoryEntryRef &Other) const;$/;"	kind:p	class:llvm::object::DelayImportDirectoryEntryRef	typeref:typename:bool	access:public	signature:(const DelayImportDirectoryEntryRef & Other) const
operator ==	COFF.h	/^  bool operator==(const ExportDirectoryEntryRef &Other) const;$/;"	kind:p	class:llvm::object::ExportDirectoryEntryRef	typeref:typename:bool	access:public	signature:(const ExportDirectoryEntryRef & Other) const
operator ==	COFF.h	/^  bool operator==(const ImportDirectoryEntryRef &Other) const;$/;"	kind:p	class:llvm::object::ImportDirectoryEntryRef	typeref:typename:bool	access:public	signature:(const ImportDirectoryEntryRef & Other) const
operator ==	COFF.h	/^  bool operator==(const ImportedSymbolRef &Other) const;$/;"	kind:p	class:llvm::object::ImportedSymbolRef	typeref:typename:bool	access:public	signature:(const ImportedSymbolRef & Other) const
operator ==	MachO.h	/^  bool operator==(const DiceRef &Other) const;$/;"	kind:p	class:llvm::object::DiceRef	typeref:typename:bool	access:public	signature:(const DiceRef & Other) const
operator ==	MachO.h	/^  bool operator==(const ExportEntry &) const;$/;"	kind:p	class:llvm::object::ExportEntry	typeref:typename:bool	access:public	signature:(const ExportEntry &) const
operator ==	MachO.h	/^  bool operator==(const MachOBindEntry &) const;$/;"	kind:p	class:llvm::object::MachOBindEntry	typeref:typename:bool	access:public	signature:(const MachOBindEntry &) const
operator ==	MachO.h	/^  bool operator==(const MachORebaseEntry &) const;$/;"	kind:p	class:llvm::object::MachORebaseEntry	typeref:typename:bool	access:public	signature:(const MachORebaseEntry &) const
operator ==	MachO.h	/^inline bool DiceRef::operator==(const DiceRef &Other) const {$/;"	kind:f	class:llvm::object::DiceRef	typeref:typename:bool	signature:(const DiceRef & Other) const
operator ==	MachOUniversal.h	/^    bool operator==(const ObjectForArch &Other) const {$/;"	kind:f	class:llvm::object::MachOUniversalBinary::ObjectForArch	typeref:typename:bool	access:public	signature:(const ObjectForArch & Other) const
operator ==	MachOUniversal.h	/^    bool operator==(const object_iterator &Other) const {$/;"	kind:f	class:llvm::object::MachOUniversalBinary::object_iterator	typeref:typename:bool	access:public	signature:(const object_iterator & Other) const
operator ==	ObjectFile.h	/^  bool operator==(const RelocationRef &Other) const;$/;"	kind:p	class:llvm::object::RelocationRef	typeref:typename:bool	access:public	signature:(const RelocationRef & Other) const
operator ==	ObjectFile.h	/^  bool operator==(const SectionRef &Other) const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:bool	access:public	signature:(const SectionRef & Other) const
operator ==	ObjectFile.h	/^inline bool RelocationRef::operator==(const RelocationRef &Other) const {$/;"	kind:f	class:llvm::object::RelocationRef	typeref:typename:bool	signature:(const RelocationRef & Other) const
operator ==	ObjectFile.h	/^inline bool SectionRef::operator==(const SectionRef &Other) const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:bool	signature:(const SectionRef & Other) const
operator ==	StackMapParser.h	/^    bool operator==(const AccessorIterator &Other) {$/;"	kind:f	class:llvm::StackMapV2Parser::AccessorIterator	typeref:typename:bool	access:public	signature:(const AccessorIterator & Other)
operator ==	SymbolicFile.h	/^  bool operator==(const BasicSymbolRef &Other) const;$/;"	kind:p	class:llvm::object::BasicSymbolRef	typeref:typename:bool	access:public	signature:(const BasicSymbolRef & Other) const
operator ==	SymbolicFile.h	/^  bool operator==(const content_iterator &other) const {$/;"	kind:f	class:llvm::object::content_iterator	typeref:typename:bool	access:public	signature:(const content_iterator & other) const
operator ==	SymbolicFile.h	/^inline bool BasicSymbolRef::operator==(const BasicSymbolRef &Other) const {$/;"	kind:f	class:llvm::object::BasicSymbolRef	typeref:typename:bool	signature:(const BasicSymbolRef & Other) const
operator ==	SymbolicFile.h	/^inline bool operator==(const DataRefImpl &a, const DataRefImpl &b) {$/;"	kind:f	namespace:llvm::object	typeref:typename:bool	signature:(const DataRefImpl & a,const DataRefImpl & b)
ordinal	MachO.h	/^  int ordinal() const;$/;"	kind:p	class:llvm::object::MachOBindEntry	typeref:typename:int	access:public	signature:() const
other	MachO.h	/^  uint64_t other() const;$/;"	kind:p	class:llvm::object::ExportEntry	typeref:typename:uint64_t	access:public	signature:() const
otherName	MachO.h	/^  StringRef otherName() const;$/;"	kind:p	class:llvm::object::ExportEntry	typeref:typename:StringRef	access:public	signature:() const
p	SymbolicFile.h	/^  uintptr_t p;$/;"	kind:m	union:llvm::object::DataRefImpl	typeref:typename:uintptr_t	access:public
p_align	ELFTypes.h	/^  Elf_Word p_align;  \/\/ Segment alignment constraint$/;"	kind:m	struct:llvm::object::Elf_Phdr_Impl	typeref:typename:Elf_Word	access:public
p_align	ELFTypes.h	/^  Elf_Xword p_align;  \/\/ Segment alignment constraint$/;"	kind:m	struct:llvm::object::Elf_Phdr_Impl	typeref:typename:Elf_Xword	access:public
p_filesz	ELFTypes.h	/^  Elf_Word p_filesz; \/\/ Num. of bytes in file image of segment (may be zero)$/;"	kind:m	struct:llvm::object::Elf_Phdr_Impl	typeref:typename:Elf_Word	access:public
p_filesz	ELFTypes.h	/^  Elf_Xword p_filesz; \/\/ Num. of bytes in file image of segment (may be zero)$/;"	kind:m	struct:llvm::object::Elf_Phdr_Impl	typeref:typename:Elf_Xword	access:public
p_flags	ELFTypes.h	/^  Elf_Word p_flags;   \/\/ Segment flags$/;"	kind:m	struct:llvm::object::Elf_Phdr_Impl	typeref:typename:Elf_Word	access:public
p_flags	ELFTypes.h	/^  Elf_Word p_flags;  \/\/ Segment flags$/;"	kind:m	struct:llvm::object::Elf_Phdr_Impl	typeref:typename:Elf_Word	access:public
p_memsz	ELFTypes.h	/^  Elf_Word p_memsz;  \/\/ Num. of bytes in mem image of segment (may be zero)$/;"	kind:m	struct:llvm::object::Elf_Phdr_Impl	typeref:typename:Elf_Word	access:public
p_memsz	ELFTypes.h	/^  Elf_Xword p_memsz;  \/\/ Num. of bytes in mem image of segment (may be zero)$/;"	kind:m	struct:llvm::object::Elf_Phdr_Impl	typeref:typename:Elf_Xword	access:public
p_offset	ELFTypes.h	/^  Elf_Off p_offset;   \/\/ FileOffset where segment is located, in bytes$/;"	kind:m	struct:llvm::object::Elf_Phdr_Impl	typeref:typename:Elf_Off	access:public
p_offset	ELFTypes.h	/^  Elf_Off p_offset;  \/\/ FileOffset where segment is located, in bytes$/;"	kind:m	struct:llvm::object::Elf_Phdr_Impl	typeref:typename:Elf_Off	access:public
p_paddr	ELFTypes.h	/^  Elf_Addr p_paddr;   \/\/ Physical address of beginning of segment (OS-specific)$/;"	kind:m	struct:llvm::object::Elf_Phdr_Impl	typeref:typename:Elf_Addr	access:public
p_paddr	ELFTypes.h	/^  Elf_Addr p_paddr;  \/\/ Physical address of beginning of segment (OS-specific)$/;"	kind:m	struct:llvm::object::Elf_Phdr_Impl	typeref:typename:Elf_Addr	access:public
p_vaddr	ELFTypes.h	/^  Elf_Addr p_vaddr;   \/\/ Virtual Address of beginning of segment$/;"	kind:m	struct:llvm::object::Elf_Phdr_Impl	typeref:typename:Elf_Addr	access:public
p_vaddr	ELFTypes.h	/^  Elf_Addr p_vaddr;  \/\/ Virtual Address of beginning of segment$/;"	kind:m	struct:llvm::object::Elf_Phdr_Impl	typeref:typename:Elf_Addr	access:public
packed	ELFTypes.h	/^  using packed = support::detail::packed_endian_specific_integral<Ty, E, 2>;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:support::detail::packed_endian_specific_integral<Ty,E,2>	access:private
parse_failed	Error.h	/^  parse_failed,$/;"	kind:e	enum:llvm::object::object_error	access:public
pe32_header	COFF.h	/^struct pe32_header {$/;"	kind:s	namespace:llvm::object
pe32plus_header	COFF.h	/^struct pe32plus_header {$/;"	kind:s	namespace:llvm::object
printName	SymbolicFile.h	/^  std::error_code printName(raw_ostream &OS) const;$/;"	kind:p	class:llvm::object::BasicSymbolRef	typeref:typename:std::error_code	access:public	signature:(raw_ostream & OS) const
printName	SymbolicFile.h	/^inline std::error_code BasicSymbolRef::printName(raw_ostream &OS) const {$/;"	kind:f	class:llvm::object::BasicSymbolRef	typeref:typename:std::error_code	signature:(raw_ostream & OS) const
printSymbolName	COFFImportFile.h	/^  std::error_code printSymbolName(raw_ostream &OS,$/;"	kind:f	class:llvm::object::COFFImportFile	typeref:typename:std::error_code	access:public	signature:(raw_ostream & OS,DataRefImpl Symb) const
printSymbolName	IRObjectFile.h	/^  std::error_code printSymbolName(raw_ostream &OS,$/;"	kind:p	class:llvm::object::IRObjectFile	typeref:typename:std::error_code	access:public	signature:(raw_ostream & OS,DataRefImpl Symb) const
printSymbolName	ModuleSummaryIndexObjectFile.h	/^  std::error_code printSymbolName(raw_ostream &OS,$/;"	kind:f	class:llvm::object::ModuleSummaryIndexObjectFile	typeref:typename:std::error_code	access:public	signature:(raw_ostream & OS,DataRefImpl Symb) const
printSymbolName	ObjectFile.h	/^  std::error_code printSymbolName(raw_ostream &OS,$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:std::error_code	access:protected	signature:(raw_ostream & OS,DataRefImpl Symb) const
printSymbolName	SymbolicFile.h	/^  virtual std::error_code printSymbolName(raw_ostream &OS,$/;"	kind:p	class:llvm::object::SymbolicFile	typeref:typename:std::error_code	access:public	signature:(raw_ostream & OS,DataRefImpl Symb) const
program_headers	ELF.h	/^  Expected<Elf_Phdr_Range> program_headers() const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<Elf_Phdr_Range>	access:public	signature:() const
pushDownUntilBottom	MachO.h	/^  void pushDownUntilBottom();$/;"	kind:p	class:llvm::object::ExportEntry	typeref:typename:void	access:private	signature:()
pushNode	MachO.h	/^  void pushNode(uint64_t Offset);$/;"	kind:p	class:llvm::object::ExportEntry	typeref:typename:void	access:private	signature:(uint64_t Offset)
r_addend	ELFTypes.h	/^  Elf_Sword r_addend; \/\/ Compute value for relocatable field by adding this$/;"	kind:m	struct:llvm::object::Elf_Rel_Impl	typeref:typename:Elf_Sword	access:public
r_addend	ELFTypes.h	/^  Elf_Sxword r_addend; \/\/ Compute value for relocatable field by adding this.$/;"	kind:m	struct:llvm::object::Elf_Rel_Impl	typeref:typename:Elf_Sxword	access:public
r_info	ELFTypes.h	/^  Elf_Word r_info;   \/\/ Symbol table index and type of relocation to apply$/;"	kind:m	struct:llvm::object::Elf_Rel_Impl	typeref:typename:Elf_Word	access:public
r_info	ELFTypes.h	/^  Elf_Xword r_info;  \/\/ Symbol table index and type of relocation to apply$/;"	kind:m	struct:llvm::object::Elf_Rel_Impl	typeref:typename:Elf_Xword	access:public
r_offset	ELFTypes.h	/^  Elf_Addr r_offset; \/\/ Location (file byte offset, or program virtual addr)$/;"	kind:m	struct:llvm::object::Elf_Rel_Impl	typeref:typename:Elf_Addr	access:public
read	StackMapParser.h	/^  static T read(const uint8_t *P) {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:T	access:private	signature:(const uint8_t * P)
readSLEB128	MachO.h	/^  int64_t readSLEB128();$/;"	kind:p	class:llvm::object::MachOBindEntry	typeref:typename:int64_t	access:private	signature:()
readULEB128	MachO.h	/^  uint64_t readULEB128();$/;"	kind:p	class:llvm::object::MachOBindEntry	typeref:typename:uint64_t	access:private	signature:()
readULEB128	MachO.h	/^  uint64_t readULEB128();$/;"	kind:p	class:llvm::object::MachORebaseEntry	typeref:typename:uint64_t	access:private	signature:()
readULEB128	MachO.h	/^  uint64_t readULEB128(const uint8_t *&p);$/;"	kind:p	class:llvm::object::ExportEntry	typeref:typename:uint64_t	access:private	signature:(const uint8_t * & p)
rebaseTable	MachO.h	/^  iterator_range<rebase_iterator> rebaseTable() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:iterator_range<rebase_iterator>	access:public	signature:() const
rebaseTable	MachO.h	/^  static iterator_range<rebase_iterator> rebaseTable(ArrayRef<uint8_t> Opcodes,$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:iterator_range<rebase_iterator>	access:public	signature:(ArrayRef<uint8_t> Opcodes,bool is64)
rebase_iterator	MachO.h	/^typedef content_iterator<MachORebaseEntry> rebase_iterator;$/;"	kind:t	namespace:llvm::object	typeref:typename:content_iterator<MachORebaseEntry>
record_iterator	StackMapParser.h	/^  typedef AccessorIterator<RecordAccessor> record_iterator;$/;"	kind:t	class:llvm::StackMapV2Parser	typeref:typename:AccessorIterator<RecordAccessor>	access:public
records	StackMapParser.h	/^  iterator_range<record_iterator> records() const {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:iterator_range<record_iterator>	access:public	signature:() const
records_begin	StackMapParser.h	/^  record_iterator records_begin() const {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:record_iterator	access:public	signature:() const
records_end	StackMapParser.h	/^  record_iterator records_end() const {$/;"	kind:f	class:llvm::StackMapV2Parser	typeref:typename:record_iterator	access:public	signature:() const
relas	ELF.h	/^  Expected<Elf_Rela_Range> relas(const Elf_Shdr *Sec) const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<Elf_Rela_Range>	access:public	signature:(const Elf_Shdr * Sec) const
relocation_begin	ObjectFile.h	/^  relocation_iterator relocation_begin() const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:relocation_iterator	access:public	signature:() const
relocation_begin	ObjectFile.h	/^inline relocation_iterator SectionRef::relocation_begin() const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:relocation_iterator	signature:() const
relocation_end	ObjectFile.h	/^  relocation_iterator relocation_end() const;$/;"	kind:p	class:llvm::object::SectionRef	typeref:typename:relocation_iterator	access:public	signature:() const
relocation_end	ObjectFile.h	/^inline relocation_iterator SectionRef::relocation_end() const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:relocation_iterator	signature:() const
relocation_iterator	ObjectFile.h	/^typedef content_iterator<RelocationRef> relocation_iterator;$/;"	kind:t	namespace:llvm::object	typeref:typename:content_iterator<RelocationRef>
relocations	ObjectFile.h	/^  iterator_range<relocation_iterator> relocations() const {$/;"	kind:f	class:llvm::object::SectionRef	typeref:typename:iterator_range<relocation_iterator>	access:public	signature:() const
rels	ELF.h	/^  Expected<Elf_Rel_Range> rels(const Elf_Shdr *Sec) const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<Elf_Rel_Range>	access:public	signature:(const Elf_Shdr * Sec) const
ri_cprmask	ELFTypes.h	/^  Elf_Word ri_cprmask[4];  \/\/ bit-mask of used co-processor registers$/;"	kind:m	struct:llvm::object::Elf_Mips_RegInfo	typeref:typename:Elf_Word[4]	access:public
ri_gp_value	ELFTypes.h	/^  Elf_Addr ri_gp_value;    \/\/ gp register value$/;"	kind:m	struct:llvm::object::Elf_Mips_RegInfo	typeref:typename:Elf_Addr	access:public
ri_pad	ELFTypes.h	/^  Elf_Word ri_pad;         \/\/ unused padding field$/;"	kind:m	struct:llvm::object::Elf_Mips_RegInfo	typeref:typename:Elf_Word	access:public
section	ELFTypes.h	/^  Elf_Half section; \/\/ Section header index of section affected,$/;"	kind:m	struct:llvm::object::Elf_Mips_Options	typeref:typename:Elf_Half	access:public
section_begin	COFF.h	/^  section_iterator section_begin() const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:section_iterator	access:public	signature:() const
section_begin	ELFObjectFile.h	/^  section_iterator section_begin() const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:section_iterator	access:public	signature:() const
section_begin	ELFObjectFile.h	/^section_iterator ELFObjectFile<ELFT>::section_begin() const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:section_iterator	signature:() const
section_begin	MachO.h	/^  section_iterator section_begin() const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:section_iterator	access:public	signature:() const
section_begin	ObjectFile.h	/^  virtual section_iterator section_begin() const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:section_iterator	access:public	signature:() const
section_end	COFF.h	/^  section_iterator section_end() const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:section_iterator	access:public	signature:() const
section_end	ELFObjectFile.h	/^  section_iterator section_end() const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:section_iterator	access:public	signature:() const
section_end	ELFObjectFile.h	/^section_iterator ELFObjectFile<ELFT>::section_end() const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:section_iterator	signature:() const
section_end	MachO.h	/^  section_iterator section_end() const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:section_iterator	access:public	signature:() const
section_end	ObjectFile.h	/^  virtual section_iterator section_end() const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:section_iterator	access:public	signature:() const
section_iterator	ObjectFile.h	/^typedef content_iterator<SectionRef> section_iterator;$/;"	kind:t	namespace:llvm::object	typeref:typename:content_iterator<SectionRef>
section_iterator_range	ObjectFile.h	/^  typedef iterator_range<section_iterator> section_iterator_range;$/;"	kind:t	class:llvm::object::ObjectFile	typeref:typename:iterator_range<section_iterator>	access:public
section_rel_begin	COFF.h	/^  relocation_iterator section_rel_begin(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:relocation_iterator	access:protected	signature:(DataRefImpl Sec) const
section_rel_begin	ELFObjectFile.h	/^  relocation_iterator section_rel_begin(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:relocation_iterator	access:protected	signature:(DataRefImpl Sec) const
section_rel_begin	ELFObjectFile.h	/^ELFObjectFile<ELFT>::section_rel_begin(DataRefImpl Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:relocation_iterator	signature:(DataRefImpl Sec) const
section_rel_begin	MachO.h	/^  relocation_iterator section_rel_begin(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:relocation_iterator	access:public	signature:(DataRefImpl Sec) const
section_rel_begin	MachO.h	/^  relocation_iterator section_rel_begin(unsigned Index) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:relocation_iterator	access:public	signature:(unsigned Index) const
section_rel_begin	ObjectFile.h	/^  virtual relocation_iterator section_rel_begin(DataRefImpl Sec) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:relocation_iterator	access:protected	signature:(DataRefImpl Sec) const
section_rel_end	COFF.h	/^  relocation_iterator section_rel_end(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:relocation_iterator	access:protected	signature:(DataRefImpl Sec) const
section_rel_end	ELFObjectFile.h	/^  relocation_iterator section_rel_end(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:relocation_iterator	access:protected	signature:(DataRefImpl Sec) const
section_rel_end	ELFObjectFile.h	/^ELFObjectFile<ELFT>::section_rel_end(DataRefImpl Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:relocation_iterator	signature:(DataRefImpl Sec) const
section_rel_end	MachO.h	/^  relocation_iterator section_rel_end(DataRefImpl Sec) const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:relocation_iterator	access:public	signature:(DataRefImpl Sec) const
section_rel_end	MachO.h	/^  relocation_iterator section_rel_end(unsigned Index) const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:relocation_iterator	access:public	signature:(unsigned Index) const
section_rel_end	ObjectFile.h	/^  virtual relocation_iterator section_rel_end(DataRefImpl Sec) const = 0;$/;"	kind:p	class:llvm::object::ObjectFile	typeref:typename:relocation_iterator	access:protected	signature:(DataRefImpl Sec) const
sections	ELF.h	/^  Expected<Elf_Shdr_Range> sections() const;$/;"	kind:p	class:llvm::object::ELFFile	typeref:typename:Expected<Elf_Shdr_Range>	access:public	signature:() const
sections	ELF.h	/^Expected<typename ELFT::ShdrRange> ELFFile<ELFT>::sections() const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<typename ELFT::ShdrRange>	signature:() const
sections	ObjectFile.h	/^  section_iterator_range sections() const {$/;"	kind:f	class:llvm::object::ObjectFile	typeref:typename:section_iterator_range	access:public	signature:() const
segmentIndex	MachO.h	/^  uint32_t segmentIndex() const;$/;"	kind:p	class:llvm::object::MachOBindEntry	typeref:typename:uint32_t	access:public	signature:() const
segmentIndex	MachO.h	/^  uint32_t segmentIndex() const;$/;"	kind:p	class:llvm::object::MachORebaseEntry	typeref:typename:uint32_t	access:public	signature:() const
segmentOffset	MachO.h	/^  uint64_t segmentOffset() const;$/;"	kind:p	class:llvm::object::MachOBindEntry	typeref:typename:uint64_t	access:public	signature:() const
segmentOffset	MachO.h	/^  uint64_t segmentOffset() const;$/;"	kind:p	class:llvm::object::MachORebaseEntry	typeref:typename:uint64_t	access:public	signature:() const
setBinding	ELFTypes.h	/^  void setBinding(unsigned char b) { setBindingAndType(b, getType()); }$/;"	kind:f	struct:llvm::object::Elf_Sym_Impl	typeref:typename:void	access:public	signature:(unsigned char b)
setBindingAndType	ELFTypes.h	/^  void setBindingAndType(unsigned char b, unsigned char t) {$/;"	kind:f	struct:llvm::object::Elf_Sym_Impl	typeref:typename:void	access:public	signature:(unsigned char b,unsigned char t)
setFirstRegular	Archive.h	/^  void setFirstRegular(const Child &C);$/;"	kind:p	class:llvm::object::Archive	typeref:typename:void	access:private	signature:(const Child & C)
setRInfo	ELFTypes.h	/^  void setRInfo(uint32_t R, bool IsMips64EL) {$/;"	kind:f	struct:llvm::object::Elf_Rel_Impl	typeref:typename:void	access:public	signature:(uint32_t R,bool IsMips64EL)
setRInfo	ELFTypes.h	/^  void setRInfo(uint64_t R, bool IsMips64EL) {$/;"	kind:f	struct:llvm::object::Elf_Rel_Impl	typeref:typename:void	access:public	signature:(uint64_t R,bool IsMips64EL)
setSymbol	ELFTypes.h	/^  void setSymbol(uint32_t s, bool IsMips64EL) {$/;"	kind:f	struct:llvm::object::Elf_Rel_Impl	typeref:typename:void	access:public	signature:(uint32_t s,bool IsMips64EL)
setSymbolAndType	ELFTypes.h	/^  void setSymbolAndType(uint32_t s, uint32_t t, bool IsMips64EL) {$/;"	kind:f	struct:llvm::object::Elf_Rel_Impl	typeref:typename:void	access:public	signature:(uint32_t s,uint32_t t,bool IsMips64EL)
setSymbolAndType	ELFTypes.h	/^  void setSymbolAndType(uint32_t s, unsigned char t, bool IsMips64EL) {$/;"	kind:f	struct:llvm::object::Elf_Rel_Impl	typeref:typename:void	access:public	signature:(uint32_t s,unsigned char t,bool IsMips64EL)
setType	ELFTypes.h	/^  void setType(uint32_t t, bool IsMips64EL) {$/;"	kind:f	struct:llvm::object::Elf_Rel_Impl	typeref:typename:void	access:public	signature:(uint32_t t,bool IsMips64EL)
setType	ELFTypes.h	/^  void setType(unsigned char t) { setBindingAndType(getBinding(), t); }$/;"	kind:f	struct:llvm::object::Elf_Sym_Impl	typeref:typename:void	access:public	signature:(unsigned char t)
setType	ELFTypes.h	/^  void setType(unsigned char t, bool IsMips64EL) {$/;"	kind:f	struct:llvm::object::Elf_Rel_Impl	typeref:typename:void	access:public	signature:(unsigned char t,bool IsMips64EL)
setVisibility	ELFTypes.h	/^  void setVisibility(unsigned char v) {$/;"	kind:f	struct:llvm::object::Elf_Sym_Impl	typeref:typename:void	access:public	signature:(unsigned char v)
sh_addr	ELFTypes.h	/^  Elf_Addr sh_addr;       \/\/ Address where section is to be loaded$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Addr	access:public
sh_addr	ELFTypes.h	/^  Elf_Addr sh_addr;      \/\/ Address where section is to be loaded$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Addr	access:public
sh_addralign	ELFTypes.h	/^  Elf_Word sh_addralign; \/\/ Section address alignment$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Word	access:public
sh_addralign	ELFTypes.h	/^  Elf_Xword sh_addralign; \/\/ Section address alignment$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Xword	access:public
sh_entsize	ELFTypes.h	/^  Elf_Word sh_entsize;   \/\/ Size of records contained within the section$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Word	access:public
sh_entsize	ELFTypes.h	/^  Elf_Xword sh_entsize;   \/\/ Size of records contained within the section$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Xword	access:public
sh_flags	ELFTypes.h	/^  Elf_Word sh_flags;     \/\/ Section flags (SHF_*)$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Word	access:public
sh_flags	ELFTypes.h	/^  Elf_Xword sh_flags;     \/\/ Section flags (SHF_*)$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Xword	access:public
sh_info	ELFTypes.h	/^  Elf_Word sh_info;       \/\/ Section type-specific extra information$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Word	access:public
sh_info	ELFTypes.h	/^  Elf_Word sh_info;      \/\/ Section type-specific extra information$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Word	access:public
sh_link	ELFTypes.h	/^  Elf_Word sh_link;       \/\/ Section type-specific header table index link$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Word	access:public
sh_link	ELFTypes.h	/^  Elf_Word sh_link;      \/\/ Section type-specific header table index link$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Word	access:public
sh_offset	ELFTypes.h	/^  Elf_Off sh_offset;      \/\/ File offset of section data, in bytes$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Off	access:public
sh_offset	ELFTypes.h	/^  Elf_Off sh_offset;     \/\/ File offset of section data, in bytes$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Off	access:public
sh_size	ELFTypes.h	/^  Elf_Word sh_size;      \/\/ Size of section, in bytes$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Word	access:public
sh_size	ELFTypes.h	/^  Elf_Xword sh_size;      \/\/ Size of section, in bytes$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Xword	access:public
sh_type	ELFTypes.h	/^  Elf_Word sh_type;       \/\/ Section type (SHT_*)$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Word	access:public
sh_type	ELFTypes.h	/^  Elf_Word sh_type;      \/\/ Section type (SHT_*)$/;"	kind:m	struct:llvm::object::Elf_Shdr_Base	typeref:typename:Elf_Word	access:public
shift2	ELFTypes.h	/^  Elf_Word shift2;$/;"	kind:m	struct:llvm::object::Elf_GnuHash_Impl	typeref:typename:Elf_Word	access:public
size	ELFTypes.h	/^  uint8_t size;     \/\/ Byte size of descriptor, including this header$/;"	kind:m	struct:llvm::object::Elf_Mips_Options	typeref:typename:uint8_t	access:public
st_info	ELFTypes.h	/^  unsigned char st_info;  \/\/ Symbol's type and binding attributes$/;"	kind:m	struct:llvm::object::Elf_Sym_Base	typeref:typename:unsigned char	access:public
st_other	ELFTypes.h	/^  unsigned char st_other; \/\/ Must be zero; reserved$/;"	kind:m	struct:llvm::object::Elf_Sym_Base	typeref:typename:unsigned char	access:public
st_shndx	ELFTypes.h	/^  Elf_Half st_shndx;      \/\/ Which section (header table index) it's defined in$/;"	kind:m	struct:llvm::object::Elf_Sym_Base	typeref:typename:Elf_Half	access:public
st_size	ELFTypes.h	/^  Elf_Word st_size;       \/\/ Size of the symbol$/;"	kind:m	struct:llvm::object::Elf_Sym_Base	typeref:typename:Elf_Word	access:public
st_size	ELFTypes.h	/^  Elf_Xword st_size;      \/\/ Size of the symbol$/;"	kind:m	struct:llvm::object::Elf_Sym_Base	typeref:typename:Elf_Xword	access:public
st_value	ELFTypes.h	/^  Elf_Addr st_value;      \/\/ Value or address associated with the symbol$/;"	kind:m	struct:llvm::object::Elf_Sym_Base	typeref:typename:Elf_Addr	access:public
std	Error.h	/^namespace std {$/;"	kind:n
std::is_error_code_enum	Error.h	/^struct is_error_code_enum<llvm::object::object_error> : std::true_type {};$/;"	kind:s	namespace:std	inherits:std::true_type
string_table_non_null_end	Error.h	/^  string_table_non_null_end,$/;"	kind:e	enum:llvm::object::object_error	access:public
symbol	Archive.h	/^    Symbol symbol;$/;"	kind:m	class:llvm::object::Archive::symbol_iterator	typeref:typename:Symbol	access:private
symbolName	MachO.h	/^  StringRef symbolName() const;$/;"	kind:p	class:llvm::object::MachOBindEntry	typeref:typename:StringRef	access:public	signature:() const
symbol_begin	Archive.h	/^  symbol_iterator symbol_begin() const;$/;"	kind:p	class:llvm::object::Archive	typeref:typename:symbol_iterator	access:public	signature:() const
symbol_begin	COFF.h	/^  basic_symbol_iterator symbol_begin() const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:basic_symbol_iterator	access:public	signature:() const
symbol_begin	COFFImportFile.h	/^  basic_symbol_iterator symbol_begin() const override {$/;"	kind:f	class:llvm::object::COFFImportFile	typeref:typename:basic_symbol_iterator	access:public	signature:() const
symbol_begin	ELFObjectFile.h	/^  basic_symbol_iterator symbol_begin() const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:basic_symbol_iterator	access:public	signature:() const
symbol_begin	ELFObjectFile.h	/^basic_symbol_iterator ELFObjectFile<ELFT>::symbol_begin() const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:basic_symbol_iterator	signature:() const
symbol_begin	IRObjectFile.h	/^  basic_symbol_iterator symbol_begin() const override;$/;"	kind:p	class:llvm::object::IRObjectFile	typeref:typename:basic_symbol_iterator	access:public	signature:() const
symbol_begin	MachO.h	/^  basic_symbol_iterator symbol_begin() const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:basic_symbol_iterator	access:public	signature:() const
symbol_begin	ModuleSummaryIndexObjectFile.h	/^  basic_symbol_iterator symbol_begin() const override {$/;"	kind:f	class:llvm::object::ModuleSummaryIndexObjectFile	typeref:typename:basic_symbol_iterator	access:public	signature:() const
symbol_begin	SymbolicFile.h	/^  virtual basic_symbol_iterator symbol_begin() const = 0;$/;"	kind:p	class:llvm::object::SymbolicFile	typeref:typename:basic_symbol_iterator	access:public	signature:() const
symbol_end	Archive.h	/^  symbol_iterator symbol_end() const;$/;"	kind:p	class:llvm::object::Archive	typeref:typename:symbol_iterator	access:public	signature:() const
symbol_end	COFF.h	/^  basic_symbol_iterator symbol_end() const override;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:basic_symbol_iterator	access:public	signature:() const
symbol_end	COFFImportFile.h	/^  basic_symbol_iterator symbol_end() const override {$/;"	kind:f	class:llvm::object::COFFImportFile	typeref:typename:basic_symbol_iterator	access:public	signature:() const
symbol_end	ELFObjectFile.h	/^  basic_symbol_iterator symbol_end() const override;$/;"	kind:p	class:llvm::object::ELFObjectFile	typeref:typename:basic_symbol_iterator	access:public	signature:() const
symbol_end	ELFObjectFile.h	/^basic_symbol_iterator ELFObjectFile<ELFT>::symbol_end() const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:basic_symbol_iterator	signature:() const
symbol_end	IRObjectFile.h	/^  basic_symbol_iterator symbol_end() const override;$/;"	kind:p	class:llvm::object::IRObjectFile	typeref:typename:basic_symbol_iterator	access:public	signature:() const
symbol_end	MachO.h	/^  basic_symbol_iterator symbol_end() const override;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:basic_symbol_iterator	access:public	signature:() const
symbol_end	ModuleSummaryIndexObjectFile.h	/^  basic_symbol_iterator symbol_end() const override {$/;"	kind:f	class:llvm::object::ModuleSummaryIndexObjectFile	typeref:typename:basic_symbol_iterator	access:public	signature:() const
symbol_end	SymbolicFile.h	/^  virtual basic_symbol_iterator symbol_end() const = 0;$/;"	kind:p	class:llvm::object::SymbolicFile	typeref:typename:basic_symbol_iterator	access:public	signature:() const
symbol_iterator	Archive.h	/^    symbol_iterator(const Symbol &s) : symbol(s) {}$/;"	kind:f	class:llvm::object::Archive::symbol_iterator	access:public	signature:(const Symbol & s)
symbol_iterator	Archive.h	/^  class symbol_iterator {$/;"	kind:c	class:llvm::object::Archive	access:public
symbol_iterator	ObjectFile.h	/^  symbol_iterator(SymbolRef Sym) : basic_symbol_iterator(Sym) {}$/;"	kind:f	class:llvm::object::symbol_iterator	access:public	signature:(SymbolRef Sym)
symbol_iterator	ObjectFile.h	/^  symbol_iterator(const basic_symbol_iterator &B)$/;"	kind:f	class:llvm::object::symbol_iterator	access:public	signature:(const basic_symbol_iterator & B)
symbol_iterator	ObjectFile.h	/^class symbol_iterator : public basic_symbol_iterator {$/;"	kind:c	namespace:llvm::object	inherits:basic_symbol_iterator
symbol_iterator_range	ObjectFile.h	/^  typedef iterator_range<symbol_iterator> symbol_iterator_range;$/;"	kind:t	class:llvm::object::ObjectFile	typeref:typename:iterator_range<symbol_iterator>	access:public
symbols	Archive.h	/^  iterator_range<symbol_iterator> symbols() const {$/;"	kind:f	class:llvm::object::Archive	typeref:typename:iterator_range<symbol_iterator>	access:public	signature:() const
symbols	ELF.h	/^  Expected<Elf_Sym_Range> symbols(const Elf_Shdr *Sec) const {$/;"	kind:f	class:llvm::object::ELFFile	typeref:typename:Expected<Elf_Sym_Range>	access:public	signature:(const Elf_Shdr * Sec) const
symbols	ELFObjectFile.h	/^  elf_symbol_iterator_range symbols() const;$/;"	kind:p	class:llvm::object::ELFObjectFileBase	typeref:typename:elf_symbol_iterator_range	access:public	signature:() const
symbols	ELFObjectFile.h	/^ELFObjectFileBase::symbols() const {$/;"	kind:f	class:llvm::object::ELFObjectFileBase	typeref:typename:ELFObjectFileBase::elf_symbol_iterator_range	signature:() const
symbols	ObjectFile.h	/^  symbol_iterator_range symbols() const {$/;"	kind:f	class:llvm::object::ObjectFile	typeref:typename:symbol_iterator_range	access:public	signature:() const
symbols	SymbolicFile.h	/^  basic_symbol_iterator_range symbols() const {$/;"	kind:f	class:llvm::object::SymbolicFile	typeref:typename:basic_symbol_iterator_range	access:public	signature:() const
symndx	ELFTypes.h	/^  Elf_Word symndx;$/;"	kind:m	struct:llvm::object::Elf_GnuHash_Impl	typeref:typename:Elf_Word	access:public
takeBinary	Binary.h	/^  std::pair<std::unique_ptr<T>, std::unique_ptr<MemoryBuffer>> takeBinary();$/;"	kind:p	class:llvm::object::OwningBinary	typeref:typename:std::pair<std::unique_ptr<T>,std::unique_ptr<MemoryBuffer>>	access:public	signature:()
takeBinary	Binary.h	/^OwningBinary<T>::takeBinary() {$/;"	kind:f	class:llvm::object::OwningBinary	typeref:typename:std::pair<std::unique_ptr<T>,std::unique_ptr<MemoryBuffer>>	signature:()
takeIndex	ModuleSummaryIndexObjectFile.h	/^  std::unique_ptr<ModuleSummaryIndex> takeIndex();$/;"	kind:p	class:llvm::object::ModuleSummaryIndexObjectFile	typeref:typename:std::unique_ptr<ModuleSummaryIndex>	access:public	signature:()
takeModule	IRObjectFile.h	/^  std::unique_ptr<Module> takeModule();$/;"	kind:p	class:llvm::object::IRObjectFile	typeref:typename:std::unique_ptr<Module>	access:public	signature:()
takeThinBuffers	Archive.h	/^  std::vector<std::unique_ptr<MemoryBuffer>> takeThinBuffers() {$/;"	kind:f	class:llvm::object::Archive	typeref:typename:std::vector<std::unique_ptr<MemoryBuffer>>	access:public	signature:()
toDRI	ELFObjectFile.h	/^  DataRefImpl toDRI(const Elf_Dyn *Dyn) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:DataRefImpl	access:protected	signature:(const Elf_Dyn * Dyn) const
toDRI	ELFObjectFile.h	/^  DataRefImpl toDRI(const Elf_Shdr *Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:DataRefImpl	access:protected	signature:(const Elf_Shdr * Sec) const
toDRI	ELFObjectFile.h	/^  DataRefImpl toDRI(const Elf_Shdr *SymTable, unsigned SymbolNum) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:DataRefImpl	access:protected	signature:(const Elf_Shdr * SymTable,unsigned SymbolNum) const
toELFShdrIter	ELFObjectFile.h	/^  const Elf_Shdr *toELFShdrIter(DataRefImpl Sec) const {$/;"	kind:f	class:llvm::object::ELFObjectFile	typeref:typename:const Elf_Shdr *	access:protected	signature:(DataRefImpl Sec) const
toRel	COFF.h	/^  const coff_relocation *toRel(DataRefImpl Rel) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:const coff_relocation *	access:private	signature:(DataRefImpl Rel) const
toSec	COFF.h	/^  const coff_section *toSec(DataRefImpl Sec) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:const coff_section *	access:private	signature:(DataRefImpl Sec) const
toSymb	COFF.h	/^  const coff_symbol_type *toSymb(DataRefImpl Symb) const;$/;"	kind:p	class:llvm::object::COFFObjectFile	typeref:typename:const coff_symbol_type *	access:private	signature:(DataRefImpl Symb) const
typeName	MachO.h	/^  StringRef typeName() const;$/;"	kind:p	class:llvm::object::MachOBindEntry	typeref:typename:StringRef	access:public	signature:() const
typeName	MachO.h	/^  StringRef typeName() const;$/;"	kind:p	class:llvm::object::MachORebaseEntry	typeref:typename:StringRef	access:public	signature:() const
uint	ELFTypes.h	/^  typedef typename std::conditional<Is64, uint64_t, uint32_t>::type uint;$/;"	kind:t	struct:llvm::object::ELFType	typeref:typename:std::conditional<Is64,uint64_t,uint32_t>::type	access:public
uintX_t	ELF.h	/^  typedef typename ELFT::uint uintX_t;$/;"	kind:t	class:llvm::object::ELFFile	typeref:typename:ELFT::uint	access:public
uintX_t	ELFObjectFile.h	/^  typedef typename ELFFile<ELFT>::uintX_t uintX_t;$/;"	kind:t	class:llvm::object::ELFObjectFile	typeref:typename:ELFFile<ELFT>::uintX_t	access:public
uintX_t	ELFTypes.h	/^                                    uint64_t, uint32_t>::type uintX_t;$/;"	kind:t	struct:llvm::object::Elf_Dyn_Impl	typeref:typename:std::conditional<ELFT::Is64Bits,uint64_t,uint32_t>::type	access:public
unexpected_eof	Error.h	/^  unexpected_eof,$/;"	kind:e	enum:llvm::object::object_error	access:public
unused1	COFF.h	/^  support::ulittle32_t unused1;$/;"	kind:m	struct:llvm::object::coff_bigobj_file_header	typeref:typename:support::ulittle32_t	access:public
unused2	COFF.h	/^  support::ulittle32_t unused2;$/;"	kind:m	struct:llvm::object::coff_bigobj_file_header	typeref:typename:support::ulittle32_t	access:public
unused3	COFF.h	/^  support::ulittle32_t unused3;$/;"	kind:m	struct:llvm::object::coff_bigobj_file_header	typeref:typename:support::ulittle32_t	access:public
unused4	COFF.h	/^  support::ulittle32_t unused4;$/;"	kind:m	struct:llvm::object::coff_bigobj_file_header	typeref:typename:support::ulittle32_t	access:public
useBP	COFF.h	/^  bool useBP() const { return (Attributes >> 10) & 1; }$/;"	kind:f	struct:llvm::object::FpoData	typeref:typename:bool	access:public	signature:() const
value_type	ELFTypes.h	/^  typedef uint32_t value_type;$/;"	kind:t	struct:llvm::object::ELFDataTypeTypedefHelper	typeref:typename:uint32_t	access:public
value_type	ELFTypes.h	/^  typedef uint64_t value_type;$/;"	kind:t	struct:llvm::object::ELFDataTypeTypedefHelper	typeref:typename:uint64_t	access:public
values	ELFTypes.h	/^  ArrayRef<Elf_Word> values(unsigned DynamicSymCount) const {$/;"	kind:f	struct:llvm::object::Elf_GnuHash_Impl	typeref:typename:ArrayRef<Elf_Word>	access:public	signature:(unsigned DynamicSymCount) const
vd_aux	ELFTypes.h	/^  Elf_Word vd_aux;     \/\/ Offset to the first Verdaux entry (in bytes)$/;"	kind:m	struct:llvm::object::Elf_Verdef_Impl	typeref:typename:Elf_Word	access:public
vd_cnt	ELFTypes.h	/^  Elf_Half vd_cnt;     \/\/ Number of Verdaux entries$/;"	kind:m	struct:llvm::object::Elf_Verdef_Impl	typeref:typename:Elf_Half	access:public
vd_flags	ELFTypes.h	/^  Elf_Half vd_flags;   \/\/ Bitwise flags (VER_DEF_*)$/;"	kind:m	struct:llvm::object::Elf_Verdef_Impl	typeref:typename:Elf_Half	access:public
vd_hash	ELFTypes.h	/^  Elf_Word vd_hash;    \/\/ Hash of name$/;"	kind:m	struct:llvm::object::Elf_Verdef_Impl	typeref:typename:Elf_Word	access:public
vd_ndx	ELFTypes.h	/^  Elf_Half vd_ndx;     \/\/ Version index, used in .gnu.version entries$/;"	kind:m	struct:llvm::object::Elf_Verdef_Impl	typeref:typename:Elf_Half	access:public
vd_next	ELFTypes.h	/^  Elf_Word vd_next;    \/\/ Offset to the next Verdef entry (in bytes)$/;"	kind:m	struct:llvm::object::Elf_Verdef_Impl	typeref:typename:Elf_Word	access:public
vd_version	ELFTypes.h	/^  Elf_Half vd_version; \/\/ Version of this structure (e.g. VER_DEF_CURRENT)$/;"	kind:m	struct:llvm::object::Elf_Verdef_Impl	typeref:typename:Elf_Half	access:public
vda_next	ELFTypes.h	/^  Elf_Word vda_next; \/\/ Offset to next Verdaux entry (in bytes)$/;"	kind:m	struct:llvm::object::Elf_Verdaux_Impl	typeref:typename:Elf_Word	access:public
visit	RelocVisitor.h	/^  RelocToApply visit(uint32_t RelocType, RelocationRef R, uint64_t Value = 0) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:public	signature:(uint32_t RelocType,RelocationRef R,uint64_t Value=0)
visitCOFF	RelocVisitor.h	/^  RelocToApply visitCOFF(uint32_t RelocType, RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(uint32_t RelocType,RelocationRef R,uint64_t Value)
visitCOFF_AMD64_ADDR64	RelocVisitor.h	/^  RelocToApply visitCOFF_AMD64_ADDR64(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
visitCOFF_AMD64_SECREL	RelocVisitor.h	/^  RelocToApply visitCOFF_AMD64_SECREL(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
visitCOFF_I386_DIR32	RelocVisitor.h	/^  RelocToApply visitCOFF_I386_DIR32(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
visitCOFF_I386_SECREL	RelocVisitor.h	/^  RelocToApply visitCOFF_I386_SECREL(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
visitELF	RelocVisitor.h	/^  RelocToApply visitELF(uint32_t RelocType, RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(uint32_t RelocType,RelocationRef R,uint64_t Value)
visitELF_386_32	RelocVisitor.h	/^  RelocToApply visitELF_386_32(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
visitELF_386_NONE	RelocVisitor.h	/^  RelocToApply visitELF_386_NONE(RelocationRef R) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R)
visitELF_386_PC32	RelocVisitor.h	/^  RelocToApply visitELF_386_PC32(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
visitELF_390_32	RelocVisitor.h	/^  RelocToApply visitELF_390_32(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
visitELF_390_64	RelocVisitor.h	/^  RelocToApply visitELF_390_64(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
visitELF_AARCH64_ABS32	RelocVisitor.h	/^  RelocToApply visitELF_AARCH64_ABS32(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
visitELF_AARCH64_ABS64	RelocVisitor.h	/^  RelocToApply visitELF_AARCH64_ABS64(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
visitELF_AMDGPU_ABS32	RelocVisitor.h	/^  RelocToApply visitELF_AMDGPU_ABS32(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
visitELF_ARM_ABS32	RelocVisitor.h	/^  RelocToApply visitELF_ARM_ABS32(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
visitELF_BPF_64_32	RelocVisitor.h	/^  RelocToApply visitELF_BPF_64_32(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
visitELF_BPF_64_64	RelocVisitor.h	/^  RelocToApply visitELF_BPF_64_64(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
visitELF_HEX_32	RelocVisitor.h	/^  RelocToApply visitELF_HEX_32(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
visitELF_Lanai_32	RelocVisitor.h	/^  RelocToApply visitELF_Lanai_32(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
visitELF_MIPS64_32	RelocVisitor.h	/^  RelocToApply visitELF_MIPS64_32(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
visitELF_MIPS64_64	RelocVisitor.h	/^  RelocToApply visitELF_MIPS64_64(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
visitELF_MIPS_32	RelocVisitor.h	/^  RelocToApply visitELF_MIPS_32(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
visitELF_PPC64_ADDR32	RelocVisitor.h	/^  RelocToApply visitELF_PPC64_ADDR32(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
visitELF_PPC64_ADDR64	RelocVisitor.h	/^  RelocToApply visitELF_PPC64_ADDR64(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
visitELF_PPC_ADDR32	RelocVisitor.h	/^  RelocToApply visitELF_PPC_ADDR32(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
visitELF_SPARCV9_32	RelocVisitor.h	/^  RelocToApply visitELF_SPARCV9_32(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
visitELF_SPARCV9_64	RelocVisitor.h	/^  RelocToApply visitELF_SPARCV9_64(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
visitELF_SPARC_32	RelocVisitor.h	/^  RelocToApply visitELF_SPARC_32(RelocationRef R, uint32_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint32_t Value)
visitELF_X86_64_32	RelocVisitor.h	/^  RelocToApply visitELF_X86_64_32(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
visitELF_X86_64_32S	RelocVisitor.h	/^  RelocToApply visitELF_X86_64_32S(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
visitELF_X86_64_64	RelocVisitor.h	/^  RelocToApply visitELF_X86_64_64(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
visitELF_X86_64_NONE	RelocVisitor.h	/^  RelocToApply visitELF_X86_64_NONE(RelocationRef R) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R)
visitELF_X86_64_PC32	RelocVisitor.h	/^  RelocToApply visitELF_X86_64_PC32(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
visitMACHO_X86_64_UNSIGNED	RelocVisitor.h	/^  RelocToApply visitMACHO_X86_64_UNSIGNED(RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(RelocationRef R,uint64_t Value)
visitMachO	RelocVisitor.h	/^  RelocToApply visitMachO(uint32_t RelocType, RelocationRef R, uint64_t Value) {$/;"	kind:f	class:llvm::object::RelocVisitor	typeref:typename:RelocToApply	access:private	signature:(uint32_t RelocType,RelocationRef R,uint64_t Value)
vn_aux	ELFTypes.h	/^  Elf_Word vn_aux;     \/\/ Offset to first Vernaux entry (in bytes)$/;"	kind:m	struct:llvm::object::Elf_Verneed_Impl	typeref:typename:Elf_Word	access:public
vn_cnt	ELFTypes.h	/^  Elf_Half vn_cnt;     \/\/ Number of associated Vernaux entries$/;"	kind:m	struct:llvm::object::Elf_Verneed_Impl	typeref:typename:Elf_Half	access:public
vn_file	ELFTypes.h	/^  Elf_Word vn_file;    \/\/ Library name (string table offset)$/;"	kind:m	struct:llvm::object::Elf_Verneed_Impl	typeref:typename:Elf_Word	access:public
vn_next	ELFTypes.h	/^  Elf_Word vn_next;    \/\/ Offset to next Verneed entry (in bytes)$/;"	kind:m	struct:llvm::object::Elf_Verneed_Impl	typeref:typename:Elf_Word	access:public
vna_flags	ELFTypes.h	/^  Elf_Half vna_flags; \/\/ Bitwise Flags (VER_FLAG_*)$/;"	kind:m	struct:llvm::object::Elf_Vernaux_Impl	typeref:typename:Elf_Half	access:public
vna_name	ELFTypes.h	/^  Elf_Word vna_name;  \/\/ Dependency name$/;"	kind:m	struct:llvm::object::Elf_Vernaux_Impl	typeref:typename:Elf_Word	access:public
vna_next	ELFTypes.h	/^  Elf_Word vna_next;  \/\/ Offset to next Vernaux entry (in bytes)$/;"	kind:m	struct:llvm::object::Elf_Vernaux_Impl	typeref:typename:Elf_Word	access:public
vna_other	ELFTypes.h	/^  Elf_Half vna_other; \/\/ Version index, used in .gnu.version entries$/;"	kind:m	struct:llvm::object::Elf_Vernaux_Impl	typeref:typename:Elf_Half	access:public
weakBindTable	MachO.h	/^  iterator_range<bind_iterator> weakBindTable() const;$/;"	kind:p	class:llvm::object::MachOObjectFile	typeref:typename:iterator_range<bind_iterator>	access:public	signature:() const
writeArchive	ArchiveWriter.h	/^writeArchive(StringRef ArcName, std::vector<NewArchiveMember> &NewMembers,$/;"	kind:p	namespace:llvm	typeref:typename:std::pair<StringRef,std::error_code>	signature:(StringRef ArcName,std::vector<NewArchiveMember> & NewMembers,bool WriteSymtab,object::Archive::Kind Kind,bool Deterministic,bool Thin,std::unique_ptr<MemoryBuffer> OldArchiveBuf=nullptr)
~Binary	Binary.h	/^  virtual ~Binary();$/;"	kind:p	class:llvm::object::Binary	access:public	signature:()
~IRObjectFile	IRObjectFile.h	/^  ~IRObjectFile() override;$/;"	kind:p	class:llvm::object::IRObjectFile	access:public	signature:()
~ModuleSummaryIndexObjectFile	ModuleSummaryIndexObjectFile.h	/^  ~ModuleSummaryIndexObjectFile() override;$/;"	kind:p	class:llvm::object::ModuleSummaryIndexObjectFile	access:public	signature:()
~SymbolicFile	SymbolicFile.h	/^  ~SymbolicFile() override;$/;"	kind:p	class:llvm::object::SymbolicFile	access:public	signature:()
